#include "./firrtl-sig/uint.h"
#include <iostream>
#include <assert.h>
#include <stdlib.h>
using namespace std;

int main() {

	UInt<16> u61318("0xef86");
	UInt<16> u53515("0xd10b");
	UInt<16> u35644("0x8b3c");
	assert(u61318+u61318 == UInt<17>("0x1df0c"));
	assert(u61318-u61318 == UInt<17>("0x0"));
	assert(u61318*u61318 == UInt<32>("0xe01b7a24"));
	assert(0 == (u61318<u61318));
	assert(1 == (u61318<=u61318));
	assert(0 == (u61318>u61318));
	assert(1 == (u61318>=u61318));
	assert(1 == (u61318==u61318));
	assert(0 == (u61318!=u61318));
	assert(u61318.pad<3>() == UInt<16>("0xef86"));
	assert(u61318.shl<3>() == UInt<19>("0x77c30"));
	assert(u61318.shr<3>() == UInt<13>("0x1df0"));
	assert(u61318/u61318 == UInt<16>("0x1"));
	assert(u61318%u61318 == UInt<16>("0x0"));
	assert(u61318+u53515 == UInt<17>("0x1c091"));
	assert(u61318-u53515 == UInt<17>("0x1e7b"));
	assert(u61318*u53515 == UInt<32>("0xc396b0c2"));
	assert(0 == (u61318<u53515));
	assert(0 == (u61318<=u53515));
	assert(1 == (u61318>u53515));
	assert(1 == (u61318>=u53515));
	assert(0 == (u61318==u53515));
	assert(1 == (u61318!=u53515));
	assert(u61318.pad<3>() == UInt<16>("0xef86"));
	assert(u61318.shl<3>() == UInt<19>("0x77c30"));
	assert(u61318.shr<3>() == UInt<13>("0x1df0"));
	assert(u61318/u53515 == UInt<16>("0x1"));
	assert(u61318%u53515 == UInt<16>("0x1e7b"));
	assert(u61318+u35644 == UInt<17>("0x17ac2"));
	assert(u61318-u35644 == UInt<17>("0x644a"));
	assert(u61318*u35644 == UInt<32>("0x8245e568"));
	assert(0 == (u61318<u35644));
	assert(0 == (u61318<=u35644));
	assert(1 == (u61318>u35644));
	assert(1 == (u61318>=u35644));
	assert(0 == (u61318==u35644));
	assert(1 == (u61318!=u35644));
	assert(u61318.pad<3>() == UInt<16>("0xef86"));
	assert(u61318.shl<3>() == UInt<19>("0x77c30"));
	assert(u61318.shr<3>() == UInt<13>("0x1df0"));
	assert(u61318/u35644 == UInt<16>("0x1"));
	assert(u61318%u35644 == UInt<16>("0x644a"));
	assert(u53515+u61318 == UInt<17>("0x1c091"));
	assert(u53515-u61318 == UInt<17>("0x1e185"));
	assert(u53515*u61318 == UInt<32>("0xc396b0c2"));
	assert(1 == (u53515<u61318));
	assert(1 == (u53515<=u61318));
	assert(0 == (u53515>u61318));
	assert(0 == (u53515>=u61318));
	assert(0 == (u53515==u61318));
	assert(1 == (u53515!=u61318));
	assert(u53515.pad<3>() == UInt<16>("0xd10b"));
	assert(u53515.shl<3>() == UInt<19>("0x68858"));
	assert(u53515.shr<3>() == UInt<13>("0x1a21"));
	assert(u53515/u61318 == UInt<16>("0x0"));
	assert(u53515%u61318 == UInt<16>("0xd10b"));
	assert(u53515+u53515 == UInt<17>("0x1a216"));
	assert(u53515-u53515 == UInt<17>("0x0"));
	assert(u53515*u53515 == UInt<32>("0xaab2f679"));
	assert(0 == (u53515<u53515));
	assert(1 == (u53515<=u53515));
	assert(0 == (u53515>u53515));
	assert(1 == (u53515>=u53515));
	assert(1 == (u53515==u53515));
	assert(0 == (u53515!=u53515));
	assert(u53515.pad<3>() == UInt<16>("0xd10b"));
	assert(u53515.shl<3>() == UInt<19>("0x68858"));
	assert(u53515.shr<3>() == UInt<13>("0x1a21"));
	assert(u53515/u53515 == UInt<16>("0x1"));
	assert(u53515%u53515 == UInt<16>("0x0"));
	assert(u53515+u35644 == UInt<17>("0x15c47"));
	assert(u53515-u35644 == UInt<17>("0x45cf"));
	assert(u53515*u35644 == UInt<32>("0x71b1f794"));
	assert(0 == (u53515<u35644));
	assert(0 == (u53515<=u35644));
	assert(1 == (u53515>u35644));
	assert(1 == (u53515>=u35644));
	assert(0 == (u53515==u35644));
	assert(1 == (u53515!=u35644));
	assert(u53515.pad<3>() == UInt<16>("0xd10b"));
	assert(u53515.shl<3>() == UInt<19>("0x68858"));
	assert(u53515.shr<3>() == UInt<13>("0x1a21"));
	assert(u53515/u35644 == UInt<16>("0x1"));
	assert(u53515%u35644 == UInt<16>("0x45cf"));
	assert(u35644+u61318 == UInt<17>("0x17ac2"));
	assert(u35644-u61318 == UInt<17>("0x19bb6"));
	assert(u35644*u61318 == UInt<32>("0x8245e568"));
	assert(1 == (u35644<u61318));
	assert(1 == (u35644<=u61318));
	assert(0 == (u35644>u61318));
	assert(0 == (u35644>=u61318));
	assert(0 == (u35644==u61318));
	assert(1 == (u35644!=u61318));
	assert(u35644.pad<3>() == UInt<16>("0x8b3c"));
	assert(u35644.shl<3>() == UInt<19>("0x459e0"));
	assert(u35644.shr<3>() == UInt<13>("0x1167"));
	assert(u35644/u61318 == UInt<16>("0x0"));
	assert(u35644%u61318 == UInt<16>("0x8b3c"));
	assert(u35644+u53515 == UInt<17>("0x15c47"));
	assert(u35644-u53515 == UInt<17>("0x1ba31"));
	assert(u35644*u53515 == UInt<32>("0x71b1f794"));
	assert(1 == (u35644<u53515));
	assert(1 == (u35644<=u53515));
	assert(0 == (u35644>u53515));
	assert(0 == (u35644>=u53515));
	assert(0 == (u35644==u53515));
	assert(1 == (u35644!=u53515));
	assert(u35644.pad<3>() == UInt<16>("0x8b3c"));
	assert(u35644.shl<3>() == UInt<19>("0x459e0"));
	assert(u35644.shr<3>() == UInt<13>("0x1167"));
	assert(u35644/u53515 == UInt<16>("0x0"));
	assert(u35644%u53515 == UInt<16>("0x8b3c"));
	assert(u35644+u35644 == UInt<17>("0x11678"));
	assert(u35644-u35644 == UInt<17>("0x0"));
	assert(u35644*u35644 == UInt<32>("0x4bba3610"));
	assert(0 == (u35644<u35644));
	assert(1 == (u35644<=u35644));
	assert(0 == (u35644>u35644));
	assert(1 == (u35644>=u35644));
	assert(1 == (u35644==u35644));
	assert(0 == (u35644!=u35644));
	assert(u35644.pad<3>() == UInt<16>("0x8b3c"));
	assert(u35644.shl<3>() == UInt<19>("0x459e0"));
	assert(u35644.shr<3>() == UInt<13>("0x1167"));
	assert(u35644/u35644 == UInt<16>("0x1"));
	assert(u35644%u35644 == UInt<16>("0x0"));
	UInt<32> u2463075247("0x92cf8baf");
	UInt<32> u4160593687("0xf7fd9f17");
	UInt<32> u3167632767("0xbcce3d7f");
	assert(u2463075247+u2463075247 == UInt<33>("0x1259f175e"));
	assert(u2463075247-u2463075247 == UInt<33>("0x0"));
	assert(u2463075247*u2463075247 == UInt<64>("0x54316396cd3981a1"));
	assert(0 == (u2463075247<u2463075247));
	assert(1 == (u2463075247<=u2463075247));
	assert(0 == (u2463075247>u2463075247));
	assert(1 == (u2463075247>=u2463075247));
	assert(1 == (u2463075247==u2463075247));
	assert(0 == (u2463075247!=u2463075247));
	assert(u2463075247.pad<3>() == UInt<32>("0x92cf8baf"));
	assert(u2463075247.shl<3>() == UInt<35>("0x4967c5d78"));
	assert(u2463075247.shr<3>() == UInt<29>("0x1259f175"));
	assert(u2463075247/u2463075247 == UInt<32>("0x1"));
	assert(u2463075247%u2463075247 == UInt<32>("0x0"));
	assert(u2463075247+u4160593687 == UInt<33>("0x18acd2ac6"));
	assert(u2463075247-u4160593687 == UInt<33>("0x19ad1ec98"));
	assert(u2463075247*u4160593687 == UInt<64>("0x8e37b21efd5a3db9"));
	assert(1 == (u2463075247<u4160593687));
	assert(1 == (u2463075247<=u4160593687));
	assert(0 == (u2463075247>u4160593687));
	assert(0 == (u2463075247>=u4160593687));
	assert(0 == (u2463075247==u4160593687));
	assert(1 == (u2463075247!=u4160593687));
	assert(u2463075247.pad<3>() == UInt<32>("0x92cf8baf"));
	assert(u2463075247.shl<3>() == UInt<35>("0x4967c5d78"));
	assert(u2463075247.shr<3>() == UInt<29>("0x1259f175"));
	assert(u2463075247/u4160593687 == UInt<32>("0x0"));
	assert(u2463075247%u4160593687 == UInt<32>("0x92cf8baf"));
	assert(u2463075247+u3167632767 == UInt<33>("0x14f9dc92e"));
	assert(u2463075247-u3167632767 == UInt<33>("0x1d6014e30"));
	assert(u2463075247*u3167632767 == UInt<64>("0x6c46b0db3410fed1"));
	assert(1 == (u2463075247<u3167632767));
	assert(1 == (u2463075247<=u3167632767));
	assert(0 == (u2463075247>u3167632767));
	assert(0 == (u2463075247>=u3167632767));
	assert(0 == (u2463075247==u3167632767));
	assert(1 == (u2463075247!=u3167632767));
	assert(u2463075247.pad<3>() == UInt<32>("0x92cf8baf"));
	assert(u2463075247.shl<3>() == UInt<35>("0x4967c5d78"));
	assert(u2463075247.shr<3>() == UInt<29>("0x1259f175"));
	assert(u2463075247/u3167632767 == UInt<32>("0x0"));
	assert(u2463075247%u3167632767 == UInt<32>("0x92cf8baf"));
	assert(u4160593687+u2463075247 == UInt<33>("0x18acd2ac6"));
	assert(u4160593687-u2463075247 == UInt<33>("0x652e1368"));
	assert(u4160593687*u2463075247 == UInt<64>("0x8e37b21efd5a3db9"));
	assert(0 == (u4160593687<u2463075247));
	assert(0 == (u4160593687<=u2463075247));
	assert(1 == (u4160593687>u2463075247));
	assert(1 == (u4160593687>=u2463075247));
	assert(0 == (u4160593687==u2463075247));
	assert(1 == (u4160593687!=u2463075247));
	assert(u4160593687.pad<3>() == UInt<32>("0xf7fd9f17"));
	assert(u4160593687.shl<3>() == UInt<35>("0x7bfecf8b8"));
	assert(u4160593687.shr<3>() == UInt<29>("0x1effb3e2"));
	assert(u4160593687/u2463075247 == UInt<32>("0x1"));
	assert(u4160593687%u2463075247 == UInt<32>("0x652e1368"));
	assert(u4160593687+u4160593687 == UInt<33>("0x1effb3e2e"));
	assert(u4160593687-u4160593687 == UInt<33>("0x0"));
	assert(u4160593687*u4160593687 == UInt<64>("0xf03b644238539411"));
	assert(0 == (u4160593687<u4160593687));
	assert(1 == (u4160593687<=u4160593687));
	assert(0 == (u4160593687>u4160593687));
	assert(1 == (u4160593687>=u4160593687));
	assert(1 == (u4160593687==u4160593687));
	assert(0 == (u4160593687!=u4160593687));
	assert(u4160593687.pad<3>() == UInt<32>("0xf7fd9f17"));
	assert(u4160593687.shl<3>() == UInt<35>("0x7bfecf8b8"));
	assert(u4160593687.shr<3>() == UInt<29>("0x1effb3e2"));
	assert(u4160593687/u4160593687 == UInt<32>("0x1"));
	assert(u4160593687%u4160593687 == UInt<32>("0x0"));
	assert(u4160593687+u3167632767 == UInt<33>("0x1b4cbdc96"));
	assert(u4160593687-u3167632767 == UInt<33>("0x3b2f6198"));
	assert(u4160593687*u3167632767 == UInt<64>("0xb6e60a7d5e3c6769"));
	assert(0 == (u4160593687<u3167632767));
	assert(0 == (u4160593687<=u3167632767));
	assert(1 == (u4160593687>u3167632767));
	assert(1 == (u4160593687>=u3167632767));
	assert(0 == (u4160593687==u3167632767));
	assert(1 == (u4160593687!=u3167632767));
	assert(u4160593687.pad<3>() == UInt<32>("0xf7fd9f17"));
	assert(u4160593687.shl<3>() == UInt<35>("0x7bfecf8b8"));
	assert(u4160593687.shr<3>() == UInt<29>("0x1effb3e2"));
	assert(u4160593687/u3167632767 == UInt<32>("0x1"));
	assert(u4160593687%u3167632767 == UInt<32>("0x3b2f6198"));
	assert(u3167632767+u2463075247 == UInt<33>("0x14f9dc92e"));
	assert(u3167632767-u2463075247 == UInt<33>("0x29feb1d0"));
	assert(u3167632767*u2463075247 == UInt<64>("0x6c46b0db3410fed1"));
	assert(0 == (u3167632767<u2463075247));
	assert(0 == (u3167632767<=u2463075247));
	assert(1 == (u3167632767>u2463075247));
	assert(1 == (u3167632767>=u2463075247));
	assert(0 == (u3167632767==u2463075247));
	assert(1 == (u3167632767!=u2463075247));
	assert(u3167632767.pad<3>() == UInt<32>("0xbcce3d7f"));
	assert(u3167632767.shl<3>() == UInt<35>("0x5e671ebf8"));
	assert(u3167632767.shr<3>() == UInt<29>("0x1799c7af"));
	assert(u3167632767/u2463075247 == UInt<32>("0x1"));
	assert(u3167632767%u2463075247 == UInt<32>("0x29feb1d0"));
	assert(u3167632767+u4160593687 == UInt<33>("0x1b4cbdc96"));
	assert(u3167632767-u4160593687 == UInt<33>("0x1c4d09e68"));
	assert(u3167632767*u4160593687 == UInt<64>("0xb6e60a7d5e3c6769"));
	assert(1 == (u3167632767<u4160593687));
	assert(1 == (u3167632767<=u4160593687));
	assert(0 == (u3167632767>u4160593687));
	assert(0 == (u3167632767>=u4160593687));
	assert(0 == (u3167632767==u4160593687));
	assert(1 == (u3167632767!=u4160593687));
	assert(u3167632767.pad<3>() == UInt<32>("0xbcce3d7f"));
	assert(u3167632767.shl<3>() == UInt<35>("0x5e671ebf8"));
	assert(u3167632767.shr<3>() == UInt<29>("0x1799c7af"));
	assert(u3167632767/u4160593687 == UInt<32>("0x0"));
	assert(u3167632767%u4160593687 == UInt<32>("0xbcce3d7f"));
	assert(u3167632767+u3167632767 == UInt<33>("0x1799c7afe"));
	assert(u3167632767-u3167632767 == UInt<33>("0x0"));
	assert(u3167632767*u3167632767 == UInt<64>("0x8b3f90798f29c501"));
	assert(0 == (u3167632767<u3167632767));
	assert(1 == (u3167632767<=u3167632767));
	assert(0 == (u3167632767>u3167632767));
	assert(1 == (u3167632767>=u3167632767));
	assert(1 == (u3167632767==u3167632767));
	assert(0 == (u3167632767!=u3167632767));
	assert(u3167632767.pad<3>() == UInt<32>("0xbcce3d7f"));
	assert(u3167632767.shl<3>() == UInt<35>("0x5e671ebf8"));
	assert(u3167632767.shr<3>() == UInt<29>("0x1799c7af"));
	assert(u3167632767/u3167632767 == UInt<32>("0x1"));
	assert(u3167632767%u3167632767 == UInt<32>("0x0"));
	UInt<127> u134155869690317371815605048881379839479("0x64ed7b0cdfb4e1fdbab27076f4a08df7");
	UInt<127> u139362762743816948819861224732153121685("0x68d84ab2c148c4806d8b5c1ead308b95");
	UInt<127> u135391248938256420111254393115165339793("0x65db67f3249a674525144f26a1983091");
	assert(u134155869690317371815605048881379839479+u134155869690317371815605048881379839479 == UInt<128>("0xc9daf619bf69c3fb7564e0ede9411bee"));
	assert(u134155869690317371815605048881379839479-u134155869690317371815605048881379839479 == UInt<128>("0x0"));
	assert(u134155869690317371815605048881379839479*u134155869690317371815605048881379839479 == UInt<254>("0x27ca646f1fc0e5163742b8f8c3bca2eea6d18f33268a9319417973049b7a0451"));
	assert(0 == (u134155869690317371815605048881379839479<u134155869690317371815605048881379839479));
	assert(1 == (u134155869690317371815605048881379839479<=u134155869690317371815605048881379839479));
	assert(0 == (u134155869690317371815605048881379839479>u134155869690317371815605048881379839479));
	assert(1 == (u134155869690317371815605048881379839479>=u134155869690317371815605048881379839479));
	assert(1 == (u134155869690317371815605048881379839479==u134155869690317371815605048881379839479));
	assert(0 == (u134155869690317371815605048881379839479!=u134155869690317371815605048881379839479));
	assert(u134155869690317371815605048881379839479.pad<3>() == UInt<127>("0x64ed7b0cdfb4e1fdbab27076f4a08df7"));
	assert(u134155869690317371815605048881379839479.shl<3>() == UInt<130>("0x3276bd866fda70fedd59383b7a5046fb8"));
	assert(u134155869690317371815605048881379839479.shr<3>() == UInt<124>("0xc9daf619bf69c3fb7564e0ede9411be"));
	assert(u134155869690317371815605048881379839479+u139362762743816948819861224732153121685 == UInt<128>("0xcdc5c5bfa0fda67e283dcc95a1d1198c"));
	assert(u134155869690317371815605048881379839479-u139362762743816948819861224732153121685 == UInt<128>("0xfc15305a1e6c1d7d4d27145847700262"));
	assert(u134155869690317371815605048881379839479*u139362762743816948819861224732153121685 == UInt<254>("0x2955bfd02ca33e135b703840887aa865539510e45b3d197ba47cd10c17d7bdc3"));
	assert(1 == (u134155869690317371815605048881379839479<u139362762743816948819861224732153121685));
	assert(1 == (u134155869690317371815605048881379839479<=u139362762743816948819861224732153121685));
	assert(0 == (u134155869690317371815605048881379839479>u139362762743816948819861224732153121685));
	assert(0 == (u134155869690317371815605048881379839479>=u139362762743816948819861224732153121685));
	assert(0 == (u134155869690317371815605048881379839479==u139362762743816948819861224732153121685));
	assert(1 == (u134155869690317371815605048881379839479!=u139362762743816948819861224732153121685));
	assert(u134155869690317371815605048881379839479.pad<3>() == UInt<127>("0x64ed7b0cdfb4e1fdbab27076f4a08df7"));
	assert(u134155869690317371815605048881379839479.shl<3>() == UInt<130>("0x3276bd866fda70fedd59383b7a5046fb8"));
	assert(u134155869690317371815605048881379839479.shr<3>() == UInt<124>("0xc9daf619bf69c3fb7564e0ede9411be"));
	assert(u134155869690317371815605048881379839479+u135391248938256420111254393115165339793 == UInt<128>("0xcac8e300044f4942dfc6bf9d9638be88"));
	assert(u134155869690317371815605048881379839479-u135391248938256420111254393115165339793 == UInt<128>("0xff121319bb1a7ab8959e215053085d66"));
	assert(u134155869690317371815605048881379839479*u135391248938256420111254393115165339793 == UInt<254>("0x282831afc0a1fd0132ad6697d7bdd7a3666ff5b9cdb7032e709285854b36b8e7"));
	assert(1 == (u134155869690317371815605048881379839479<u135391248938256420111254393115165339793));
	assert(1 == (u134155869690317371815605048881379839479<=u135391248938256420111254393115165339793));
	assert(0 == (u134155869690317371815605048881379839479>u135391248938256420111254393115165339793));
	assert(0 == (u134155869690317371815605048881379839479>=u135391248938256420111254393115165339793));
	assert(0 == (u134155869690317371815605048881379839479==u135391248938256420111254393115165339793));
	assert(1 == (u134155869690317371815605048881379839479!=u135391248938256420111254393115165339793));
	assert(u134155869690317371815605048881379839479.pad<3>() == UInt<127>("0x64ed7b0cdfb4e1fdbab27076f4a08df7"));
	assert(u134155869690317371815605048881379839479.shl<3>() == UInt<130>("0x3276bd866fda70fedd59383b7a5046fb8"));
	assert(u134155869690317371815605048881379839479.shr<3>() == UInt<124>("0xc9daf619bf69c3fb7564e0ede9411be"));
	assert(u139362762743816948819861224732153121685+u134155869690317371815605048881379839479 == UInt<128>("0xcdc5c5bfa0fda67e283dcc95a1d1198c"));
	assert(u139362762743816948819861224732153121685-u134155869690317371815605048881379839479 == UInt<128>("0x3eacfa5e193e282b2d8eba7b88ffd9e"));
	assert(u139362762743816948819861224732153121685*u134155869690317371815605048881379839479 == UInt<254>("0x2955bfd02ca33e135b703840887aa865539510e45b3d197ba47cd10c17d7bdc3"));
	assert(0 == (u139362762743816948819861224732153121685<u134155869690317371815605048881379839479));
	assert(0 == (u139362762743816948819861224732153121685<=u134155869690317371815605048881379839479));
	assert(1 == (u139362762743816948819861224732153121685>u134155869690317371815605048881379839479));
	assert(1 == (u139362762743816948819861224732153121685>=u134155869690317371815605048881379839479));
	assert(0 == (u139362762743816948819861224732153121685==u134155869690317371815605048881379839479));
	assert(1 == (u139362762743816948819861224732153121685!=u134155869690317371815605048881379839479));
	assert(u139362762743816948819861224732153121685.pad<3>() == UInt<127>("0x68d84ab2c148c4806d8b5c1ead308b95"));
	assert(u139362762743816948819861224732153121685.shl<3>() == UInt<130>("0x346c255960a4624036c5ae0f569845ca8"));
	assert(u139362762743816948819861224732153121685.shr<3>() == UInt<124>("0xd1b0956582918900db16b83d5a61172"));
	assert(u139362762743816948819861224732153121685+u139362762743816948819861224732153121685 == UInt<128>("0xd1b0956582918900db16b83d5a61172a"));
	assert(u139362762743816948819861224732153121685-u139362762743816948819861224732153121685 == UInt<128>("0x0"));
	assert(u139362762743816948819861224732153121685*u139362762743816948819861224732153121685 == UInt<254>("0x2af0736f607d1f035e7464ea0bc83192b553ed27fe0936bc66ac74c805fb24b9"));
	assert(0 == (u139362762743816948819861224732153121685<u139362762743816948819861224732153121685));
	assert(1 == (u139362762743816948819861224732153121685<=u139362762743816948819861224732153121685));
	assert(0 == (u139362762743816948819861224732153121685>u139362762743816948819861224732153121685));
	assert(1 == (u139362762743816948819861224732153121685>=u139362762743816948819861224732153121685));
	assert(1 == (u139362762743816948819861224732153121685==u139362762743816948819861224732153121685));
	assert(0 == (u139362762743816948819861224732153121685!=u139362762743816948819861224732153121685));
	assert(u139362762743816948819861224732153121685.pad<3>() == UInt<127>("0x68d84ab2c148c4806d8b5c1ead308b95"));
	assert(u139362762743816948819861224732153121685.shl<3>() == UInt<130>("0x346c255960a4624036c5ae0f569845ca8"));
	assert(u139362762743816948819861224732153121685.shr<3>() == UInt<124>("0xd1b0956582918900db16b83d5a61172"));
	assert(u139362762743816948819861224732153121685+u135391248938256420111254393115165339793 == UInt<128>("0xceb3b2a5e5e32bc5929fab454ec8bc26"));
	assert(u139362762743816948819861224732153121685-u135391248938256420111254393115165339793 == UInt<128>("0x2fce2bf9cae5d3b48770cf80b985b04"));
	assert(u139362762743816948819861224732153121685*u135391248938256420111254393115165339793 == UInt<254>("0x29b7311307878921ee780701d77e736f37a77a8f97a053164b42fd92c822ff65"));
	assert(0 == (u139362762743816948819861224732153121685<u135391248938256420111254393115165339793));
	assert(0 == (u139362762743816948819861224732153121685<=u135391248938256420111254393115165339793));
	assert(1 == (u139362762743816948819861224732153121685>u135391248938256420111254393115165339793));
	assert(1 == (u139362762743816948819861224732153121685>=u135391248938256420111254393115165339793));
	assert(0 == (u139362762743816948819861224732153121685==u135391248938256420111254393115165339793));
	assert(1 == (u139362762743816948819861224732153121685!=u135391248938256420111254393115165339793));
	assert(u139362762743816948819861224732153121685.pad<3>() == UInt<127>("0x68d84ab2c148c4806d8b5c1ead308b95"));
	assert(u139362762743816948819861224732153121685.shl<3>() == UInt<130>("0x346c255960a4624036c5ae0f569845ca8"));
	assert(u139362762743816948819861224732153121685.shr<3>() == UInt<124>("0xd1b0956582918900db16b83d5a61172"));
	assert(u135391248938256420111254393115165339793+u134155869690317371815605048881379839479 == UInt<128>("0xcac8e300044f4942dfc6bf9d9638be88"));
	assert(u135391248938256420111254393115165339793-u134155869690317371815605048881379839479 == UInt<128>("0xedece644e585476a61deafacf7a29a"));
	assert(u135391248938256420111254393115165339793*u134155869690317371815605048881379839479 == UInt<254>("0x282831afc0a1fd0132ad6697d7bdd7a3666ff5b9cdb7032e709285854b36b8e7"));
	assert(0 == (u135391248938256420111254393115165339793<u134155869690317371815605048881379839479));
	assert(0 == (u135391248938256420111254393115165339793<=u134155869690317371815605048881379839479));
	assert(1 == (u135391248938256420111254393115165339793>u134155869690317371815605048881379839479));
	assert(1 == (u135391248938256420111254393115165339793>=u134155869690317371815605048881379839479));
	assert(0 == (u135391248938256420111254393115165339793==u134155869690317371815605048881379839479));
	assert(1 == (u135391248938256420111254393115165339793!=u134155869690317371815605048881379839479));
	assert(u135391248938256420111254393115165339793.pad<3>() == UInt<127>("0x65db67f3249a674525144f26a1983091"));
	assert(u135391248938256420111254393115165339793.shl<3>() == UInt<130>("0x32edb3f9924d33a2928a279350cc18488"));
	assert(u135391248938256420111254393115165339793.shr<3>() == UInt<124>("0xcbb6cfe64934ce8a4a289e4d4330612"));
	assert(u135391248938256420111254393115165339793+u139362762743816948819861224732153121685 == UInt<128>("0xceb3b2a5e5e32bc5929fab454ec8bc26"));
	assert(u135391248938256420111254393115165339793-u139362762743816948819861224732153121685 == UInt<128>("0xfd031d406351a2c4b788f307f467a4fc"));
	assert(u135391248938256420111254393115165339793*u139362762743816948819861224732153121685 == UInt<254>("0x29b7311307878921ee780701d77e736f37a77a8f97a053164b42fd92c822ff65"));
	assert(1 == (u135391248938256420111254393115165339793<u139362762743816948819861224732153121685));
	assert(1 == (u135391248938256420111254393115165339793<=u139362762743816948819861224732153121685));
	assert(0 == (u135391248938256420111254393115165339793>u139362762743816948819861224732153121685));
	assert(0 == (u135391248938256420111254393115165339793>=u139362762743816948819861224732153121685));
	assert(0 == (u135391248938256420111254393115165339793==u139362762743816948819861224732153121685));
	assert(1 == (u135391248938256420111254393115165339793!=u139362762743816948819861224732153121685));
	assert(u135391248938256420111254393115165339793.pad<3>() == UInt<127>("0x65db67f3249a674525144f26a1983091"));
	assert(u135391248938256420111254393115165339793.shl<3>() == UInt<130>("0x32edb3f9924d33a2928a279350cc18488"));
	assert(u135391248938256420111254393115165339793.shr<3>() == UInt<124>("0xcbb6cfe64934ce8a4a289e4d4330612"));
	assert(u135391248938256420111254393115165339793+u135391248938256420111254393115165339793 == UInt<128>("0xcbb6cfe64934ce8a4a289e4d43306122"));
	assert(u135391248938256420111254393115165339793-u135391248938256420111254393115165339793 == UInt<128>("0x0"));
	assert(u135391248938256420111254393115165339793*u135391248938256420111254393115165339793 == UInt<254>("0x2886dc10df18040c0104f27a7f20f34a3206bb626acaf78bcdd0b09c1766b221"));
	assert(0 == (u135391248938256420111254393115165339793<u135391248938256420111254393115165339793));
	assert(1 == (u135391248938256420111254393115165339793<=u135391248938256420111254393115165339793));
	assert(0 == (u135391248938256420111254393115165339793>u135391248938256420111254393115165339793));
	assert(1 == (u135391248938256420111254393115165339793>=u135391248938256420111254393115165339793));
	assert(1 == (u135391248938256420111254393115165339793==u135391248938256420111254393115165339793));
	assert(0 == (u135391248938256420111254393115165339793!=u135391248938256420111254393115165339793));
	assert(u135391248938256420111254393115165339793.pad<3>() == UInt<127>("0x65db67f3249a674525144f26a1983091"));
	assert(u135391248938256420111254393115165339793.shl<3>() == UInt<130>("0x32edb3f9924d33a2928a279350cc18488"));
	assert(u135391248938256420111254393115165339793.shr<3>() == UInt<124>("0xcbb6cfe64934ce8a4a289e4d4330612"));
	UInt<200> u1486025539120972689301771338252189867935329776143779779521262("0xecbcce8b421dace26c8d1d712d44ccb692ced9e67495472aee");
	UInt<200> u939810530559180796051464796371442206425175526791215151869065("0x95b86fc44068f3a8e035cde2aac610df1660a9129294e86c89");
	UInt<200> u1330585328921557696444880761408626702720883725676441331173455("0xd3f97706e86fccfb3f9ab3c5c054ac1c70423b2cac3956084f");
	assert(u1486025539120972689301771338252189867935329776143779779521262+u1486025539120972689301771338252189867935329776143779779521262 == UInt<201>("0x1d9799d16843b59c4d91a3ae25a89996d259db3cce92a8e55dc"));
	assert(u1486025539120972689301771338252189867935329776143779779521262-u1486025539120972689301771338252189867935329776143779779521262 == UInt<201>("0x0"));
	assert(u1486025539120972689301771338252189867935329776143779779521262*u1486025539120972689301771338252189867935329776143779779521262 == UInt<400>("0xdaeca810c5143c80043d12b64657d987aabc4e871a9d6e0204f75255ac286aa31902d94ef57e72e0ac89502a7b71e336f544"));
	assert(0 == (u1486025539120972689301771338252189867935329776143779779521262<u1486025539120972689301771338252189867935329776143779779521262));
	assert(1 == (u1486025539120972689301771338252189867935329776143779779521262<=u1486025539120972689301771338252189867935329776143779779521262));
	assert(0 == (u1486025539120972689301771338252189867935329776143779779521262>u1486025539120972689301771338252189867935329776143779779521262));
	assert(1 == (u1486025539120972689301771338252189867935329776143779779521262>=u1486025539120972689301771338252189867935329776143779779521262));
	assert(1 == (u1486025539120972689301771338252189867935329776143779779521262==u1486025539120972689301771338252189867935329776143779779521262));
	assert(0 == (u1486025539120972689301771338252189867935329776143779779521262!=u1486025539120972689301771338252189867935329776143779779521262));
	assert(u1486025539120972689301771338252189867935329776143779779521262.pad<3>() == UInt<200>("0xecbcce8b421dace26c8d1d712d44ccb692ced9e67495472aee"));
	assert(u1486025539120972689301771338252189867935329776143779779521262.shl<3>() == UInt<203>("0x765e6745a10ed67136468eb896a2665b49676cf33a4aa395770"));
	assert(u1486025539120972689301771338252189867935329776143779779521262.shr<3>() == UInt<197>("0x1d9799d16843b59c4d91a3ae25a89996d259db3cce92a8e55d"));
	assert(u1486025539120972689301771338252189867935329776143779779521262+u939810530559180796051464796371442206425175526791215151869065 == UInt<201>("0x182753e4f8286a08b4cc2eb53d80add95a92f82f9072a2f9777"));
	assert(u1486025539120972689301771338252189867935329776143779779521262-u939810530559180796051464796371442206425175526791215151869065 == UInt<201>("0x57045ec701b4b9398c574f8e827ebbd77c6e30d3e2005ebe65"));
	assert(u1486025539120972689301771338252189867935329776143779779521262*u939810530559180796051464796371442206425175526791215151869065 == UInt<400>("0x8a747346db3f90e7a501aa9e24e30149b4241e3360d438f0475b522e54c85efecdfea8566d9d3e02f20d9a83286a68e2615e"));
	assert(0 == (u1486025539120972689301771338252189867935329776143779779521262<u939810530559180796051464796371442206425175526791215151869065));
	assert(0 == (u1486025539120972689301771338252189867935329776143779779521262<=u939810530559180796051464796371442206425175526791215151869065));
	assert(1 == (u1486025539120972689301771338252189867935329776143779779521262>u939810530559180796051464796371442206425175526791215151869065));
	assert(1 == (u1486025539120972689301771338252189867935329776143779779521262>=u939810530559180796051464796371442206425175526791215151869065));
	assert(0 == (u1486025539120972689301771338252189867935329776143779779521262==u939810530559180796051464796371442206425175526791215151869065));
	assert(1 == (u1486025539120972689301771338252189867935329776143779779521262!=u939810530559180796051464796371442206425175526791215151869065));
	assert(u1486025539120972689301771338252189867935329776143779779521262.pad<3>() == UInt<200>("0xecbcce8b421dace26c8d1d712d44ccb692ced9e67495472aee"));
	assert(u1486025539120972689301771338252189867935329776143779779521262.shl<3>() == UInt<203>("0x765e6745a10ed67136468eb896a2665b49676cf33a4aa395770"));
	assert(u1486025539120972689301771338252189867935329776143779779521262.shr<3>() == UInt<197>("0x1d9799d16843b59c4d91a3ae25a89996d259db3cce92a8e55d"));
	assert(u1486025539120972689301771338252189867935329776143779779521262+u1330585328921557696444880761408626702720883725676441331173455 == UInt<201>("0x1c0b645922a8d79ddac27d136ed9978d30311151320ce9d333d"));
	assert(u1486025539120972689301771338252189867935329776143779779521262-u1330585328921557696444880761408626702720883725676441331173455 == UInt<201>("0x18c3578459addfe72cf269ab6cf0209a228c9eb9c85bf1229f"));
	assert(u1486025539120972689301771338252189867935329776143779779521262*u1330585328921557696444880761408626702720883725676441331173455 == UInt<400>("0xc4064ff3d453d5f5ae96c3b6196a3986926e53cc64d5ee07947425163318c21ac0d43ce85a19475b5fdccce48103b441af72"));
	assert(0 == (u1486025539120972689301771338252189867935329776143779779521262<u1330585328921557696444880761408626702720883725676441331173455));
	assert(0 == (u1486025539120972689301771338252189867935329776143779779521262<=u1330585328921557696444880761408626702720883725676441331173455));
	assert(1 == (u1486025539120972689301771338252189867935329776143779779521262>u1330585328921557696444880761408626702720883725676441331173455));
	assert(1 == (u1486025539120972689301771338252189867935329776143779779521262>=u1330585328921557696444880761408626702720883725676441331173455));
	assert(0 == (u1486025539120972689301771338252189867935329776143779779521262==u1330585328921557696444880761408626702720883725676441331173455));
	assert(1 == (u1486025539120972689301771338252189867935329776143779779521262!=u1330585328921557696444880761408626702720883725676441331173455));
	assert(u1486025539120972689301771338252189867935329776143779779521262.pad<3>() == UInt<200>("0xecbcce8b421dace26c8d1d712d44ccb692ced9e67495472aee"));
	assert(u1486025539120972689301771338252189867935329776143779779521262.shl<3>() == UInt<203>("0x765e6745a10ed67136468eb896a2665b49676cf33a4aa395770"));
	assert(u1486025539120972689301771338252189867935329776143779779521262.shr<3>() == UInt<197>("0x1d9799d16843b59c4d91a3ae25a89996d259db3cce92a8e55d"));
	assert(u939810530559180796051464796371442206425175526791215151869065+u1486025539120972689301771338252189867935329776143779779521262 == UInt<201>("0x182753e4f8286a08b4cc2eb53d80add95a92f82f9072a2f9777"));
	assert(u939810530559180796051464796371442206425175526791215151869065-u1486025539120972689301771338252189867935329776143779779521262 == UInt<201>("0x1a8fba138fe4b46c673a8b0717d8144288391cf2c1dffa1419b"));
	assert(u939810530559180796051464796371442206425175526791215151869065*u1486025539120972689301771338252189867935329776143779779521262 == UInt<400>("0x8a747346db3f90e7a501aa9e24e30149b4241e3360d438f0475b522e54c85efecdfea8566d9d3e02f20d9a83286a68e2615e"));
	assert(1 == (u939810530559180796051464796371442206425175526791215151869065<u1486025539120972689301771338252189867935329776143779779521262));
	assert(1 == (u939810530559180796051464796371442206425175526791215151869065<=u1486025539120972689301771338252189867935329776143779779521262));
	assert(0 == (u939810530559180796051464796371442206425175526791215151869065>u1486025539120972689301771338252189867935329776143779779521262));
	assert(0 == (u939810530559180796051464796371442206425175526791215151869065>=u1486025539120972689301771338252189867935329776143779779521262));
	assert(0 == (u939810530559180796051464796371442206425175526791215151869065==u1486025539120972689301771338252189867935329776143779779521262));
	assert(1 == (u939810530559180796051464796371442206425175526791215151869065!=u1486025539120972689301771338252189867935329776143779779521262));
	assert(u939810530559180796051464796371442206425175526791215151869065.pad<3>() == UInt<200>("0x95b86fc44068f3a8e035cde2aac610df1660a9129294e86c89"));
	assert(u939810530559180796051464796371442206425175526791215151869065.shl<3>() == UInt<203>("0x4adc37e2203479d4701ae6f15563086f8b305489494a7436448"));
	assert(u939810530559180796051464796371442206425175526791215151869065.shr<3>() == UInt<197>("0x12b70df8880d1e751c06b9bc5558c21be2cc152252529d0d91"));
	assert(u939810530559180796051464796371442206425175526791215151869065+u939810530559180796051464796371442206425175526791215151869065 == UInt<201>("0x12b70df8880d1e751c06b9bc5558c21be2cc152252529d0d912"));
	assert(u939810530559180796051464796371442206425175526791215151869065-u939810530559180796051464796371442206425175526791215151869065 == UInt<201>("0x0"));
	assert(u939810530559180796051464796371442206425175526791215151869065*u939810530559180796051464796371442206425175526791215151869065 == UInt<400>("0x579036fb4de288ce8bf720e31cc8fb3f000e8171b8af5a422378d42130f199c38ebf124ffd1b78b932b0ebdea0c74e53e151"));
	assert(0 == (u939810530559180796051464796371442206425175526791215151869065<u939810530559180796051464796371442206425175526791215151869065));
	assert(1 == (u939810530559180796051464796371442206425175526791215151869065<=u939810530559180796051464796371442206425175526791215151869065));
	assert(0 == (u939810530559180796051464796371442206425175526791215151869065>u939810530559180796051464796371442206425175526791215151869065));
	assert(1 == (u939810530559180796051464796371442206425175526791215151869065>=u939810530559180796051464796371442206425175526791215151869065));
	assert(1 == (u939810530559180796051464796371442206425175526791215151869065==u939810530559180796051464796371442206425175526791215151869065));
	assert(0 == (u939810530559180796051464796371442206425175526791215151869065!=u939810530559180796051464796371442206425175526791215151869065));
	assert(u939810530559180796051464796371442206425175526791215151869065.pad<3>() == UInt<200>("0x95b86fc44068f3a8e035cde2aac610df1660a9129294e86c89"));
	assert(u939810530559180796051464796371442206425175526791215151869065.shl<3>() == UInt<203>("0x4adc37e2203479d4701ae6f15563086f8b305489494a7436448"));
	assert(u939810530559180796051464796371442206425175526791215151869065.shr<3>() == UInt<197>("0x12b70df8880d1e751c06b9bc5558c21be2cc152252529d0d91"));
	assert(u939810530559180796051464796371442206425175526791215151869065+u1330585328921557696444880761408626702720883725676441331173455 == UInt<201>("0x169b1e6cb28d8c0a41fd081a86b1abcfb86a2e43f3ece3e74d8"));
	assert(u939810530559180796051464796371442206425175526791215151869065-u1330585328921557696444880761408626702720883725676441331173455 == UInt<201>("0x1c1bef8bd57f926ada09b1a1cea7164c2a61e6de5e65b92643a"));
	assert(u939810530559180796051464796371442206425175526791215151869065*u1330585328921557696444880761408626702720883725676441331173455 == UInt<400>("0x7bf8ea203d308797b65783def824a5913f4d9f3c3dd95db2fe502dad265c5ff6d8c990d2799217c80a6c518a8e2e2e23c647"));
	assert(1 == (u939810530559180796051464796371442206425175526791215151869065<u1330585328921557696444880761408626702720883725676441331173455));
	assert(1 == (u939810530559180796051464796371442206425175526791215151869065<=u1330585328921557696444880761408626702720883725676441331173455));
	assert(0 == (u939810530559180796051464796371442206425175526791215151869065>u1330585328921557696444880761408626702720883725676441331173455));
	assert(0 == (u939810530559180796051464796371442206425175526791215151869065>=u1330585328921557696444880761408626702720883725676441331173455));
	assert(0 == (u939810530559180796051464796371442206425175526791215151869065==u1330585328921557696444880761408626702720883725676441331173455));
	assert(1 == (u939810530559180796051464796371442206425175526791215151869065!=u1330585328921557696444880761408626702720883725676441331173455));
	assert(u939810530559180796051464796371442206425175526791215151869065.pad<3>() == UInt<200>("0x95b86fc44068f3a8e035cde2aac610df1660a9129294e86c89"));
	assert(u939810530559180796051464796371442206425175526791215151869065.shl<3>() == UInt<203>("0x4adc37e2203479d4701ae6f15563086f8b305489494a7436448"));
	assert(u939810530559180796051464796371442206425175526791215151869065.shr<3>() == UInt<197>("0x12b70df8880d1e751c06b9bc5558c21be2cc152252529d0d91"));
	assert(u1330585328921557696444880761408626702720883725676441331173455+u1486025539120972689301771338252189867935329776143779779521262 == UInt<201>("0x1c0b645922a8d79ddac27d136ed9978d30311151320ce9d333d"));
	assert(u1330585328921557696444880761408626702720883725676441331173455-u1486025539120972689301771338252189867935329776143779779521262 == UInt<201>("0x1e73ca87ba6522018d30d9654930fdf65dd73614637a40edd61"));
	assert(u1330585328921557696444880761408626702720883725676441331173455*u1486025539120972689301771338252189867935329776143779779521262 == UInt<400>("0xc4064ff3d453d5f5ae96c3b6196a3986926e53cc64d5ee07947425163318c21ac0d43ce85a19475b5fdccce48103b441af72"));
	assert(1 == (u1330585328921557696444880761408626702720883725676441331173455<u1486025539120972689301771338252189867935329776143779779521262));
	assert(1 == (u1330585328921557696444880761408626702720883725676441331173455<=u1486025539120972689301771338252189867935329776143779779521262));
	assert(0 == (u1330585328921557696444880761408626702720883725676441331173455>u1486025539120972689301771338252189867935329776143779779521262));
	assert(0 == (u1330585328921557696444880761408626702720883725676441331173455>=u1486025539120972689301771338252189867935329776143779779521262));
	assert(0 == (u1330585328921557696444880761408626702720883725676441331173455==u1486025539120972689301771338252189867935329776143779779521262));
	assert(1 == (u1330585328921557696444880761408626702720883725676441331173455!=u1486025539120972689301771338252189867935329776143779779521262));
	assert(u1330585328921557696444880761408626702720883725676441331173455.pad<3>() == UInt<200>("0xd3f97706e86fccfb3f9ab3c5c054ac1c70423b2cac3956084f"));
	assert(u1330585328921557696444880761408626702720883725676441331173455.shl<3>() == UInt<203>("0x69fcbb837437e67d9fcd59e2e02a560e38211d96561cab04278"));
	assert(u1330585328921557696444880761408626702720883725676441331173455.shr<3>() == UInt<197>("0x1a7f2ee0dd0df99f67f35678b80a95838e08476595872ac109"));
	assert(u1330585328921557696444880761408626702720883725676441331173455+u939810530559180796051464796371442206425175526791215151869065 == UInt<201>("0x169b1e6cb28d8c0a41fd081a86b1abcfb86a2e43f3ece3e74d8"));
	assert(u1330585328921557696444880761408626702720883725676441331173455-u939810530559180796051464796371442206425175526791215151869065 == UInt<201>("0x3e410742a806d9525f64e5e3158e9b3d59e1921a19a46d9bc6"));
	assert(u1330585328921557696444880761408626702720883725676441331173455*u939810530559180796051464796371442206425175526791215151869065 == UInt<400>("0x7bf8ea203d308797b65783def824a5913f4d9f3c3dd95db2fe502dad265c5ff6d8c990d2799217c80a6c518a8e2e2e23c647"));
	assert(0 == (u1330585328921557696444880761408626702720883725676441331173455<u939810530559180796051464796371442206425175526791215151869065));
	assert(0 == (u1330585328921557696444880761408626702720883725676441331173455<=u939810530559180796051464796371442206425175526791215151869065));
	assert(1 == (u1330585328921557696444880761408626702720883725676441331173455>u939810530559180796051464796371442206425175526791215151869065));
	assert(1 == (u1330585328921557696444880761408626702720883725676441331173455>=u939810530559180796051464796371442206425175526791215151869065));
	assert(0 == (u1330585328921557696444880761408626702720883725676441331173455==u939810530559180796051464796371442206425175526791215151869065));
	assert(1 == (u1330585328921557696444880761408626702720883725676441331173455!=u939810530559180796051464796371442206425175526791215151869065));
	assert(u1330585328921557696444880761408626702720883725676441331173455.pad<3>() == UInt<200>("0xd3f97706e86fccfb3f9ab3c5c054ac1c70423b2cac3956084f"));
	assert(u1330585328921557696444880761408626702720883725676441331173455.shl<3>() == UInt<203>("0x69fcbb837437e67d9fcd59e2e02a560e38211d96561cab04278"));
	assert(u1330585328921557696444880761408626702720883725676441331173455.shr<3>() == UInt<197>("0x1a7f2ee0dd0df99f67f35678b80a95838e08476595872ac109"));
	assert(u1330585328921557696444880761408626702720883725676441331173455+u1330585328921557696444880761408626702720883725676441331173455 == UInt<201>("0x1a7f2ee0dd0df99f67f35678b80a95838e08476595872ac109e"));
	assert(u1330585328921557696444880761408626702720883725676441331173455-u1330585328921557696444880761408626702720883725676441331173455 == UInt<201>("0x0"));
	assert(u1330585328921557696444880761408626702720883725676441331173455*u1330585328921557696444880761408626702720883725676441331173455 == UInt<400>("0xaf852d4e25efe1aa9474c48d4968f074161d83bc9837473b751b614f19e6ab5b5851180ce1826bfefea33bb7bec4c3590861"));
	assert(0 == (u1330585328921557696444880761408626702720883725676441331173455<u1330585328921557696444880761408626702720883725676441331173455));
	assert(1 == (u1330585328921557696444880761408626702720883725676441331173455<=u1330585328921557696444880761408626702720883725676441331173455));
	assert(0 == (u1330585328921557696444880761408626702720883725676441331173455>u1330585328921557696444880761408626702720883725676441331173455));
	assert(1 == (u1330585328921557696444880761408626702720883725676441331173455>=u1330585328921557696444880761408626702720883725676441331173455));
	assert(1 == (u1330585328921557696444880761408626702720883725676441331173455==u1330585328921557696444880761408626702720883725676441331173455));
	assert(0 == (u1330585328921557696444880761408626702720883725676441331173455!=u1330585328921557696444880761408626702720883725676441331173455));
	assert(u1330585328921557696444880761408626702720883725676441331173455.pad<3>() == UInt<200>("0xd3f97706e86fccfb3f9ab3c5c054ac1c70423b2cac3956084f"));
	assert(u1330585328921557696444880761408626702720883725676441331173455.shl<3>() == UInt<203>("0x69fcbb837437e67d9fcd59e2e02a560e38211d96561cab04278"));
	assert(u1330585328921557696444880761408626702720883725676441331173455.shr<3>() == UInt<197>("0x1a7f2ee0dd0df99f67f35678b80a95838e08476595872ac109"));
	UInt<1> u0("0x0");
	UInt<1> u1("0x1");
	UInt<2> u2("0x2");
	UInt<2> u3("0x3");
	UInt<3> u4("0x4");
	UInt<3> u5("0x5");
	UInt<3> u6("0x6");
	UInt<3> u7("0x7");
	UInt<4> u8("0x8");
	UInt<4> u9("0x9");
	UInt<4> u10("0xa");
	UInt<4> u11("0xb");
	UInt<4> u12("0xc");
	UInt<4> u13("0xd");
	UInt<4> u14("0xe");
	UInt<4> u15("0xf");
	assert(u8+u8 == UInt<5>("0x10"));
	assert(u8-u8 == UInt<5>("0x0"));
	assert(u8*u8 == UInt<8>("0x40"));
	assert(0 == (u8<u8));
	assert(1 == (u8<=u8));
	assert(0 == (u8>u8));
	assert(1 == (u8>=u8));
	assert(1 == (u8==u8));
	assert(0 == (u8!=u8));
	assert(u8.pad<3>() == UInt<4>("0x8"));
	assert(u8.shl<3>() == UInt<7>("0x40"));
	assert(u8.shr<3>() == UInt<1>("0x1"));
	assert(u8/u8 == UInt<4>("0x1"));
	assert(u8%u8 == UInt<4>("0x0"));
	assert(u8+u9 == UInt<5>("0x11"));
	assert(u8-u9 == UInt<5>("0x1f"));
	assert(u8*u9 == UInt<8>("0x48"));
	assert(1 == (u8<u9));
	assert(1 == (u8<=u9));
	assert(0 == (u8>u9));
	assert(0 == (u8>=u9));
	assert(0 == (u8==u9));
	assert(1 == (u8!=u9));
	assert(u8.pad<3>() == UInt<4>("0x8"));
	assert(u8.shl<3>() == UInt<7>("0x40"));
	assert(u8.shr<3>() == UInt<1>("0x1"));
	assert(u8/u9 == UInt<4>("0x0"));
	assert(u8%u9 == UInt<4>("0x8"));
	assert(u8+u10 == UInt<5>("0x12"));
	assert(u8-u10 == UInt<5>("0x1e"));
	assert(u8*u10 == UInt<8>("0x50"));
	assert(1 == (u8<u10));
	assert(1 == (u8<=u10));
	assert(0 == (u8>u10));
	assert(0 == (u8>=u10));
	assert(0 == (u8==u10));
	assert(1 == (u8!=u10));
	assert(u8.pad<3>() == UInt<4>("0x8"));
	assert(u8.shl<3>() == UInt<7>("0x40"));
	assert(u8.shr<3>() == UInt<1>("0x1"));
	assert(u8/u10 == UInt<4>("0x0"));
	assert(u8%u10 == UInt<4>("0x8"));
	assert(u8+u11 == UInt<5>("0x13"));
	assert(u8-u11 == UInt<5>("0x1d"));
	assert(u8*u11 == UInt<8>("0x58"));
	assert(1 == (u8<u11));
	assert(1 == (u8<=u11));
	assert(0 == (u8>u11));
	assert(0 == (u8>=u11));
	assert(0 == (u8==u11));
	assert(1 == (u8!=u11));
	assert(u8.pad<3>() == UInt<4>("0x8"));
	assert(u8.shl<3>() == UInt<7>("0x40"));
	assert(u8.shr<3>() == UInt<1>("0x1"));
	assert(u8/u11 == UInt<4>("0x0"));
	assert(u8%u11 == UInt<4>("0x8"));
	assert(u8+u12 == UInt<5>("0x14"));
	assert(u8-u12 == UInt<5>("0x1c"));
	assert(u8*u12 == UInt<8>("0x60"));
	assert(1 == (u8<u12));
	assert(1 == (u8<=u12));
	assert(0 == (u8>u12));
	assert(0 == (u8>=u12));
	assert(0 == (u8==u12));
	assert(1 == (u8!=u12));
	assert(u8.pad<3>() == UInt<4>("0x8"));
	assert(u8.shl<3>() == UInt<7>("0x40"));
	assert(u8.shr<3>() == UInt<1>("0x1"));
	assert(u8/u12 == UInt<4>("0x0"));
	assert(u8%u12 == UInt<4>("0x8"));
	assert(u8+u13 == UInt<5>("0x15"));
	assert(u8-u13 == UInt<5>("0x1b"));
	assert(u8*u13 == UInt<8>("0x68"));
	assert(1 == (u8<u13));
	assert(1 == (u8<=u13));
	assert(0 == (u8>u13));
	assert(0 == (u8>=u13));
	assert(0 == (u8==u13));
	assert(1 == (u8!=u13));
	assert(u8.pad<3>() == UInt<4>("0x8"));
	assert(u8.shl<3>() == UInt<7>("0x40"));
	assert(u8.shr<3>() == UInt<1>("0x1"));
	assert(u8/u13 == UInt<4>("0x0"));
	assert(u8%u13 == UInt<4>("0x8"));
	assert(u8+u14 == UInt<5>("0x16"));
	assert(u8-u14 == UInt<5>("0x1a"));
	assert(u8*u14 == UInt<8>("0x70"));
	assert(1 == (u8<u14));
	assert(1 == (u8<=u14));
	assert(0 == (u8>u14));
	assert(0 == (u8>=u14));
	assert(0 == (u8==u14));
	assert(1 == (u8!=u14));
	assert(u8.pad<3>() == UInt<4>("0x8"));
	assert(u8.shl<3>() == UInt<7>("0x40"));
	assert(u8.shr<3>() == UInt<1>("0x1"));
	assert(u8/u14 == UInt<4>("0x0"));
	assert(u8%u14 == UInt<4>("0x8"));
	assert(u8+u15 == UInt<5>("0x17"));
	assert(u8-u15 == UInt<5>("0x19"));
	assert(u8*u15 == UInt<8>("0x78"));
	assert(1 == (u8<u15));
	assert(1 == (u8<=u15));
	assert(0 == (u8>u15));
	assert(0 == (u8>=u15));
	assert(0 == (u8==u15));
	assert(1 == (u8!=u15));
	assert(u8.pad<3>() == UInt<4>("0x8"));
	assert(u8.shl<3>() == UInt<7>("0x40"));
	assert(u8.shr<3>() == UInt<1>("0x1"));
	assert(u8/u15 == UInt<4>("0x0"));
	assert(u8%u15 == UInt<4>("0x8"));
	assert(u9+u8 == UInt<5>("0x11"));
	assert(u9-u8 == UInt<5>("0x1"));
	assert(u9*u8 == UInt<8>("0x48"));
	assert(0 == (u9<u8));
	assert(0 == (u9<=u8));
	assert(1 == (u9>u8));
	assert(1 == (u9>=u8));
	assert(0 == (u9==u8));
	assert(1 == (u9!=u8));
	assert(u9.pad<3>() == UInt<4>("0x9"));
	assert(u9.shl<3>() == UInt<7>("0x48"));
	assert(u9.shr<3>() == UInt<1>("0x1"));
	assert(u9/u8 == UInt<4>("0x1"));
	assert(u9%u8 == UInt<4>("0x1"));
	assert(u9+u9 == UInt<5>("0x12"));
	assert(u9-u9 == UInt<5>("0x0"));
	assert(u9*u9 == UInt<8>("0x51"));
	assert(0 == (u9<u9));
	assert(1 == (u9<=u9));
	assert(0 == (u9>u9));
	assert(1 == (u9>=u9));
	assert(1 == (u9==u9));
	assert(0 == (u9!=u9));
	assert(u9.pad<3>() == UInt<4>("0x9"));
	assert(u9.shl<3>() == UInt<7>("0x48"));
	assert(u9.shr<3>() == UInt<1>("0x1"));
	assert(u9/u9 == UInt<4>("0x1"));
	assert(u9%u9 == UInt<4>("0x0"));
	assert(u9+u10 == UInt<5>("0x13"));
	assert(u9-u10 == UInt<5>("0x1f"));
	assert(u9*u10 == UInt<8>("0x5a"));
	assert(1 == (u9<u10));
	assert(1 == (u9<=u10));
	assert(0 == (u9>u10));
	assert(0 == (u9>=u10));
	assert(0 == (u9==u10));
	assert(1 == (u9!=u10));
	assert(u9.pad<3>() == UInt<4>("0x9"));
	assert(u9.shl<3>() == UInt<7>("0x48"));
	assert(u9.shr<3>() == UInt<1>("0x1"));
	assert(u9/u10 == UInt<4>("0x0"));
	assert(u9%u10 == UInt<4>("0x9"));
	assert(u9+u11 == UInt<5>("0x14"));
	assert(u9-u11 == UInt<5>("0x1e"));
	assert(u9*u11 == UInt<8>("0x63"));
	assert(1 == (u9<u11));
	assert(1 == (u9<=u11));
	assert(0 == (u9>u11));
	assert(0 == (u9>=u11));
	assert(0 == (u9==u11));
	assert(1 == (u9!=u11));
	assert(u9.pad<3>() == UInt<4>("0x9"));
	assert(u9.shl<3>() == UInt<7>("0x48"));
	assert(u9.shr<3>() == UInt<1>("0x1"));
	assert(u9/u11 == UInt<4>("0x0"));
	assert(u9%u11 == UInt<4>("0x9"));
	assert(u9+u12 == UInt<5>("0x15"));
	assert(u9-u12 == UInt<5>("0x1d"));
	assert(u9*u12 == UInt<8>("0x6c"));
	assert(1 == (u9<u12));
	assert(1 == (u9<=u12));
	assert(0 == (u9>u12));
	assert(0 == (u9>=u12));
	assert(0 == (u9==u12));
	assert(1 == (u9!=u12));
	assert(u9.pad<3>() == UInt<4>("0x9"));
	assert(u9.shl<3>() == UInt<7>("0x48"));
	assert(u9.shr<3>() == UInt<1>("0x1"));
	assert(u9/u12 == UInt<4>("0x0"));
	assert(u9%u12 == UInt<4>("0x9"));
	assert(u9+u13 == UInt<5>("0x16"));
	assert(u9-u13 == UInt<5>("0x1c"));
	assert(u9*u13 == UInt<8>("0x75"));
	assert(1 == (u9<u13));
	assert(1 == (u9<=u13));
	assert(0 == (u9>u13));
	assert(0 == (u9>=u13));
	assert(0 == (u9==u13));
	assert(1 == (u9!=u13));
	assert(u9.pad<3>() == UInt<4>("0x9"));
	assert(u9.shl<3>() == UInt<7>("0x48"));
	assert(u9.shr<3>() == UInt<1>("0x1"));
	assert(u9/u13 == UInt<4>("0x0"));
	assert(u9%u13 == UInt<4>("0x9"));
	assert(u9+u14 == UInt<5>("0x17"));
	assert(u9-u14 == UInt<5>("0x1b"));
	assert(u9*u14 == UInt<8>("0x7e"));
	assert(1 == (u9<u14));
	assert(1 == (u9<=u14));
	assert(0 == (u9>u14));
	assert(0 == (u9>=u14));
	assert(0 == (u9==u14));
	assert(1 == (u9!=u14));
	assert(u9.pad<3>() == UInt<4>("0x9"));
	assert(u9.shl<3>() == UInt<7>("0x48"));
	assert(u9.shr<3>() == UInt<1>("0x1"));
	assert(u9/u14 == UInt<4>("0x0"));
	assert(u9%u14 == UInt<4>("0x9"));
	assert(u9+u15 == UInt<5>("0x18"));
	assert(u9-u15 == UInt<5>("0x1a"));
	assert(u9*u15 == UInt<8>("0x87"));
	assert(1 == (u9<u15));
	assert(1 == (u9<=u15));
	assert(0 == (u9>u15));
	assert(0 == (u9>=u15));
	assert(0 == (u9==u15));
	assert(1 == (u9!=u15));
	assert(u9.pad<3>() == UInt<4>("0x9"));
	assert(u9.shl<3>() == UInt<7>("0x48"));
	assert(u9.shr<3>() == UInt<1>("0x1"));
	assert(u9/u15 == UInt<4>("0x0"));
	assert(u9%u15 == UInt<4>("0x9"));
	assert(u10+u8 == UInt<5>("0x12"));
	assert(u10-u8 == UInt<5>("0x2"));
	assert(u10*u8 == UInt<8>("0x50"));
	assert(0 == (u10<u8));
	assert(0 == (u10<=u8));
	assert(1 == (u10>u8));
	assert(1 == (u10>=u8));
	assert(0 == (u10==u8));
	assert(1 == (u10!=u8));
	assert(u10.pad<3>() == UInt<4>("0xa"));
	assert(u10.shl<3>() == UInt<7>("0x50"));
	assert(u10.shr<3>() == UInt<1>("0x1"));
	assert(u10/u8 == UInt<4>("0x1"));
	assert(u10%u8 == UInt<4>("0x2"));
	assert(u10+u9 == UInt<5>("0x13"));
	assert(u10-u9 == UInt<5>("0x1"));
	assert(u10*u9 == UInt<8>("0x5a"));
	assert(0 == (u10<u9));
	assert(0 == (u10<=u9));
	assert(1 == (u10>u9));
	assert(1 == (u10>=u9));
	assert(0 == (u10==u9));
	assert(1 == (u10!=u9));
	assert(u10.pad<3>() == UInt<4>("0xa"));
	assert(u10.shl<3>() == UInt<7>("0x50"));
	assert(u10.shr<3>() == UInt<1>("0x1"));
	assert(u10/u9 == UInt<4>("0x1"));
	assert(u10%u9 == UInt<4>("0x1"));
	assert(u10+u10 == UInt<5>("0x14"));
	assert(u10-u10 == UInt<5>("0x0"));
	assert(u10*u10 == UInt<8>("0x64"));
	assert(0 == (u10<u10));
	assert(1 == (u10<=u10));
	assert(0 == (u10>u10));
	assert(1 == (u10>=u10));
	assert(1 == (u10==u10));
	assert(0 == (u10!=u10));
	assert(u10.pad<3>() == UInt<4>("0xa"));
	assert(u10.shl<3>() == UInt<7>("0x50"));
	assert(u10.shr<3>() == UInt<1>("0x1"));
	assert(u10/u10 == UInt<4>("0x1"));
	assert(u10%u10 == UInt<4>("0x0"));
	assert(u10+u11 == UInt<5>("0x15"));
	assert(u10-u11 == UInt<5>("0x1f"));
	assert(u10*u11 == UInt<8>("0x6e"));
	assert(1 == (u10<u11));
	assert(1 == (u10<=u11));
	assert(0 == (u10>u11));
	assert(0 == (u10>=u11));
	assert(0 == (u10==u11));
	assert(1 == (u10!=u11));
	assert(u10.pad<3>() == UInt<4>("0xa"));
	assert(u10.shl<3>() == UInt<7>("0x50"));
	assert(u10.shr<3>() == UInt<1>("0x1"));
	assert(u10/u11 == UInt<4>("0x0"));
	assert(u10%u11 == UInt<4>("0xa"));
	assert(u10+u12 == UInt<5>("0x16"));
	assert(u10-u12 == UInt<5>("0x1e"));
	assert(u10*u12 == UInt<8>("0x78"));
	assert(1 == (u10<u12));
	assert(1 == (u10<=u12));
	assert(0 == (u10>u12));
	assert(0 == (u10>=u12));
	assert(0 == (u10==u12));
	assert(1 == (u10!=u12));
	assert(u10.pad<3>() == UInt<4>("0xa"));
	assert(u10.shl<3>() == UInt<7>("0x50"));
	assert(u10.shr<3>() == UInt<1>("0x1"));
	assert(u10/u12 == UInt<4>("0x0"));
	assert(u10%u12 == UInt<4>("0xa"));
	assert(u10+u13 == UInt<5>("0x17"));
	assert(u10-u13 == UInt<5>("0x1d"));
	assert(u10*u13 == UInt<8>("0x82"));
	assert(1 == (u10<u13));
	assert(1 == (u10<=u13));
	assert(0 == (u10>u13));
	assert(0 == (u10>=u13));
	assert(0 == (u10==u13));
	assert(1 == (u10!=u13));
	assert(u10.pad<3>() == UInt<4>("0xa"));
	assert(u10.shl<3>() == UInt<7>("0x50"));
	assert(u10.shr<3>() == UInt<1>("0x1"));
	assert(u10/u13 == UInt<4>("0x0"));
	assert(u10%u13 == UInt<4>("0xa"));
	assert(u10+u14 == UInt<5>("0x18"));
	assert(u10-u14 == UInt<5>("0x1c"));
	assert(u10*u14 == UInt<8>("0x8c"));
	assert(1 == (u10<u14));
	assert(1 == (u10<=u14));
	assert(0 == (u10>u14));
	assert(0 == (u10>=u14));
	assert(0 == (u10==u14));
	assert(1 == (u10!=u14));
	assert(u10.pad<3>() == UInt<4>("0xa"));
	assert(u10.shl<3>() == UInt<7>("0x50"));
	assert(u10.shr<3>() == UInt<1>("0x1"));
	assert(u10/u14 == UInt<4>("0x0"));
	assert(u10%u14 == UInt<4>("0xa"));
	assert(u10+u15 == UInt<5>("0x19"));
	assert(u10-u15 == UInt<5>("0x1b"));
	assert(u10*u15 == UInt<8>("0x96"));
	assert(1 == (u10<u15));
	assert(1 == (u10<=u15));
	assert(0 == (u10>u15));
	assert(0 == (u10>=u15));
	assert(0 == (u10==u15));
	assert(1 == (u10!=u15));
	assert(u10.pad<3>() == UInt<4>("0xa"));
	assert(u10.shl<3>() == UInt<7>("0x50"));
	assert(u10.shr<3>() == UInt<1>("0x1"));
	assert(u10/u15 == UInt<4>("0x0"));
	assert(u10%u15 == UInt<4>("0xa"));
	assert(u11+u8 == UInt<5>("0x13"));
	assert(u11-u8 == UInt<5>("0x3"));
	assert(u11*u8 == UInt<8>("0x58"));
	assert(0 == (u11<u8));
	assert(0 == (u11<=u8));
	assert(1 == (u11>u8));
	assert(1 == (u11>=u8));
	assert(0 == (u11==u8));
	assert(1 == (u11!=u8));
	assert(u11.pad<3>() == UInt<4>("0xb"));
	assert(u11.shl<3>() == UInt<7>("0x58"));
	assert(u11.shr<3>() == UInt<1>("0x1"));
	assert(u11/u8 == UInt<4>("0x1"));
	assert(u11%u8 == UInt<4>("0x3"));
	assert(u11+u9 == UInt<5>("0x14"));
	assert(u11-u9 == UInt<5>("0x2"));
	assert(u11*u9 == UInt<8>("0x63"));
	assert(0 == (u11<u9));
	assert(0 == (u11<=u9));
	assert(1 == (u11>u9));
	assert(1 == (u11>=u9));
	assert(0 == (u11==u9));
	assert(1 == (u11!=u9));
	assert(u11.pad<3>() == UInt<4>("0xb"));
	assert(u11.shl<3>() == UInt<7>("0x58"));
	assert(u11.shr<3>() == UInt<1>("0x1"));
	assert(u11/u9 == UInt<4>("0x1"));
	assert(u11%u9 == UInt<4>("0x2"));
	assert(u11+u10 == UInt<5>("0x15"));
	assert(u11-u10 == UInt<5>("0x1"));
	assert(u11*u10 == UInt<8>("0x6e"));
	assert(0 == (u11<u10));
	assert(0 == (u11<=u10));
	assert(1 == (u11>u10));
	assert(1 == (u11>=u10));
	assert(0 == (u11==u10));
	assert(1 == (u11!=u10));
	assert(u11.pad<3>() == UInt<4>("0xb"));
	assert(u11.shl<3>() == UInt<7>("0x58"));
	assert(u11.shr<3>() == UInt<1>("0x1"));
	assert(u11/u10 == UInt<4>("0x1"));
	assert(u11%u10 == UInt<4>("0x1"));
	assert(u11+u11 == UInt<5>("0x16"));
	assert(u11-u11 == UInt<5>("0x0"));
	assert(u11*u11 == UInt<8>("0x79"));
	assert(0 == (u11<u11));
	assert(1 == (u11<=u11));
	assert(0 == (u11>u11));
	assert(1 == (u11>=u11));
	assert(1 == (u11==u11));
	assert(0 == (u11!=u11));
	assert(u11.pad<3>() == UInt<4>("0xb"));
	assert(u11.shl<3>() == UInt<7>("0x58"));
	assert(u11.shr<3>() == UInt<1>("0x1"));
	assert(u11/u11 == UInt<4>("0x1"));
	assert(u11%u11 == UInt<4>("0x0"));
	assert(u11+u12 == UInt<5>("0x17"));
	assert(u11-u12 == UInt<5>("0x1f"));
	assert(u11*u12 == UInt<8>("0x84"));
	assert(1 == (u11<u12));
	assert(1 == (u11<=u12));
	assert(0 == (u11>u12));
	assert(0 == (u11>=u12));
	assert(0 == (u11==u12));
	assert(1 == (u11!=u12));
	assert(u11.pad<3>() == UInt<4>("0xb"));
	assert(u11.shl<3>() == UInt<7>("0x58"));
	assert(u11.shr<3>() == UInt<1>("0x1"));
	assert(u11/u12 == UInt<4>("0x0"));
	assert(u11%u12 == UInt<4>("0xb"));
	assert(u11+u13 == UInt<5>("0x18"));
	assert(u11-u13 == UInt<5>("0x1e"));
	assert(u11*u13 == UInt<8>("0x8f"));
	assert(1 == (u11<u13));
	assert(1 == (u11<=u13));
	assert(0 == (u11>u13));
	assert(0 == (u11>=u13));
	assert(0 == (u11==u13));
	assert(1 == (u11!=u13));
	assert(u11.pad<3>() == UInt<4>("0xb"));
	assert(u11.shl<3>() == UInt<7>("0x58"));
	assert(u11.shr<3>() == UInt<1>("0x1"));
	assert(u11/u13 == UInt<4>("0x0"));
	assert(u11%u13 == UInt<4>("0xb"));
	assert(u11+u14 == UInt<5>("0x19"));
	assert(u11-u14 == UInt<5>("0x1d"));
	assert(u11*u14 == UInt<8>("0x9a"));
	assert(1 == (u11<u14));
	assert(1 == (u11<=u14));
	assert(0 == (u11>u14));
	assert(0 == (u11>=u14));
	assert(0 == (u11==u14));
	assert(1 == (u11!=u14));
	assert(u11.pad<3>() == UInt<4>("0xb"));
	assert(u11.shl<3>() == UInt<7>("0x58"));
	assert(u11.shr<3>() == UInt<1>("0x1"));
	assert(u11/u14 == UInt<4>("0x0"));
	assert(u11%u14 == UInt<4>("0xb"));
	assert(u11+u15 == UInt<5>("0x1a"));
	assert(u11-u15 == UInt<5>("0x1c"));
	assert(u11*u15 == UInt<8>("0xa5"));
	assert(1 == (u11<u15));
	assert(1 == (u11<=u15));
	assert(0 == (u11>u15));
	assert(0 == (u11>=u15));
	assert(0 == (u11==u15));
	assert(1 == (u11!=u15));
	assert(u11.pad<3>() == UInt<4>("0xb"));
	assert(u11.shl<3>() == UInt<7>("0x58"));
	assert(u11.shr<3>() == UInt<1>("0x1"));
	assert(u11/u15 == UInt<4>("0x0"));
	assert(u11%u15 == UInt<4>("0xb"));
	assert(u12+u8 == UInt<5>("0x14"));
	assert(u12-u8 == UInt<5>("0x4"));
	assert(u12*u8 == UInt<8>("0x60"));
	assert(0 == (u12<u8));
	assert(0 == (u12<=u8));
	assert(1 == (u12>u8));
	assert(1 == (u12>=u8));
	assert(0 == (u12==u8));
	assert(1 == (u12!=u8));
	assert(u12.pad<3>() == UInt<4>("0xc"));
	assert(u12.shl<3>() == UInt<7>("0x60"));
	assert(u12.shr<3>() == UInt<1>("0x1"));
	assert(u12/u8 == UInt<4>("0x1"));
	assert(u12%u8 == UInt<4>("0x4"));
	assert(u12+u9 == UInt<5>("0x15"));
	assert(u12-u9 == UInt<5>("0x3"));
	assert(u12*u9 == UInt<8>("0x6c"));
	assert(0 == (u12<u9));
	assert(0 == (u12<=u9));
	assert(1 == (u12>u9));
	assert(1 == (u12>=u9));
	assert(0 == (u12==u9));
	assert(1 == (u12!=u9));
	assert(u12.pad<3>() == UInt<4>("0xc"));
	assert(u12.shl<3>() == UInt<7>("0x60"));
	assert(u12.shr<3>() == UInt<1>("0x1"));
	assert(u12/u9 == UInt<4>("0x1"));
	assert(u12%u9 == UInt<4>("0x3"));
	assert(u12+u10 == UInt<5>("0x16"));
	assert(u12-u10 == UInt<5>("0x2"));
	assert(u12*u10 == UInt<8>("0x78"));
	assert(0 == (u12<u10));
	assert(0 == (u12<=u10));
	assert(1 == (u12>u10));
	assert(1 == (u12>=u10));
	assert(0 == (u12==u10));
	assert(1 == (u12!=u10));
	assert(u12.pad<3>() == UInt<4>("0xc"));
	assert(u12.shl<3>() == UInt<7>("0x60"));
	assert(u12.shr<3>() == UInt<1>("0x1"));
	assert(u12/u10 == UInt<4>("0x1"));
	assert(u12%u10 == UInt<4>("0x2"));
	assert(u12+u11 == UInt<5>("0x17"));
	assert(u12-u11 == UInt<5>("0x1"));
	assert(u12*u11 == UInt<8>("0x84"));
	assert(0 == (u12<u11));
	assert(0 == (u12<=u11));
	assert(1 == (u12>u11));
	assert(1 == (u12>=u11));
	assert(0 == (u12==u11));
	assert(1 == (u12!=u11));
	assert(u12.pad<3>() == UInt<4>("0xc"));
	assert(u12.shl<3>() == UInt<7>("0x60"));
	assert(u12.shr<3>() == UInt<1>("0x1"));
	assert(u12/u11 == UInt<4>("0x1"));
	assert(u12%u11 == UInt<4>("0x1"));
	assert(u12+u12 == UInt<5>("0x18"));
	assert(u12-u12 == UInt<5>("0x0"));
	assert(u12*u12 == UInt<8>("0x90"));
	assert(0 == (u12<u12));
	assert(1 == (u12<=u12));
	assert(0 == (u12>u12));
	assert(1 == (u12>=u12));
	assert(1 == (u12==u12));
	assert(0 == (u12!=u12));
	assert(u12.pad<3>() == UInt<4>("0xc"));
	assert(u12.shl<3>() == UInt<7>("0x60"));
	assert(u12.shr<3>() == UInt<1>("0x1"));
	assert(u12/u12 == UInt<4>("0x1"));
	assert(u12%u12 == UInt<4>("0x0"));
	assert(u12+u13 == UInt<5>("0x19"));
	assert(u12-u13 == UInt<5>("0x1f"));
	assert(u12*u13 == UInt<8>("0x9c"));
	assert(1 == (u12<u13));
	assert(1 == (u12<=u13));
	assert(0 == (u12>u13));
	assert(0 == (u12>=u13));
	assert(0 == (u12==u13));
	assert(1 == (u12!=u13));
	assert(u12.pad<3>() == UInt<4>("0xc"));
	assert(u12.shl<3>() == UInt<7>("0x60"));
	assert(u12.shr<3>() == UInt<1>("0x1"));
	assert(u12/u13 == UInt<4>("0x0"));
	assert(u12%u13 == UInt<4>("0xc"));
	assert(u12+u14 == UInt<5>("0x1a"));
	assert(u12-u14 == UInt<5>("0x1e"));
	assert(u12*u14 == UInt<8>("0xa8"));
	assert(1 == (u12<u14));
	assert(1 == (u12<=u14));
	assert(0 == (u12>u14));
	assert(0 == (u12>=u14));
	assert(0 == (u12==u14));
	assert(1 == (u12!=u14));
	assert(u12.pad<3>() == UInt<4>("0xc"));
	assert(u12.shl<3>() == UInt<7>("0x60"));
	assert(u12.shr<3>() == UInt<1>("0x1"));
	assert(u12/u14 == UInt<4>("0x0"));
	assert(u12%u14 == UInt<4>("0xc"));
	assert(u12+u15 == UInt<5>("0x1b"));
	assert(u12-u15 == UInt<5>("0x1d"));
	assert(u12*u15 == UInt<8>("0xb4"));
	assert(1 == (u12<u15));
	assert(1 == (u12<=u15));
	assert(0 == (u12>u15));
	assert(0 == (u12>=u15));
	assert(0 == (u12==u15));
	assert(1 == (u12!=u15));
	assert(u12.pad<3>() == UInt<4>("0xc"));
	assert(u12.shl<3>() == UInt<7>("0x60"));
	assert(u12.shr<3>() == UInt<1>("0x1"));
	assert(u12/u15 == UInt<4>("0x0"));
	assert(u12%u15 == UInt<4>("0xc"));
	assert(u13+u8 == UInt<5>("0x15"));
	assert(u13-u8 == UInt<5>("0x5"));
	assert(u13*u8 == UInt<8>("0x68"));
	assert(0 == (u13<u8));
	assert(0 == (u13<=u8));
	assert(1 == (u13>u8));
	assert(1 == (u13>=u8));
	assert(0 == (u13==u8));
	assert(1 == (u13!=u8));
	assert(u13.pad<3>() == UInt<4>("0xd"));
	assert(u13.shl<3>() == UInt<7>("0x68"));
	assert(u13.shr<3>() == UInt<1>("0x1"));
	assert(u13/u8 == UInt<4>("0x1"));
	assert(u13%u8 == UInt<4>("0x5"));
	assert(u13+u9 == UInt<5>("0x16"));
	assert(u13-u9 == UInt<5>("0x4"));
	assert(u13*u9 == UInt<8>("0x75"));
	assert(0 == (u13<u9));
	assert(0 == (u13<=u9));
	assert(1 == (u13>u9));
	assert(1 == (u13>=u9));
	assert(0 == (u13==u9));
	assert(1 == (u13!=u9));
	assert(u13.pad<3>() == UInt<4>("0xd"));
	assert(u13.shl<3>() == UInt<7>("0x68"));
	assert(u13.shr<3>() == UInt<1>("0x1"));
	assert(u13/u9 == UInt<4>("0x1"));
	assert(u13%u9 == UInt<4>("0x4"));
	assert(u13+u10 == UInt<5>("0x17"));
	assert(u13-u10 == UInt<5>("0x3"));
	assert(u13*u10 == UInt<8>("0x82"));
	assert(0 == (u13<u10));
	assert(0 == (u13<=u10));
	assert(1 == (u13>u10));
	assert(1 == (u13>=u10));
	assert(0 == (u13==u10));
	assert(1 == (u13!=u10));
	assert(u13.pad<3>() == UInt<4>("0xd"));
	assert(u13.shl<3>() == UInt<7>("0x68"));
	assert(u13.shr<3>() == UInt<1>("0x1"));
	assert(u13/u10 == UInt<4>("0x1"));
	assert(u13%u10 == UInt<4>("0x3"));
	assert(u13+u11 == UInt<5>("0x18"));
	assert(u13-u11 == UInt<5>("0x2"));
	assert(u13*u11 == UInt<8>("0x8f"));
	assert(0 == (u13<u11));
	assert(0 == (u13<=u11));
	assert(1 == (u13>u11));
	assert(1 == (u13>=u11));
	assert(0 == (u13==u11));
	assert(1 == (u13!=u11));
	assert(u13.pad<3>() == UInt<4>("0xd"));
	assert(u13.shl<3>() == UInt<7>("0x68"));
	assert(u13.shr<3>() == UInt<1>("0x1"));
	assert(u13/u11 == UInt<4>("0x1"));
	assert(u13%u11 == UInt<4>("0x2"));
	assert(u13+u12 == UInt<5>("0x19"));
	assert(u13-u12 == UInt<5>("0x1"));
	assert(u13*u12 == UInt<8>("0x9c"));
	assert(0 == (u13<u12));
	assert(0 == (u13<=u12));
	assert(1 == (u13>u12));
	assert(1 == (u13>=u12));
	assert(0 == (u13==u12));
	assert(1 == (u13!=u12));
	assert(u13.pad<3>() == UInt<4>("0xd"));
	assert(u13.shl<3>() == UInt<7>("0x68"));
	assert(u13.shr<3>() == UInt<1>("0x1"));
	assert(u13/u12 == UInt<4>("0x1"));
	assert(u13%u12 == UInt<4>("0x1"));
	assert(u13+u13 == UInt<5>("0x1a"));
	assert(u13-u13 == UInt<5>("0x0"));
	assert(u13*u13 == UInt<8>("0xa9"));
	assert(0 == (u13<u13));
	assert(1 == (u13<=u13));
	assert(0 == (u13>u13));
	assert(1 == (u13>=u13));
	assert(1 == (u13==u13));
	assert(0 == (u13!=u13));
	assert(u13.pad<3>() == UInt<4>("0xd"));
	assert(u13.shl<3>() == UInt<7>("0x68"));
	assert(u13.shr<3>() == UInt<1>("0x1"));
	assert(u13/u13 == UInt<4>("0x1"));
	assert(u13%u13 == UInt<4>("0x0"));
	assert(u13+u14 == UInt<5>("0x1b"));
	assert(u13-u14 == UInt<5>("0x1f"));
	assert(u13*u14 == UInt<8>("0xb6"));
	assert(1 == (u13<u14));
	assert(1 == (u13<=u14));
	assert(0 == (u13>u14));
	assert(0 == (u13>=u14));
	assert(0 == (u13==u14));
	assert(1 == (u13!=u14));
	assert(u13.pad<3>() == UInt<4>("0xd"));
	assert(u13.shl<3>() == UInt<7>("0x68"));
	assert(u13.shr<3>() == UInt<1>("0x1"));
	assert(u13/u14 == UInt<4>("0x0"));
	assert(u13%u14 == UInt<4>("0xd"));
	assert(u13+u15 == UInt<5>("0x1c"));
	assert(u13-u15 == UInt<5>("0x1e"));
	assert(u13*u15 == UInt<8>("0xc3"));
	assert(1 == (u13<u15));
	assert(1 == (u13<=u15));
	assert(0 == (u13>u15));
	assert(0 == (u13>=u15));
	assert(0 == (u13==u15));
	assert(1 == (u13!=u15));
	assert(u13.pad<3>() == UInt<4>("0xd"));
	assert(u13.shl<3>() == UInt<7>("0x68"));
	assert(u13.shr<3>() == UInt<1>("0x1"));
	assert(u13/u15 == UInt<4>("0x0"));
	assert(u13%u15 == UInt<4>("0xd"));
	assert(u14+u8 == UInt<5>("0x16"));
	assert(u14-u8 == UInt<5>("0x6"));
	assert(u14*u8 == UInt<8>("0x70"));
	assert(0 == (u14<u8));
	assert(0 == (u14<=u8));
	assert(1 == (u14>u8));
	assert(1 == (u14>=u8));
	assert(0 == (u14==u8));
	assert(1 == (u14!=u8));
	assert(u14.pad<3>() == UInt<4>("0xe"));
	assert(u14.shl<3>() == UInt<7>("0x70"));
	assert(u14.shr<3>() == UInt<1>("0x1"));
	assert(u14/u8 == UInt<4>("0x1"));
	assert(u14%u8 == UInt<4>("0x6"));
	assert(u14+u9 == UInt<5>("0x17"));
	assert(u14-u9 == UInt<5>("0x5"));
	assert(u14*u9 == UInt<8>("0x7e"));
	assert(0 == (u14<u9));
	assert(0 == (u14<=u9));
	assert(1 == (u14>u9));
	assert(1 == (u14>=u9));
	assert(0 == (u14==u9));
	assert(1 == (u14!=u9));
	assert(u14.pad<3>() == UInt<4>("0xe"));
	assert(u14.shl<3>() == UInt<7>("0x70"));
	assert(u14.shr<3>() == UInt<1>("0x1"));
	assert(u14/u9 == UInt<4>("0x1"));
	assert(u14%u9 == UInt<4>("0x5"));
	assert(u14+u10 == UInt<5>("0x18"));
	assert(u14-u10 == UInt<5>("0x4"));
	assert(u14*u10 == UInt<8>("0x8c"));
	assert(0 == (u14<u10));
	assert(0 == (u14<=u10));
	assert(1 == (u14>u10));
	assert(1 == (u14>=u10));
	assert(0 == (u14==u10));
	assert(1 == (u14!=u10));
	assert(u14.pad<3>() == UInt<4>("0xe"));
	assert(u14.shl<3>() == UInt<7>("0x70"));
	assert(u14.shr<3>() == UInt<1>("0x1"));
	assert(u14/u10 == UInt<4>("0x1"));
	assert(u14%u10 == UInt<4>("0x4"));
	assert(u14+u11 == UInt<5>("0x19"));
	assert(u14-u11 == UInt<5>("0x3"));
	assert(u14*u11 == UInt<8>("0x9a"));
	assert(0 == (u14<u11));
	assert(0 == (u14<=u11));
	assert(1 == (u14>u11));
	assert(1 == (u14>=u11));
	assert(0 == (u14==u11));
	assert(1 == (u14!=u11));
	assert(u14.pad<3>() == UInt<4>("0xe"));
	assert(u14.shl<3>() == UInt<7>("0x70"));
	assert(u14.shr<3>() == UInt<1>("0x1"));
	assert(u14/u11 == UInt<4>("0x1"));
	assert(u14%u11 == UInt<4>("0x3"));
	assert(u14+u12 == UInt<5>("0x1a"));
	assert(u14-u12 == UInt<5>("0x2"));
	assert(u14*u12 == UInt<8>("0xa8"));
	assert(0 == (u14<u12));
	assert(0 == (u14<=u12));
	assert(1 == (u14>u12));
	assert(1 == (u14>=u12));
	assert(0 == (u14==u12));
	assert(1 == (u14!=u12));
	assert(u14.pad<3>() == UInt<4>("0xe"));
	assert(u14.shl<3>() == UInt<7>("0x70"));
	assert(u14.shr<3>() == UInt<1>("0x1"));
	assert(u14/u12 == UInt<4>("0x1"));
	assert(u14%u12 == UInt<4>("0x2"));
	assert(u14+u13 == UInt<5>("0x1b"));
	assert(u14-u13 == UInt<5>("0x1"));
	assert(u14*u13 == UInt<8>("0xb6"));
	assert(0 == (u14<u13));
	assert(0 == (u14<=u13));
	assert(1 == (u14>u13));
	assert(1 == (u14>=u13));
	assert(0 == (u14==u13));
	assert(1 == (u14!=u13));
	assert(u14.pad<3>() == UInt<4>("0xe"));
	assert(u14.shl<3>() == UInt<7>("0x70"));
	assert(u14.shr<3>() == UInt<1>("0x1"));
	assert(u14/u13 == UInt<4>("0x1"));
	assert(u14%u13 == UInt<4>("0x1"));
	assert(u14+u14 == UInt<5>("0x1c"));
	assert(u14-u14 == UInt<5>("0x0"));
	assert(u14*u14 == UInt<8>("0xc4"));
	assert(0 == (u14<u14));
	assert(1 == (u14<=u14));
	assert(0 == (u14>u14));
	assert(1 == (u14>=u14));
	assert(1 == (u14==u14));
	assert(0 == (u14!=u14));
	assert(u14.pad<3>() == UInt<4>("0xe"));
	assert(u14.shl<3>() == UInt<7>("0x70"));
	assert(u14.shr<3>() == UInt<1>("0x1"));
	assert(u14/u14 == UInt<4>("0x1"));
	assert(u14%u14 == UInt<4>("0x0"));
	assert(u14+u15 == UInt<5>("0x1d"));
	assert(u14-u15 == UInt<5>("0x1f"));
	assert(u14*u15 == UInt<8>("0xd2"));
	assert(1 == (u14<u15));
	assert(1 == (u14<=u15));
	assert(0 == (u14>u15));
	assert(0 == (u14>=u15));
	assert(0 == (u14==u15));
	assert(1 == (u14!=u15));
	assert(u14.pad<3>() == UInt<4>("0xe"));
	assert(u14.shl<3>() == UInt<7>("0x70"));
	assert(u14.shr<3>() == UInt<1>("0x1"));
	assert(u14/u15 == UInt<4>("0x0"));
	assert(u14%u15 == UInt<4>("0xe"));
	assert(u15+u8 == UInt<5>("0x17"));
	assert(u15-u8 == UInt<5>("0x7"));
	assert(u15*u8 == UInt<8>("0x78"));
	assert(0 == (u15<u8));
	assert(0 == (u15<=u8));
	assert(1 == (u15>u8));
	assert(1 == (u15>=u8));
	assert(0 == (u15==u8));
	assert(1 == (u15!=u8));
	assert(u15.pad<3>() == UInt<4>("0xf"));
	assert(u15.shl<3>() == UInt<7>("0x78"));
	assert(u15.shr<3>() == UInt<1>("0x1"));
	assert(u15/u8 == UInt<4>("0x1"));
	assert(u15%u8 == UInt<4>("0x7"));
	assert(u15+u9 == UInt<5>("0x18"));
	assert(u15-u9 == UInt<5>("0x6"));
	assert(u15*u9 == UInt<8>("0x87"));
	assert(0 == (u15<u9));
	assert(0 == (u15<=u9));
	assert(1 == (u15>u9));
	assert(1 == (u15>=u9));
	assert(0 == (u15==u9));
	assert(1 == (u15!=u9));
	assert(u15.pad<3>() == UInt<4>("0xf"));
	assert(u15.shl<3>() == UInt<7>("0x78"));
	assert(u15.shr<3>() == UInt<1>("0x1"));
	assert(u15/u9 == UInt<4>("0x1"));
	assert(u15%u9 == UInt<4>("0x6"));
	assert(u15+u10 == UInt<5>("0x19"));
	assert(u15-u10 == UInt<5>("0x5"));
	assert(u15*u10 == UInt<8>("0x96"));
	assert(0 == (u15<u10));
	assert(0 == (u15<=u10));
	assert(1 == (u15>u10));
	assert(1 == (u15>=u10));
	assert(0 == (u15==u10));
	assert(1 == (u15!=u10));
	assert(u15.pad<3>() == UInt<4>("0xf"));
	assert(u15.shl<3>() == UInt<7>("0x78"));
	assert(u15.shr<3>() == UInt<1>("0x1"));
	assert(u15/u10 == UInt<4>("0x1"));
	assert(u15%u10 == UInt<4>("0x5"));
	assert(u15+u11 == UInt<5>("0x1a"));
	assert(u15-u11 == UInt<5>("0x4"));
	assert(u15*u11 == UInt<8>("0xa5"));
	assert(0 == (u15<u11));
	assert(0 == (u15<=u11));
	assert(1 == (u15>u11));
	assert(1 == (u15>=u11));
	assert(0 == (u15==u11));
	assert(1 == (u15!=u11));
	assert(u15.pad<3>() == UInt<4>("0xf"));
	assert(u15.shl<3>() == UInt<7>("0x78"));
	assert(u15.shr<3>() == UInt<1>("0x1"));
	assert(u15/u11 == UInt<4>("0x1"));
	assert(u15%u11 == UInt<4>("0x4"));
	assert(u15+u12 == UInt<5>("0x1b"));
	assert(u15-u12 == UInt<5>("0x3"));
	assert(u15*u12 == UInt<8>("0xb4"));
	assert(0 == (u15<u12));
	assert(0 == (u15<=u12));
	assert(1 == (u15>u12));
	assert(1 == (u15>=u12));
	assert(0 == (u15==u12));
	assert(1 == (u15!=u12));
	assert(u15.pad<3>() == UInt<4>("0xf"));
	assert(u15.shl<3>() == UInt<7>("0x78"));
	assert(u15.shr<3>() == UInt<1>("0x1"));
	assert(u15/u12 == UInt<4>("0x1"));
	assert(u15%u12 == UInt<4>("0x3"));
	assert(u15+u13 == UInt<5>("0x1c"));
	assert(u15-u13 == UInt<5>("0x2"));
	assert(u15*u13 == UInt<8>("0xc3"));
	assert(0 == (u15<u13));
	assert(0 == (u15<=u13));
	assert(1 == (u15>u13));
	assert(1 == (u15>=u13));
	assert(0 == (u15==u13));
	assert(1 == (u15!=u13));
	assert(u15.pad<3>() == UInt<4>("0xf"));
	assert(u15.shl<3>() == UInt<7>("0x78"));
	assert(u15.shr<3>() == UInt<1>("0x1"));
	assert(u15/u13 == UInt<4>("0x1"));
	assert(u15%u13 == UInt<4>("0x2"));
	assert(u15+u14 == UInt<5>("0x1d"));
	assert(u15-u14 == UInt<5>("0x1"));
	assert(u15*u14 == UInt<8>("0xd2"));
	assert(0 == (u15<u14));
	assert(0 == (u15<=u14));
	assert(1 == (u15>u14));
	assert(1 == (u15>=u14));
	assert(0 == (u15==u14));
	assert(1 == (u15!=u14));
	assert(u15.pad<3>() == UInt<4>("0xf"));
	assert(u15.shl<3>() == UInt<7>("0x78"));
	assert(u15.shr<3>() == UInt<1>("0x1"));
	assert(u15/u14 == UInt<4>("0x1"));
	assert(u15%u14 == UInt<4>("0x1"));
	assert(u15+u15 == UInt<5>("0x1e"));
	assert(u15-u15 == UInt<5>("0x0"));
	assert(u15*u15 == UInt<8>("0xe1"));
	assert(0 == (u15<u15));
	assert(1 == (u15<=u15));
	assert(0 == (u15>u15));
	assert(1 == (u15>=u15));
	assert(1 == (u15==u15));
	assert(0 == (u15!=u15));
	assert(u15.pad<3>() == UInt<4>("0xf"));
	assert(u15.shl<3>() == UInt<7>("0x78"));
	assert(u15.shr<3>() == UInt<1>("0x1"));
	assert(u15/u15 == UInt<4>("0x1"));
	assert(u15%u15 == UInt<4>("0x0"));
	assert((u8 << UInt<4>(4)) == UInt<19>("0x80"));
	assert((u8 >> UInt<4>(4)) == UInt<4>("0x0"));
	assert(~u8 == UInt<4>("0x7"));
	assert((u9 << UInt<4>(4)) == UInt<19>("0x90"));
	assert((u9 >> UInt<4>(4)) == UInt<4>("0x0"));
	assert(~u9 == UInt<4>("0x6"));
	assert((u10 << UInt<4>(4)) == UInt<19>("0xa0"));
	assert((u10 >> UInt<4>(4)) == UInt<4>("0x0"));
	assert(~u10 == UInt<4>("0x5"));
	assert((u11 << UInt<4>(4)) == UInt<19>("0xb0"));
	assert((u11 >> UInt<4>(4)) == UInt<4>("0x0"));
	assert(~u11 == UInt<4>("0x4"));
	assert((u12 << UInt<4>(4)) == UInt<19>("0xc0"));
	assert((u12 >> UInt<4>(4)) == UInt<4>("0x0"));
	assert(~u12 == UInt<4>("0x3"));
	assert((u13 << UInt<4>(4)) == UInt<19>("0xd0"));
	assert((u13 >> UInt<4>(4)) == UInt<4>("0x0"));
	assert(~u13 == UInt<4>("0x2"));
	assert((u14 << UInt<4>(4)) == UInt<19>("0xe0"));
	assert((u14 >> UInt<4>(4)) == UInt<4>("0x0"));
	assert(~u14 == UInt<4>("0x1"));
	assert((u15 << UInt<4>(4)) == UInt<19>("0xf0"));
	assert((u15 >> UInt<4>(4)) == UInt<4>("0x0"));
	assert(~u15 == UInt<4>("0x0"));

	return 0;
}
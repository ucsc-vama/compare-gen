#include "./firrtl-sig/uint.h"
#include <iostream>
#include <assert.h>
#include <stdlib.h>
using namespace std;

int main() {

	UInt<16> u56062("0xdafe");
	UInt<16> u49580("0xc1ac");
	UInt<16> u44570("0xae1a");
	assert(u56062+u56062 == UInt<17>("0x1b5fc"));
	assert(u56062-u56062 == UInt<17>("0x0"));
	assert(u56062*u56062 == UInt<32>("0xbb559404"));
	assert(0 == (u56062<u56062));
	assert(1 == (u56062<=u56062));
	assert(0 == (u56062>u56062));
	assert(1 == (u56062>=u56062));
	assert(1 == (u56062==u56062));
	assert(0 == (u56062!=u56062));
	assert(u56062.pad<3>() == UInt<16>("0xdafe"));
	assert(u56062.shl<3>() == UInt<19>("0x6d7f0"));
	assert(u56062.shr<3>() == UInt<13>("0x1b5f"));
	assert((u56062&u56062) == UInt<16>("0xdafe"));
	assert((u56062|u56062) == UInt<16>("0xdafe"));
	assert((u56062^u56062) == UInt<16>("0x0"));
	assert((u56062.andr()) == UInt<1>("0x0"));
	assert((u56062.orr()) == UInt<1>("0x1"));
	assert((u56062.xorr()) == UInt<1>("0x0"));
	assert(u56062.cat(u56062) == UInt<32>("0xdafedafe"));
	assert(u56062/u56062 == UInt<16>("0x1"));
	assert(u56062%u56062 == UInt<16>("0x0"));
	assert(u56062+u49580 == UInt<17>("0x19caa"));
	assert(u56062-u49580 == UInt<17>("0x1952"));
	assert(u56062*u49580 == UInt<32>("0xa5aca0a8"));
	assert(0 == (u56062<u49580));
	assert(0 == (u56062<=u49580));
	assert(1 == (u56062>u49580));
	assert(1 == (u56062>=u49580));
	assert(0 == (u56062==u49580));
	assert(1 == (u56062!=u49580));
	assert(u56062.pad<3>() == UInt<16>("0xdafe"));
	assert(u56062.shl<3>() == UInt<19>("0x6d7f0"));
	assert(u56062.shr<3>() == UInt<13>("0x1b5f"));
	assert((u56062&u49580) == UInt<16>("0xc0ac"));
	assert((u56062|u49580) == UInt<16>("0xdbfe"));
	assert((u56062^u49580) == UInt<16>("0x1b52"));
	assert((u56062.andr()) == UInt<1>("0x0"));
	assert((u56062.orr()) == UInt<1>("0x1"));
	assert((u56062.xorr()) == UInt<1>("0x0"));
	assert(u56062.cat(u49580) == UInt<32>("0xdafec1ac"));
	assert(u56062/u49580 == UInt<16>("0x1"));
	assert(u56062%u49580 == UInt<16>("0x1952"));
	assert(u56062+u44570 == UInt<17>("0x18918"));
	assert(u56062-u44570 == UInt<17>("0x2ce4"));
	assert(u56062*u44570 == UInt<32>("0x94eee1cc"));
	assert(0 == (u56062<u44570));
	assert(0 == (u56062<=u44570));
	assert(1 == (u56062>u44570));
	assert(1 == (u56062>=u44570));
	assert(0 == (u56062==u44570));
	assert(1 == (u56062!=u44570));
	assert(u56062.pad<3>() == UInt<16>("0xdafe"));
	assert(u56062.shl<3>() == UInt<19>("0x6d7f0"));
	assert(u56062.shr<3>() == UInt<13>("0x1b5f"));
	assert((u56062&u44570) == UInt<16>("0x8a1a"));
	assert((u56062|u44570) == UInt<16>("0xfefe"));
	assert((u56062^u44570) == UInt<16>("0x74e4"));
	assert((u56062.andr()) == UInt<1>("0x0"));
	assert((u56062.orr()) == UInt<1>("0x1"));
	assert((u56062.xorr()) == UInt<1>("0x0"));
	assert(u56062.cat(u44570) == UInt<32>("0xdafeae1a"));
	assert(u56062/u44570 == UInt<16>("0x1"));
	assert(u56062%u44570 == UInt<16>("0x2ce4"));
	assert(u49580+u56062 == UInt<17>("0x19caa"));
	assert(u49580-u56062 == UInt<17>("0x1e6ae"));
	assert(u49580*u56062 == UInt<32>("0xa5aca0a8"));
	assert(1 == (u49580<u56062));
	assert(1 == (u49580<=u56062));
	assert(0 == (u49580>u56062));
	assert(0 == (u49580>=u56062));
	assert(0 == (u49580==u56062));
	assert(1 == (u49580!=u56062));
	assert(u49580.pad<3>() == UInt<16>("0xc1ac"));
	assert(u49580.shl<3>() == UInt<19>("0x60d60"));
	assert(u49580.shr<3>() == UInt<13>("0x1835"));
	assert((u49580&u56062) == UInt<16>("0xc0ac"));
	assert((u49580|u56062) == UInt<16>("0xdbfe"));
	assert((u49580^u56062) == UInt<16>("0x1b52"));
	assert((u49580.andr()) == UInt<1>("0x0"));
	assert((u49580.orr()) == UInt<1>("0x1"));
	assert((u49580.xorr()) == UInt<1>("0x1"));
	assert(u49580.cat(u56062) == UInt<32>("0xc1acdafe"));
	assert(u49580/u56062 == UInt<16>("0x0"));
	assert(u49580%u56062 == UInt<16>("0xc1ac"));
	assert(u49580+u49580 == UInt<17>("0x18358"));
	assert(u49580-u49580 == UInt<17>("0x0"));
	assert(u49580*u49580 == UInt<32>("0x9284cb90"));
	assert(0 == (u49580<u49580));
	assert(1 == (u49580<=u49580));
	assert(0 == (u49580>u49580));
	assert(1 == (u49580>=u49580));
	assert(1 == (u49580==u49580));
	assert(0 == (u49580!=u49580));
	assert(u49580.pad<3>() == UInt<16>("0xc1ac"));
	assert(u49580.shl<3>() == UInt<19>("0x60d60"));
	assert(u49580.shr<3>() == UInt<13>("0x1835"));
	assert((u49580&u49580) == UInt<16>("0xc1ac"));
	assert((u49580|u49580) == UInt<16>("0xc1ac"));
	assert((u49580^u49580) == UInt<16>("0x0"));
	assert((u49580.andr()) == UInt<1>("0x0"));
	assert((u49580.orr()) == UInt<1>("0x1"));
	assert((u49580.xorr()) == UInt<1>("0x1"));
	assert(u49580.cat(u49580) == UInt<32>("0xc1acc1ac"));
	assert(u49580/u49580 == UInt<16>("0x1"));
	assert(u49580%u49580 == UInt<16>("0x0"));
	assert(u49580+u44570 == UInt<17>("0x16fc6"));
	assert(u49580-u44570 == UInt<17>("0x1392"));
	assert(u49580*u44570 == UInt<32>("0x83b69378"));
	assert(0 == (u49580<u44570));
	assert(0 == (u49580<=u44570));
	assert(1 == (u49580>u44570));
	assert(1 == (u49580>=u44570));
	assert(0 == (u49580==u44570));
	assert(1 == (u49580!=u44570));
	assert(u49580.pad<3>() == UInt<16>("0xc1ac"));
	assert(u49580.shl<3>() == UInt<19>("0x60d60"));
	assert(u49580.shr<3>() == UInt<13>("0x1835"));
	assert((u49580&u44570) == UInt<16>("0x8008"));
	assert((u49580|u44570) == UInt<16>("0xefbe"));
	assert((u49580^u44570) == UInt<16>("0x6fb6"));
	assert((u49580.andr()) == UInt<1>("0x0"));
	assert((u49580.orr()) == UInt<1>("0x1"));
	assert((u49580.xorr()) == UInt<1>("0x1"));
	assert(u49580.cat(u44570) == UInt<32>("0xc1acae1a"));
	assert(u49580/u44570 == UInt<16>("0x1"));
	assert(u49580%u44570 == UInt<16>("0x1392"));
	assert(u44570+u56062 == UInt<17>("0x18918"));
	assert(u44570-u56062 == UInt<17>("0x1d31c"));
	assert(u44570*u56062 == UInt<32>("0x94eee1cc"));
	assert(1 == (u44570<u56062));
	assert(1 == (u44570<=u56062));
	assert(0 == (u44570>u56062));
	assert(0 == (u44570>=u56062));
	assert(0 == (u44570==u56062));
	assert(1 == (u44570!=u56062));
	assert(u44570.pad<3>() == UInt<16>("0xae1a"));
	assert(u44570.shl<3>() == UInt<19>("0x570d0"));
	assert(u44570.shr<3>() == UInt<13>("0x15c3"));
	assert((u44570&u56062) == UInt<16>("0x8a1a"));
	assert((u44570|u56062) == UInt<16>("0xfefe"));
	assert((u44570^u56062) == UInt<16>("0x74e4"));
	assert((u44570.andr()) == UInt<1>("0x0"));
	assert((u44570.orr()) == UInt<1>("0x1"));
	assert((u44570.xorr()) == UInt<1>("0x0"));
	assert(u44570.cat(u56062) == UInt<32>("0xae1adafe"));
	assert(u44570/u56062 == UInt<16>("0x0"));
	assert(u44570%u56062 == UInt<16>("0xae1a"));
	assert(u44570+u49580 == UInt<17>("0x16fc6"));
	assert(u44570-u49580 == UInt<17>("0x1ec6e"));
	assert(u44570*u49580 == UInt<32>("0x83b69378"));
	assert(1 == (u44570<u49580));
	assert(1 == (u44570<=u49580));
	assert(0 == (u44570>u49580));
	assert(0 == (u44570>=u49580));
	assert(0 == (u44570==u49580));
	assert(1 == (u44570!=u49580));
	assert(u44570.pad<3>() == UInt<16>("0xae1a"));
	assert(u44570.shl<3>() == UInt<19>("0x570d0"));
	assert(u44570.shr<3>() == UInt<13>("0x15c3"));
	assert((u44570&u49580) == UInt<16>("0x8008"));
	assert((u44570|u49580) == UInt<16>("0xefbe"));
	assert((u44570^u49580) == UInt<16>("0x6fb6"));
	assert((u44570.andr()) == UInt<1>("0x0"));
	assert((u44570.orr()) == UInt<1>("0x1"));
	assert((u44570.xorr()) == UInt<1>("0x0"));
	assert(u44570.cat(u49580) == UInt<32>("0xae1ac1ac"));
	assert(u44570/u49580 == UInt<16>("0x0"));
	assert(u44570%u49580 == UInt<16>("0xae1a"));
	assert(u44570+u44570 == UInt<17>("0x15c34"));
	assert(u44570-u44570 == UInt<17>("0x0"));
	assert(u44570*u44570 == UInt<32>("0x76675aa4"));
	assert(0 == (u44570<u44570));
	assert(1 == (u44570<=u44570));
	assert(0 == (u44570>u44570));
	assert(1 == (u44570>=u44570));
	assert(1 == (u44570==u44570));
	assert(0 == (u44570!=u44570));
	assert(u44570.pad<3>() == UInt<16>("0xae1a"));
	assert(u44570.shl<3>() == UInt<19>("0x570d0"));
	assert(u44570.shr<3>() == UInt<13>("0x15c3"));
	assert((u44570&u44570) == UInt<16>("0xae1a"));
	assert((u44570|u44570) == UInt<16>("0xae1a"));
	assert((u44570^u44570) == UInt<16>("0x0"));
	assert((u44570.andr()) == UInt<1>("0x0"));
	assert((u44570.orr()) == UInt<1>("0x1"));
	assert((u44570.xorr()) == UInt<1>("0x0"));
	assert(u44570.cat(u44570) == UInt<32>("0xae1aae1a"));
	assert(u44570/u44570 == UInt<16>("0x1"));
	assert(u44570%u44570 == UInt<16>("0x0"));
	UInt<32> u2156440284("0x8088aadc");
	UInt<32> u2667341752("0x9efc67b8");
	UInt<32> u3877388331("0xe71c402b");
	assert(u2156440284+u2156440284 == UInt<33>("0x1011155b8"));
	assert(u2156440284-u2156440284 == UInt<33>("0x0"));
	assert(u2156440284*u2156440284 == UInt<64>("0x4088f3d1fbc8ed10"));
	assert(0 == (u2156440284<u2156440284));
	assert(1 == (u2156440284<=u2156440284));
	assert(0 == (u2156440284>u2156440284));
	assert(1 == (u2156440284>=u2156440284));
	assert(1 == (u2156440284==u2156440284));
	assert(0 == (u2156440284!=u2156440284));
	assert(u2156440284.pad<3>() == UInt<32>("0x8088aadc"));
	assert(u2156440284.shl<3>() == UInt<35>("0x4044556e0"));
	assert(u2156440284.shr<3>() == UInt<29>("0x1011155b"));
	assert((u2156440284&u2156440284) == UInt<32>("0x8088aadc"));
	assert((u2156440284|u2156440284) == UInt<32>("0x8088aadc"));
	assert((u2156440284^u2156440284) == UInt<32>("0x0"));
	assert((u2156440284.andr()) == UInt<1>("0x0"));
	assert((u2156440284.orr()) == UInt<1>("0x1"));
	assert((u2156440284.xorr()) == UInt<1>("0x0"));
	assert(u2156440284.cat(u2156440284) == UInt<64>("0x8088aadc8088aadc"));
	assert(u2156440284/u2156440284 == UInt<32>("0x1"));
	assert(u2156440284%u2156440284 == UInt<32>("0x0"));
	assert(u2156440284+u2667341752 == UInt<33>("0x11f851294"));
	assert(u2156440284-u2667341752 == UInt<33>("0x1e18c4324"));
	assert(u2156440284*u2667341752 == UInt<64>("0x4fd3140f57895220"));
	assert(1 == (u2156440284<u2667341752));
	assert(1 == (u2156440284<=u2667341752));
	assert(0 == (u2156440284>u2667341752));
	assert(0 == (u2156440284>=u2667341752));
	assert(0 == (u2156440284==u2667341752));
	assert(1 == (u2156440284!=u2667341752));
	assert(u2156440284.pad<3>() == UInt<32>("0x8088aadc"));
	assert(u2156440284.shl<3>() == UInt<35>("0x4044556e0"));
	assert(u2156440284.shr<3>() == UInt<29>("0x1011155b"));
	assert((u2156440284&u2667341752) == UInt<32>("0x80882298"));
	assert((u2156440284|u2667341752) == UInt<32>("0x9efceffc"));
	assert((u2156440284^u2667341752) == UInt<32>("0x1e74cd64"));
	assert((u2156440284.andr()) == UInt<1>("0x0"));
	assert((u2156440284.orr()) == UInt<1>("0x1"));
	assert((u2156440284.xorr()) == UInt<1>("0x0"));
	assert(u2156440284.cat(u2667341752) == UInt<64>("0x8088aadc9efc67b8"));
	assert(u2156440284/u2667341752 == UInt<32>("0x0"));
	assert(u2156440284%u2667341752 == UInt<32>("0x8088aadc"));
	assert(u2156440284+u3877388331 == UInt<33>("0x167a4eb07"));
	assert(u2156440284-u3877388331 == UInt<33>("0x1996c6ab1"));
	assert(u2156440284*u3877388331 == UInt<64>("0x74098156f5bbb2f4"));
	assert(1 == (u2156440284<u3877388331));
	assert(1 == (u2156440284<=u3877388331));
	assert(0 == (u2156440284>u3877388331));
	assert(0 == (u2156440284>=u3877388331));
	assert(0 == (u2156440284==u3877388331));
	assert(1 == (u2156440284!=u3877388331));
	assert(u2156440284.pad<3>() == UInt<32>("0x8088aadc"));
	assert(u2156440284.shl<3>() == UInt<35>("0x4044556e0"));
	assert(u2156440284.shr<3>() == UInt<29>("0x1011155b"));
	assert((u2156440284&u3877388331) == UInt<32>("0x80080008"));
	assert((u2156440284|u3877388331) == UInt<32>("0xe79ceaff"));
	assert((u2156440284^u3877388331) == UInt<32>("0x6794eaf7"));
	assert((u2156440284.andr()) == UInt<1>("0x0"));
	assert((u2156440284.orr()) == UInt<1>("0x1"));
	assert((u2156440284.xorr()) == UInt<1>("0x0"));
	assert(u2156440284.cat(u3877388331) == UInt<64>("0x8088aadce71c402b"));
	assert(u2156440284/u3877388331 == UInt<32>("0x0"));
	assert(u2156440284%u3877388331 == UInt<32>("0x8088aadc"));
	assert(u2667341752+u2156440284 == UInt<33>("0x11f851294"));
	assert(u2667341752-u2156440284 == UInt<33>("0x1e73bcdc"));
	assert(u2667341752*u2156440284 == UInt<64>("0x4fd3140f57895220"));
	assert(0 == (u2667341752<u2156440284));
	assert(0 == (u2667341752<=u2156440284));
	assert(1 == (u2667341752>u2156440284));
	assert(1 == (u2667341752>=u2156440284));
	assert(0 == (u2667341752==u2156440284));
	assert(1 == (u2667341752!=u2156440284));
	assert(u2667341752.pad<3>() == UInt<32>("0x9efc67b8"));
	assert(u2667341752.shl<3>() == UInt<35>("0x4f7e33dc0"));
	assert(u2667341752.shr<3>() == UInt<29>("0x13df8cf7"));
	assert((u2667341752&u2156440284) == UInt<32>("0x80882298"));
	assert((u2667341752|u2156440284) == UInt<32>("0x9efceffc"));
	assert((u2667341752^u2156440284) == UInt<32>("0x1e74cd64"));
	assert((u2667341752.andr()) == UInt<1>("0x0"));
	assert((u2667341752.orr()) == UInt<1>("0x1"));
	assert((u2667341752.xorr()) == UInt<1>("0x0"));
	assert(u2667341752.cat(u2156440284) == UInt<64>("0x9efc67b88088aadc"));
	assert(u2667341752/u2156440284 == UInt<32>("0x1"));
	assert(u2667341752%u2156440284 == UInt<32>("0x1e73bcdc"));
	assert(u2667341752+u2667341752 == UInt<33>("0x13df8cf70"));
	assert(u2667341752-u2667341752 == UInt<33>("0x0"));
	assert(u2667341752*u2667341752 == UInt<64>("0x62bc88e37c459440"));
	assert(0 == (u2667341752<u2667341752));
	assert(1 == (u2667341752<=u2667341752));
	assert(0 == (u2667341752>u2667341752));
	assert(1 == (u2667341752>=u2667341752));
	assert(1 == (u2667341752==u2667341752));
	assert(0 == (u2667341752!=u2667341752));
	assert(u2667341752.pad<3>() == UInt<32>("0x9efc67b8"));
	assert(u2667341752.shl<3>() == UInt<35>("0x4f7e33dc0"));
	assert(u2667341752.shr<3>() == UInt<29>("0x13df8cf7"));
	assert((u2667341752&u2667341752) == UInt<32>("0x9efc67b8"));
	assert((u2667341752|u2667341752) == UInt<32>("0x9efc67b8"));
	assert((u2667341752^u2667341752) == UInt<32>("0x0"));
	assert((u2667341752.andr()) == UInt<1>("0x0"));
	assert((u2667341752.orr()) == UInt<1>("0x1"));
	assert((u2667341752.xorr()) == UInt<1>("0x0"));
	assert(u2667341752.cat(u2667341752) == UInt<64>("0x9efc67b89efc67b8"));
	assert(u2667341752/u2667341752 == UInt<32>("0x1"));
	assert(u2667341752%u2667341752 == UInt<32>("0x0"));
	assert(u2667341752+u3877388331 == UInt<33>("0x18618a7e3"));
	assert(u2667341752-u3877388331 == UInt<33>("0x1b7e0278d"));
	assert(u2667341752*u3877388331 == UInt<64>("0x8f874d0c2e736be8"));
	assert(1 == (u2667341752<u3877388331));
	assert(1 == (u2667341752<=u3877388331));
	assert(0 == (u2667341752>u3877388331));
	assert(0 == (u2667341752>=u3877388331));
	assert(0 == (u2667341752==u3877388331));
	assert(1 == (u2667341752!=u3877388331));
	assert(u2667341752.pad<3>() == UInt<32>("0x9efc67b8"));
	assert(u2667341752.shl<3>() == UInt<35>("0x4f7e33dc0"));
	assert(u2667341752.shr<3>() == UInt<29>("0x13df8cf7"));
	assert((u2667341752&u3877388331) == UInt<32>("0x861c4028"));
	assert((u2667341752|u3877388331) == UInt<32>("0xfffc67bb"));
	assert((u2667341752^u3877388331) == UInt<32>("0x79e02793"));
	assert((u2667341752.andr()) == UInt<1>("0x0"));
	assert((u2667341752.orr()) == UInt<1>("0x1"));
	assert((u2667341752.xorr()) == UInt<1>("0x0"));
	assert(u2667341752.cat(u3877388331) == UInt<64>("0x9efc67b8e71c402b"));
	assert(u2667341752/u3877388331 == UInt<32>("0x0"));
	assert(u2667341752%u3877388331 == UInt<32>("0x9efc67b8"));
	assert(u3877388331+u2156440284 == UInt<33>("0x167a4eb07"));
	assert(u3877388331-u2156440284 == UInt<33>("0x6693954f"));
	assert(u3877388331*u2156440284 == UInt<64>("0x74098156f5bbb2f4"));
	assert(0 == (u3877388331<u2156440284));
	assert(0 == (u3877388331<=u2156440284));
	assert(1 == (u3877388331>u2156440284));
	assert(1 == (u3877388331>=u2156440284));
	assert(0 == (u3877388331==u2156440284));
	assert(1 == (u3877388331!=u2156440284));
	assert(u3877388331.pad<3>() == UInt<32>("0xe71c402b"));
	assert(u3877388331.shl<3>() == UInt<35>("0x738e20158"));
	assert(u3877388331.shr<3>() == UInt<29>("0x1ce38805"));
	assert((u3877388331&u2156440284) == UInt<32>("0x80080008"));
	assert((u3877388331|u2156440284) == UInt<32>("0xe79ceaff"));
	assert((u3877388331^u2156440284) == UInt<32>("0x6794eaf7"));
	assert((u3877388331.andr()) == UInt<1>("0x0"));
	assert((u3877388331.orr()) == UInt<1>("0x1"));
	assert((u3877388331.xorr()) == UInt<1>("0x0"));
	assert(u3877388331.cat(u2156440284) == UInt<64>("0xe71c402b8088aadc"));
	assert(u3877388331/u2156440284 == UInt<32>("0x1"));
	assert(u3877388331%u2156440284 == UInt<32>("0x6693954f"));
	assert(u3877388331+u2667341752 == UInt<33>("0x18618a7e3"));
	assert(u3877388331-u2667341752 == UInt<33>("0x481fd873"));
	assert(u3877388331*u2667341752 == UInt<64>("0x8f874d0c2e736be8"));
	assert(0 == (u3877388331<u2667341752));
	assert(0 == (u3877388331<=u2667341752));
	assert(1 == (u3877388331>u2667341752));
	assert(1 == (u3877388331>=u2667341752));
	assert(0 == (u3877388331==u2667341752));
	assert(1 == (u3877388331!=u2667341752));
	assert(u3877388331.pad<3>() == UInt<32>("0xe71c402b"));
	assert(u3877388331.shl<3>() == UInt<35>("0x738e20158"));
	assert(u3877388331.shr<3>() == UInt<29>("0x1ce38805"));
	assert((u3877388331&u2667341752) == UInt<32>("0x861c4028"));
	assert((u3877388331|u2667341752) == UInt<32>("0xfffc67bb"));
	assert((u3877388331^u2667341752) == UInt<32>("0x79e02793"));
	assert((u3877388331.andr()) == UInt<1>("0x0"));
	assert((u3877388331.orr()) == UInt<1>("0x1"));
	assert((u3877388331.xorr()) == UInt<1>("0x0"));
	assert(u3877388331.cat(u2667341752) == UInt<64>("0xe71c402b9efc67b8"));
	assert(u3877388331/u2667341752 == UInt<32>("0x1"));
	assert(u3877388331%u2667341752 == UInt<32>("0x481fd873"));
	assert(u3877388331+u3877388331 == UInt<33>("0x1ce388056"));
	assert(u3877388331-u3877388331 == UInt<33>("0x0"));
	assert(u3877388331*u3877388331 == UInt<64>("0xd0a3feebb37d8739"));
	assert(0 == (u3877388331<u3877388331));
	assert(1 == (u3877388331<=u3877388331));
	assert(0 == (u3877388331>u3877388331));
	assert(1 == (u3877388331>=u3877388331));
	assert(1 == (u3877388331==u3877388331));
	assert(0 == (u3877388331!=u3877388331));
	assert(u3877388331.pad<3>() == UInt<32>("0xe71c402b"));
	assert(u3877388331.shl<3>() == UInt<35>("0x738e20158"));
	assert(u3877388331.shr<3>() == UInt<29>("0x1ce38805"));
	assert((u3877388331&u3877388331) == UInt<32>("0xe71c402b"));
	assert((u3877388331|u3877388331) == UInt<32>("0xe71c402b"));
	assert((u3877388331^u3877388331) == UInt<32>("0x0"));
	assert((u3877388331.andr()) == UInt<1>("0x0"));
	assert((u3877388331.orr()) == UInt<1>("0x1"));
	assert((u3877388331.xorr()) == UInt<1>("0x0"));
	assert(u3877388331.cat(u3877388331) == UInt<64>("0xe71c402be71c402b"));
	assert(u3877388331/u3877388331 == UInt<32>("0x1"));
	assert(u3877388331%u3877388331 == UInt<32>("0x0"));
	UInt<127> u140349244793702604821764526298567243499("0x69964804b881c03c56761e906abf76eb");
	UInt<127> u132315208561866337404006706645711360224("0x638afb7335be357f869a81dbe7b290e0");
	UInt<127> u104330373585794557085662724836287897573("0x4e7d4c8f2ed7c299c7d17dcceb18dfe5");
	assert(u140349244793702604821764526298567243499+u140349244793702604821764526298567243499 == UInt<128>("0xd32c900971038078acec3d20d57eedd6"));
	assert(u140349244793702604821764526298567243499-u140349244793702604821764526298567243499 == UInt<128>("0x0"));
	assert(u140349244793702604821764526298567243499*u140349244793702604821764526298567243499 == UInt<254>("0x2b8c9f4c59254f9e0accf01d7723d75f63ad3e1a1d77750ca86bfa0d45e77bb9"));
	assert(0 == (u140349244793702604821764526298567243499<u140349244793702604821764526298567243499));
	assert(1 == (u140349244793702604821764526298567243499<=u140349244793702604821764526298567243499));
	assert(0 == (u140349244793702604821764526298567243499>u140349244793702604821764526298567243499));
	assert(1 == (u140349244793702604821764526298567243499>=u140349244793702604821764526298567243499));
	assert(1 == (u140349244793702604821764526298567243499==u140349244793702604821764526298567243499));
	assert(0 == (u140349244793702604821764526298567243499!=u140349244793702604821764526298567243499));
	assert(u140349244793702604821764526298567243499.pad<3>() == UInt<127>("0x69964804b881c03c56761e906abf76eb"));
	assert(u140349244793702604821764526298567243499.shl<3>() == UInt<130>("0x34cb24025c40e01e2b3b0f48355fbb758"));
	assert(u140349244793702604821764526298567243499.shr<3>() == UInt<124>("0xd32c900971038078acec3d20d57eedd"));
	assert((u140349244793702604821764526298567243499&u140349244793702604821764526298567243499) == UInt<127>("0x69964804b881c03c56761e906abf76eb"));
	assert((u140349244793702604821764526298567243499|u140349244793702604821764526298567243499) == UInt<127>("0x69964804b881c03c56761e906abf76eb"));
	assert((u140349244793702604821764526298567243499^u140349244793702604821764526298567243499) == UInt<127>("0x0"));
	assert((u140349244793702604821764526298567243499.andr()) == UInt<1>("0x0"));
	assert((u140349244793702604821764526298567243499.orr()) == UInt<1>("0x1"));
	assert((u140349244793702604821764526298567243499.xorr()) == UInt<1>("0x0"));
	assert(u140349244793702604821764526298567243499.cat(u140349244793702604821764526298567243499) == UInt<254>("0x34cb24025c40e01e2b3b0f48355fbb75e9964804b881c03c56761e906abf76eb"));
	assert(u140349244793702604821764526298567243499+u132315208561866337404006706645711360224 == UInt<128>("0xcd214377ee3ff5bbdd10a06c527207cb"));
	assert(u140349244793702604821764526298567243499-u132315208561866337404006706645711360224 == UInt<128>("0x60b4c9182c38abccfdb9cb4830ce60b"));
	assert(u140349244793702604821764526298567243499*u132315208561866337404006706645711360224 == UInt<254>("0x290e7092832f2ed23369b2abc2d78c7c4bb17ede82dad97b015e1de0d6d23da0"));
	assert(0 == (u140349244793702604821764526298567243499<u132315208561866337404006706645711360224));
	assert(0 == (u140349244793702604821764526298567243499<=u132315208561866337404006706645711360224));
	assert(1 == (u140349244793702604821764526298567243499>u132315208561866337404006706645711360224));
	assert(1 == (u140349244793702604821764526298567243499>=u132315208561866337404006706645711360224));
	assert(0 == (u140349244793702604821764526298567243499==u132315208561866337404006706645711360224));
	assert(1 == (u140349244793702604821764526298567243499!=u132315208561866337404006706645711360224));
	assert(u140349244793702604821764526298567243499.pad<3>() == UInt<127>("0x69964804b881c03c56761e906abf76eb"));
	assert(u140349244793702604821764526298567243499.shl<3>() == UInt<130>("0x34cb24025c40e01e2b3b0f48355fbb758"));
	assert(u140349244793702604821764526298567243499.shr<3>() == UInt<124>("0xd32c900971038078acec3d20d57eedd"));
	assert((u140349244793702604821764526298567243499&u132315208561866337404006706645711360224) == UInt<127>("0x618248003080003c0612009062b210e0"));
	assert((u140349244793702604821764526298567243499|u132315208561866337404006706645711360224) == UInt<127>("0x6b9efb77bdbff57fd6fe9fdbefbff6eb"));
	assert((u140349244793702604821764526298567243499^u132315208561866337404006706645711360224) == UInt<127>("0xa1cb3778d3ff543d0ec9f4b8d0de60b"));
	assert((u140349244793702604821764526298567243499.andr()) == UInt<1>("0x0"));
	assert((u140349244793702604821764526298567243499.orr()) == UInt<1>("0x1"));
	assert((u140349244793702604821764526298567243499.xorr()) == UInt<1>("0x0"));
	assert(u140349244793702604821764526298567243499.cat(u132315208561866337404006706645711360224) == UInt<254>("0x34cb24025c40e01e2b3b0f48355fbb75e38afb7335be357f869a81dbe7b290e0"));
	assert(u140349244793702604821764526298567243499+u104330373585794557085662724836287897573 == UInt<128>("0xb8139493e75982d61e479c5d55d856d0"));
	assert(u140349244793702604821764526298567243499-u104330373585794557085662724836287897573 == UInt<128>("0x1b18fb7589a9fda28ea4a0c37fa69706"));
	assert(u140349244793702604821764526298567243499*u104330373585794557085662724836287897573 == UInt<254>("0x205f77e6462b3fc17a479e138ab2431e9deff3b6436411d3fc4f6a8d24e41537"));
	assert(0 == (u140349244793702604821764526298567243499<u104330373585794557085662724836287897573));
	assert(0 == (u140349244793702604821764526298567243499<=u104330373585794557085662724836287897573));
	assert(1 == (u140349244793702604821764526298567243499>u104330373585794557085662724836287897573));
	assert(1 == (u140349244793702604821764526298567243499>=u104330373585794557085662724836287897573));
	assert(0 == (u140349244793702604821764526298567243499==u104330373585794557085662724836287897573));
	assert(1 == (u140349244793702604821764526298567243499!=u104330373585794557085662724836287897573));
	assert(u140349244793702604821764526298567243499.pad<3>() == UInt<127>("0x69964804b881c03c56761e906abf76eb"));
	assert(u140349244793702604821764526298567243499.shl<3>() == UInt<130>("0x34cb24025c40e01e2b3b0f48355fbb758"));
	assert(u140349244793702604821764526298567243499.shr<3>() == UInt<124>("0xd32c900971038078acec3d20d57eedd"));
	assert((u140349244793702604821764526298567243499&u104330373585794557085662724836287897573) == UInt<127>("0x481448042881c01846501c806a1856e1"));
	assert((u140349244793702604821764526298567243499|u104330373585794557085662724836287897573) == UInt<127>("0x6fff4c8fbed7c2bdd7f77fdcebbfffef"));
	assert((u140349244793702604821764526298567243499^u104330373585794557085662724836287897573) == UInt<127>("0x27eb048b965602a591a7635c81a7a90e"));
	assert((u140349244793702604821764526298567243499.andr()) == UInt<1>("0x0"));
	assert((u140349244793702604821764526298567243499.orr()) == UInt<1>("0x1"));
	assert((u140349244793702604821764526298567243499.xorr()) == UInt<1>("0x0"));
	assert(u140349244793702604821764526298567243499.cat(u104330373585794557085662724836287897573) == UInt<254>("0x34cb24025c40e01e2b3b0f48355fbb75ce7d4c8f2ed7c299c7d17dcceb18dfe5"));
	assert(u132315208561866337404006706645711360224+u140349244793702604821764526298567243499 == UInt<128>("0xcd214377ee3ff5bbdd10a06c527207cb"));
	assert(u132315208561866337404006706645711360224-u140349244793702604821764526298567243499 == UInt<128>("0xf9f4b36e7d3c75433024634b7cf319f5"));
	assert(u132315208561866337404006706645711360224*u140349244793702604821764526298567243499 == UInt<254>("0x290e7092832f2ed23369b2abc2d78c7c4bb17ede82dad97b015e1de0d6d23da0"));
	assert(1 == (u132315208561866337404006706645711360224<u140349244793702604821764526298567243499));
	assert(1 == (u132315208561866337404006706645711360224<=u140349244793702604821764526298567243499));
	assert(0 == (u132315208561866337404006706645711360224>u140349244793702604821764526298567243499));
	assert(0 == (u132315208561866337404006706645711360224>=u140349244793702604821764526298567243499));
	assert(0 == (u132315208561866337404006706645711360224==u140349244793702604821764526298567243499));
	assert(1 == (u132315208561866337404006706645711360224!=u140349244793702604821764526298567243499));
	assert(u132315208561866337404006706645711360224.pad<3>() == UInt<127>("0x638afb7335be357f869a81dbe7b290e0"));
	assert(u132315208561866337404006706645711360224.shl<3>() == UInt<130>("0x31c57db99adf1abfc34d40edf3d948700"));
	assert(u132315208561866337404006706645711360224.shr<3>() == UInt<124>("0xc715f6e66b7c6aff0d3503b7cf6521c"));
	assert((u132315208561866337404006706645711360224&u140349244793702604821764526298567243499) == UInt<127>("0x618248003080003c0612009062b210e0"));
	assert((u132315208561866337404006706645711360224|u140349244793702604821764526298567243499) == UInt<127>("0x6b9efb77bdbff57fd6fe9fdbefbff6eb"));
	assert((u132315208561866337404006706645711360224^u140349244793702604821764526298567243499) == UInt<127>("0xa1cb3778d3ff543d0ec9f4b8d0de60b"));
	assert((u132315208561866337404006706645711360224.andr()) == UInt<1>("0x0"));
	assert((u132315208561866337404006706645711360224.orr()) == UInt<1>("0x1"));
	assert((u132315208561866337404006706645711360224.xorr()) == UInt<1>("0x0"));
	assert(u132315208561866337404006706645711360224.cat(u140349244793702604821764526298567243499) == UInt<254>("0x31c57db99adf1abfc34d40edf3d9487069964804b881c03c56761e906abf76eb"));
	assert(u132315208561866337404006706645711360224+u132315208561866337404006706645711360224 == UInt<128>("0xc715f6e66b7c6aff0d3503b7cf6521c0"));
	assert(u132315208561866337404006706645711360224-u132315208561866337404006706645711360224 == UInt<128>("0x0"));
	assert(u132315208561866337404006706645711360224*u132315208561866337404006706645711360224 == UInt<254>("0x26b4c9ef2ac22daea0ad110441f5a0dc6239499e54a98d2900b95d42097cc400"));
	assert(0 == (u132315208561866337404006706645711360224<u132315208561866337404006706645711360224));
	assert(1 == (u132315208561866337404006706645711360224<=u132315208561866337404006706645711360224));
	assert(0 == (u132315208561866337404006706645711360224>u132315208561866337404006706645711360224));
	assert(1 == (u132315208561866337404006706645711360224>=u132315208561866337404006706645711360224));
	assert(1 == (u132315208561866337404006706645711360224==u132315208561866337404006706645711360224));
	assert(0 == (u132315208561866337404006706645711360224!=u132315208561866337404006706645711360224));
	assert(u132315208561866337404006706645711360224.pad<3>() == UInt<127>("0x638afb7335be357f869a81dbe7b290e0"));
	assert(u132315208561866337404006706645711360224.shl<3>() == UInt<130>("0x31c57db99adf1abfc34d40edf3d948700"));
	assert(u132315208561866337404006706645711360224.shr<3>() == UInt<124>("0xc715f6e66b7c6aff0d3503b7cf6521c"));
	assert((u132315208561866337404006706645711360224&u132315208561866337404006706645711360224) == UInt<127>("0x638afb7335be357f869a81dbe7b290e0"));
	assert((u132315208561866337404006706645711360224|u132315208561866337404006706645711360224) == UInt<127>("0x638afb7335be357f869a81dbe7b290e0"));
	assert((u132315208561866337404006706645711360224^u132315208561866337404006706645711360224) == UInt<127>("0x0"));
	assert((u132315208561866337404006706645711360224.andr()) == UInt<1>("0x0"));
	assert((u132315208561866337404006706645711360224.orr()) == UInt<1>("0x1"));
	assert((u132315208561866337404006706645711360224.xorr()) == UInt<1>("0x0"));
	assert(u132315208561866337404006706645711360224.cat(u132315208561866337404006706645711360224) == UInt<254>("0x31c57db99adf1abfc34d40edf3d94870638afb7335be357f869a81dbe7b290e0"));
	assert(u132315208561866337404006706645711360224+u104330373585794557085662724836287897573 == UInt<128>("0xb20848026495f8194e6bffa8d2cb70c5"));
	assert(u132315208561866337404006706645711360224-u104330373585794557085662724836287897573 == UInt<128>("0x150daee406e672e5bec9040efc99b0fb"));
	assert(u132315208561866337404006706645711360224*u104330373585794557085662724836287897573 == UInt<254>("0x1e85113ed120ba0f7723f0fdf61e671b7d2330623a128daa438c2ec603eeb860"));
	assert(0 == (u132315208561866337404006706645711360224<u104330373585794557085662724836287897573));
	assert(0 == (u132315208561866337404006706645711360224<=u104330373585794557085662724836287897573));
	assert(1 == (u132315208561866337404006706645711360224>u104330373585794557085662724836287897573));
	assert(1 == (u132315208561866337404006706645711360224>=u104330373585794557085662724836287897573));
	assert(0 == (u132315208561866337404006706645711360224==u104330373585794557085662724836287897573));
	assert(1 == (u132315208561866337404006706645711360224!=u104330373585794557085662724836287897573));
	assert(u132315208561866337404006706645711360224.pad<3>() == UInt<127>("0x638afb7335be357f869a81dbe7b290e0"));
	assert(u132315208561866337404006706645711360224.shl<3>() == UInt<130>("0x31c57db99adf1abfc34d40edf3d948700"));
	assert(u132315208561866337404006706645711360224.shr<3>() == UInt<124>("0xc715f6e66b7c6aff0d3503b7cf6521c"));
	assert((u132315208561866337404006706645711360224&u104330373585794557085662724836287897573) == UInt<127>("0x4208480324960019869001c8e31090e0"));
	assert((u132315208561866337404006706645711360224|u104330373585794557085662724836287897573) == UInt<127>("0x6fffffff3ffff7ffc7dbfddfefbadfe5"));
	assert((u132315208561866337404006706645711360224^u104330373585794557085662724836287897573) == UInt<127>("0x2df7b7fc1b69f7e6414bfc170caa4f05"));
	assert((u132315208561866337404006706645711360224.andr()) == UInt<1>("0x0"));
	assert((u132315208561866337404006706645711360224.orr()) == UInt<1>("0x1"));
	assert((u132315208561866337404006706645711360224.xorr()) == UInt<1>("0x0"));
	assert(u132315208561866337404006706645711360224.cat(u104330373585794557085662724836287897573) == UInt<254>("0x31c57db99adf1abfc34d40edf3d948704e7d4c8f2ed7c299c7d17dcceb18dfe5"));
	assert(u104330373585794557085662724836287897573+u140349244793702604821764526298567243499 == UInt<128>("0xb8139493e75982d61e479c5d55d856d0"));
	assert(u104330373585794557085662724836287897573-u140349244793702604821764526298567243499 == UInt<128>("0xe4e7048a7656025d715b5f3c805968fa"));
	assert(u104330373585794557085662724836287897573*u140349244793702604821764526298567243499 == UInt<254>("0x205f77e6462b3fc17a479e138ab2431e9deff3b6436411d3fc4f6a8d24e41537"));
	assert(1 == (u104330373585794557085662724836287897573<u140349244793702604821764526298567243499));
	assert(1 == (u104330373585794557085662724836287897573<=u140349244793702604821764526298567243499));
	assert(0 == (u104330373585794557085662724836287897573>u140349244793702604821764526298567243499));
	assert(0 == (u104330373585794557085662724836287897573>=u140349244793702604821764526298567243499));
	assert(0 == (u104330373585794557085662724836287897573==u140349244793702604821764526298567243499));
	assert(1 == (u104330373585794557085662724836287897573!=u140349244793702604821764526298567243499));
	assert(u104330373585794557085662724836287897573.pad<3>() == UInt<127>("0x4e7d4c8f2ed7c299c7d17dcceb18dfe5"));
	assert(u104330373585794557085662724836287897573.shl<3>() == UInt<130>("0x273ea647976be14ce3e8bee6758c6ff28"));
	assert(u104330373585794557085662724836287897573.shr<3>() == UInt<124>("0x9cfa991e5daf85338fa2fb99d631bfc"));
	assert((u104330373585794557085662724836287897573&u140349244793702604821764526298567243499) == UInt<127>("0x481448042881c01846501c806a1856e1"));
	assert((u104330373585794557085662724836287897573|u140349244793702604821764526298567243499) == UInt<127>("0x6fff4c8fbed7c2bdd7f77fdcebbfffef"));
	assert((u104330373585794557085662724836287897573^u140349244793702604821764526298567243499) == UInt<127>("0x27eb048b965602a591a7635c81a7a90e"));
	assert((u104330373585794557085662724836287897573.andr()) == UInt<1>("0x0"));
	assert((u104330373585794557085662724836287897573.orr()) == UInt<1>("0x1"));
	assert((u104330373585794557085662724836287897573.xorr()) == UInt<1>("0x0"));
	assert(u104330373585794557085662724836287897573.cat(u140349244793702604821764526298567243499) == UInt<254>("0x273ea647976be14ce3e8bee6758c6ff2e9964804b881c03c56761e906abf76eb"));
	assert(u104330373585794557085662724836287897573+u132315208561866337404006706645711360224 == UInt<128>("0xb20848026495f8194e6bffa8d2cb70c5"));
	assert(u104330373585794557085662724836287897573-u132315208561866337404006706645711360224 == UInt<128>("0xeaf2511bf9198d1a4136fbf103664f05"));
	assert(u104330373585794557085662724836287897573*u132315208561866337404006706645711360224 == UInt<254>("0x1e85113ed120ba0f7723f0fdf61e671b7d2330623a128daa438c2ec603eeb860"));
	assert(1 == (u104330373585794557085662724836287897573<u132315208561866337404006706645711360224));
	assert(1 == (u104330373585794557085662724836287897573<=u132315208561866337404006706645711360224));
	assert(0 == (u104330373585794557085662724836287897573>u132315208561866337404006706645711360224));
	assert(0 == (u104330373585794557085662724836287897573>=u132315208561866337404006706645711360224));
	assert(0 == (u104330373585794557085662724836287897573==u132315208561866337404006706645711360224));
	assert(1 == (u104330373585794557085662724836287897573!=u132315208561866337404006706645711360224));
	assert(u104330373585794557085662724836287897573.pad<3>() == UInt<127>("0x4e7d4c8f2ed7c299c7d17dcceb18dfe5"));
	assert(u104330373585794557085662724836287897573.shl<3>() == UInt<130>("0x273ea647976be14ce3e8bee6758c6ff28"));
	assert(u104330373585794557085662724836287897573.shr<3>() == UInt<124>("0x9cfa991e5daf85338fa2fb99d631bfc"));
	assert((u104330373585794557085662724836287897573&u132315208561866337404006706645711360224) == UInt<127>("0x4208480324960019869001c8e31090e0"));
	assert((u104330373585794557085662724836287897573|u132315208561866337404006706645711360224) == UInt<127>("0x6fffffff3ffff7ffc7dbfddfefbadfe5"));
	assert((u104330373585794557085662724836287897573^u132315208561866337404006706645711360224) == UInt<127>("0x2df7b7fc1b69f7e6414bfc170caa4f05"));
	assert((u104330373585794557085662724836287897573.andr()) == UInt<1>("0x0"));
	assert((u104330373585794557085662724836287897573.orr()) == UInt<1>("0x1"));
	assert((u104330373585794557085662724836287897573.xorr()) == UInt<1>("0x0"));
	assert(u104330373585794557085662724836287897573.cat(u132315208561866337404006706645711360224) == UInt<254>("0x273ea647976be14ce3e8bee6758c6ff2e38afb7335be357f869a81dbe7b290e0"));
	assert(u104330373585794557085662724836287897573+u104330373585794557085662724836287897573 == UInt<128>("0x9cfa991e5daf85338fa2fb99d631bfca"));
	assert(u104330373585794557085662724836287897573-u104330373585794557085662724836287897573 == UInt<128>("0x0"));
	assert(u104330373585794557085662724836287897573*u104330373585794557085662724836287897573 == UInt<254>("0x181097fb1b448d2f3919c1770e274f9086163e5a51a3000b6c1b24712cc0c2d9"));
	assert(0 == (u104330373585794557085662724836287897573<u104330373585794557085662724836287897573));
	assert(1 == (u104330373585794557085662724836287897573<=u104330373585794557085662724836287897573));
	assert(0 == (u104330373585794557085662724836287897573>u104330373585794557085662724836287897573));
	assert(1 == (u104330373585794557085662724836287897573>=u104330373585794557085662724836287897573));
	assert(1 == (u104330373585794557085662724836287897573==u104330373585794557085662724836287897573));
	assert(0 == (u104330373585794557085662724836287897573!=u104330373585794557085662724836287897573));
	assert(u104330373585794557085662724836287897573.pad<3>() == UInt<127>("0x4e7d4c8f2ed7c299c7d17dcceb18dfe5"));
	assert(u104330373585794557085662724836287897573.shl<3>() == UInt<130>("0x273ea647976be14ce3e8bee6758c6ff28"));
	assert(u104330373585794557085662724836287897573.shr<3>() == UInt<124>("0x9cfa991e5daf85338fa2fb99d631bfc"));
	assert((u104330373585794557085662724836287897573&u104330373585794557085662724836287897573) == UInt<127>("0x4e7d4c8f2ed7c299c7d17dcceb18dfe5"));
	assert((u104330373585794557085662724836287897573|u104330373585794557085662724836287897573) == UInt<127>("0x4e7d4c8f2ed7c299c7d17dcceb18dfe5"));
	assert((u104330373585794557085662724836287897573^u104330373585794557085662724836287897573) == UInt<127>("0x0"));
	assert((u104330373585794557085662724836287897573.andr()) == UInt<1>("0x0"));
	assert((u104330373585794557085662724836287897573.orr()) == UInt<1>("0x1"));
	assert((u104330373585794557085662724836287897573.xorr()) == UInt<1>("0x0"));
	assert(u104330373585794557085662724836287897573.cat(u104330373585794557085662724836287897573) == UInt<254>("0x273ea647976be14ce3e8bee6758c6ff2ce7d4c8f2ed7c299c7d17dcceb18dfe5"));
	UInt<200> u1385328322209907756474073261047555623703711897945934516037052("0xdcb20e8b7e6e639a8e5cc9c0534c0cd6cd817fb27fad71a5bc");
	UInt<200> u869410280897615230166662576335135735722208517304568517550775("0x8a814add5fde820da966d471012125b899c0862c92deace2b7");
	UInt<200> u1448164558285041256472795363994771356095096345450827416898150("0xe6b4b775ca5eeb6bcdcfb959551f08f65a34c96ccbfe6c8a66");
	assert(u1385328322209907756474073261047555623703711897945934516037052+u1385328322209907756474073261047555623703711897945934516037052 == UInt<201>("0x1b9641d16fcdcc7351cb99380a69819ad9b02ff64ff5ae34b78"));
	assert(u1385328322209907756474073261047555623703711897945934516037052-u1385328322209907756474073261047555623703711897945934516037052 == UInt<201>("0x0"));
	assert(u1385328322209907756474073261047555623703711897945934516037052*u1385328322209907756474073261047555623703711897945934516037052 == UInt<400>("0xbe4284d7fc1d1a8ac4d35ed9c129418be008ca90363954e55fbd778b0e3756fb8a8902ea7d0436aa2bc17f46acfbd343e210"));
	assert(0 == (u1385328322209907756474073261047555623703711897945934516037052<u1385328322209907756474073261047555623703711897945934516037052));
	assert(1 == (u1385328322209907756474073261047555623703711897945934516037052<=u1385328322209907756474073261047555623703711897945934516037052));
	assert(0 == (u1385328322209907756474073261047555623703711897945934516037052>u1385328322209907756474073261047555623703711897945934516037052));
	assert(1 == (u1385328322209907756474073261047555623703711897945934516037052>=u1385328322209907756474073261047555623703711897945934516037052));
	assert(1 == (u1385328322209907756474073261047555623703711897945934516037052==u1385328322209907756474073261047555623703711897945934516037052));
	assert(0 == (u1385328322209907756474073261047555623703711897945934516037052!=u1385328322209907756474073261047555623703711897945934516037052));
	assert(u1385328322209907756474073261047555623703711897945934516037052.pad<3>() == UInt<200>("0xdcb20e8b7e6e639a8e5cc9c0534c0cd6cd817fb27fad71a5bc"));
	assert(u1385328322209907756474073261047555623703711897945934516037052.shl<3>() == UInt<203>("0x6e590745bf3731cd472e64e029a6066b66c0bfd93fd6b8d2de0"));
	assert(u1385328322209907756474073261047555623703711897945934516037052.shr<3>() == UInt<197>("0x1b9641d16fcdcc7351cb99380a69819ad9b02ff64ff5ae34b7"));
	assert((u1385328322209907756474073261047555623703711897945934516037052&u1385328322209907756474073261047555623703711897945934516037052) == UInt<200>("0xdcb20e8b7e6e639a8e5cc9c0534c0cd6cd817fb27fad71a5bc"));
	assert((u1385328322209907756474073261047555623703711897945934516037052|u1385328322209907756474073261047555623703711897945934516037052) == UInt<200>("0xdcb20e8b7e6e639a8e5cc9c0534c0cd6cd817fb27fad71a5bc"));
	assert((u1385328322209907756474073261047555623703711897945934516037052^u1385328322209907756474073261047555623703711897945934516037052) == UInt<200>("0x0"));
	assert((u1385328322209907756474073261047555623703711897945934516037052.andr()) == UInt<1>("0x0"));
	assert((u1385328322209907756474073261047555623703711897945934516037052.orr()) == UInt<1>("0x1"));
	assert((u1385328322209907756474073261047555623703711897945934516037052.xorr()) == UInt<1>("0x0"));
	assert(u1385328322209907756474073261047555623703711897945934516037052.cat(u1385328322209907756474073261047555623703711897945934516037052) == UInt<400>("0xdcb20e8b7e6e639a8e5cc9c0534c0cd6cd817fb27fad71a5bcdcb20e8b7e6e639a8e5cc9c0534c0cd6cd817fb27fad71a5bc"));
	assert(u1385328322209907756474073261047555623703711897945934516037052+u869410280897615230166662576335135735722208517304568517550775 == UInt<201>("0x167335968de4ce5a837c39e31546d328f674205df128c1e8873"));
	assert(u1385328322209907756474073261047555623703711897945934516037052-u869410280897615230166662576335135735722208517304568517550775 == UInt<201>("0x5230c3ae1e8fe18ce4f5f54f522ae71e33c0f985eccec4c305"));
	assert(u1385328322209907756474073261047555623703711897945934516037052*u869410280897615230166662576335135735722208517304568517550775 == UInt<400>("0x7767721ad702fe362310cac205f09f5e111e930b5047dbe7225d6a3340e31f03171877926e40c1d1a99727c33bafb2dd7164"));
	assert(0 == (u1385328322209907756474073261047555623703711897945934516037052<u869410280897615230166662576335135735722208517304568517550775));
	assert(0 == (u1385328322209907756474073261047555623703711897945934516037052<=u869410280897615230166662576335135735722208517304568517550775));
	assert(1 == (u1385328322209907756474073261047555623703711897945934516037052>u869410280897615230166662576335135735722208517304568517550775));
	assert(1 == (u1385328322209907756474073261047555623703711897945934516037052>=u869410280897615230166662576335135735722208517304568517550775));
	assert(0 == (u1385328322209907756474073261047555623703711897945934516037052==u869410280897615230166662576335135735722208517304568517550775));
	assert(1 == (u1385328322209907756474073261047555623703711897945934516037052!=u869410280897615230166662576335135735722208517304568517550775));
	assert(u1385328322209907756474073261047555623703711897945934516037052.pad<3>() == UInt<200>("0xdcb20e8b7e6e639a8e5cc9c0534c0cd6cd817fb27fad71a5bc"));
	assert(u1385328322209907756474073261047555623703711897945934516037052.shl<3>() == UInt<203>("0x6e590745bf3731cd472e64e029a6066b66c0bfd93fd6b8d2de0"));
	assert(u1385328322209907756474073261047555623703711897945934516037052.shr<3>() == UInt<197>("0x1b9641d16fcdcc7351cb99380a69819ad9b02ff64ff5ae34b7"));
	assert((u1385328322209907756474073261047555623703711897945934516037052&u869410280897615230166662576335135735722208517304568517550775) == UInt<200>("0x88800a895e4e02088844c0400100049089800620128c20a0b4"));
	assert((u1385328322209907756474073261047555623703711897945934516037052|u869410280897615230166662576335135735722208517304568517550775) == UInt<200>("0xdeb34edf7ffee39faf7eddf1536d2dfeddc1ffbefffffde7bf"));
	assert((u1385328322209907756474073261047555623703711897945934516037052^u869410280897615230166662576335135735722208517304568517550775) == UInt<200>("0x5633445621b0e197273a1db1526d296e5441f99eed73dd470b"));
	assert((u1385328322209907756474073261047555623703711897945934516037052.andr()) == UInt<1>("0x0"));
	assert((u1385328322209907756474073261047555623703711897945934516037052.orr()) == UInt<1>("0x1"));
	assert((u1385328322209907756474073261047555623703711897945934516037052.xorr()) == UInt<1>("0x0"));
	assert(u1385328322209907756474073261047555623703711897945934516037052.cat(u869410280897615230166662576335135735722208517304568517550775) == UInt<400>("0xdcb20e8b7e6e639a8e5cc9c0534c0cd6cd817fb27fad71a5bc8a814add5fde820da966d471012125b899c0862c92deace2b7"));
	assert(u1385328322209907756474073261047555623703711897945934516037052+u1448164558285041256472795363994771356095096345450827416898150 == UInt<201>("0x1c366c60148cd4f065c2c8319a86b15cd27b6491f4babde3022"));
	assert(u1385328322209907756474073261047555623703711897945934516037052-u1448164558285041256472795363994771356095096345450827416898150 == UInt<201>("0x1f5fd5715b40f782ec08d1066fe2d03e0734cb645b3af051b56"));
	assert(u1385328322209907756474073261047555623703711897945934516037052*u1448164558285041256472795363994771356095096345450827416898150 == UInt<400>("0xc6e3c46c61e8c40c6269c9cee62ef3000474de5316ea670001e6dff2b8a99af24d32c9be036f84394b1236b39cd4d1ef60e8"));
	assert(1 == (u1385328322209907756474073261047555623703711897945934516037052<u1448164558285041256472795363994771356095096345450827416898150));
	assert(1 == (u1385328322209907756474073261047555623703711897945934516037052<=u1448164558285041256472795363994771356095096345450827416898150));
	assert(0 == (u1385328322209907756474073261047555623703711897945934516037052>u1448164558285041256472795363994771356095096345450827416898150));
	assert(0 == (u1385328322209907756474073261047555623703711897945934516037052>=u1448164558285041256472795363994771356095096345450827416898150));
	assert(0 == (u1385328322209907756474073261047555623703711897945934516037052==u1448164558285041256472795363994771356095096345450827416898150));
	assert(1 == (u1385328322209907756474073261047555623703711897945934516037052!=u1448164558285041256472795363994771356095096345450827416898150));
	assert(u1385328322209907756474073261047555623703711897945934516037052.pad<3>() == UInt<200>("0xdcb20e8b7e6e639a8e5cc9c0534c0cd6cd817fb27fad71a5bc"));
	assert(u1385328322209907756474073261047555623703711897945934516037052.shl<3>() == UInt<203>("0x6e590745bf3731cd472e64e029a6066b66c0bfd93fd6b8d2de0"));
	assert(u1385328322209907756474073261047555623703711897945934516037052.shr<3>() == UInt<197>("0x1b9641d16fcdcc7351cb99380a69819ad9b02ff64ff5ae34b7"));
	assert((u1385328322209907756474073261047555623703711897945934516037052&u1448164558285041256472795363994771356095096345450827416898150) == UInt<200>("0xc4b006014a4e630a8c4c8940510c08d6480049204bac608024"));
	assert((u1385328322209907756474073261047555623703711897945934516037052|u1448164558285041256472795363994771356095096345450827416898150) == UInt<200>("0xfeb6bffffe7eebfbcfdff9d9575f0cf6dfb5fffeffff7daffe"));
	assert((u1385328322209907756474073261047555623703711897945934516037052^u1448164558285041256472795363994771356095096345450827416898150) == UInt<200>("0x3a06b9feb43088f1439370990653042097b5b6deb4531d2fda"));
	assert((u1385328322209907756474073261047555623703711897945934516037052.andr()) == UInt<1>("0x0"));
	assert((u1385328322209907756474073261047555623703711897945934516037052.orr()) == UInt<1>("0x1"));
	assert((u1385328322209907756474073261047555623703711897945934516037052.xorr()) == UInt<1>("0x0"));
	assert(u1385328322209907756474073261047555623703711897945934516037052.cat(u1448164558285041256472795363994771356095096345450827416898150) == UInt<400>("0xdcb20e8b7e6e639a8e5cc9c0534c0cd6cd817fb27fad71a5bce6b4b775ca5eeb6bcdcfb959551f08f65a34c96ccbfe6c8a66"));
	assert(u869410280897615230166662576335135735722208517304568517550775+u1385328322209907756474073261047555623703711897945934516037052 == UInt<201>("0x167335968de4ce5a837c39e31546d328f674205df128c1e8873"));
	assert(u869410280897615230166662576335135735722208517304568517550775-u1385328322209907756474073261047555623703711897945934516037052 == UInt<201>("0x1adcf3c51e1701e731b0a0ab0add518e1cc3f067a13313b3cfb"));
	assert(u869410280897615230166662576335135735722208517304568517550775*u1385328322209907756474073261047555623703711897945934516037052 == UInt<400>("0x7767721ad702fe362310cac205f09f5e111e930b5047dbe7225d6a3340e31f03171877926e40c1d1a99727c33bafb2dd7164"));
	assert(1 == (u869410280897615230166662576335135735722208517304568517550775<u1385328322209907756474073261047555623703711897945934516037052));
	assert(1 == (u869410280897615230166662576335135735722208517304568517550775<=u1385328322209907756474073261047555623703711897945934516037052));
	assert(0 == (u869410280897615230166662576335135735722208517304568517550775>u1385328322209907756474073261047555623703711897945934516037052));
	assert(0 == (u869410280897615230166662576335135735722208517304568517550775>=u1385328322209907756474073261047555623703711897945934516037052));
	assert(0 == (u869410280897615230166662576335135735722208517304568517550775==u1385328322209907756474073261047555623703711897945934516037052));
	assert(1 == (u869410280897615230166662576335135735722208517304568517550775!=u1385328322209907756474073261047555623703711897945934516037052));
	assert(u869410280897615230166662576335135735722208517304568517550775.pad<3>() == UInt<200>("0x8a814add5fde820da966d471012125b899c0862c92deace2b7"));
	assert(u869410280897615230166662576335135735722208517304568517550775.shl<3>() == UInt<203>("0x4540a56eafef4106d4b36a38809092dc4ce04316496f56715b8"));
	assert(u869410280897615230166662576335135735722208517304568517550775.shr<3>() == UInt<197>("0x1150295babfbd041b52cda8e202424b7133810c5925bd59c56"));
	assert((u869410280897615230166662576335135735722208517304568517550775&u1385328322209907756474073261047555623703711897945934516037052) == UInt<200>("0x88800a895e4e02088844c0400100049089800620128c20a0b4"));
	assert((u869410280897615230166662576335135735722208517304568517550775|u1385328322209907756474073261047555623703711897945934516037052) == UInt<200>("0xdeb34edf7ffee39faf7eddf1536d2dfeddc1ffbefffffde7bf"));
	assert((u869410280897615230166662576335135735722208517304568517550775^u1385328322209907756474073261047555623703711897945934516037052) == UInt<200>("0x5633445621b0e197273a1db1526d296e5441f99eed73dd470b"));
	assert((u869410280897615230166662576335135735722208517304568517550775.andr()) == UInt<1>("0x0"));
	assert((u869410280897615230166662576335135735722208517304568517550775.orr()) == UInt<1>("0x1"));
	assert((u869410280897615230166662576335135735722208517304568517550775.xorr()) == UInt<1>("0x0"));
	assert(u869410280897615230166662576335135735722208517304568517550775.cat(u1385328322209907756474073261047555623703711897945934516037052) == UInt<400>("0x8a814add5fde820da966d471012125b899c0862c92deace2b7dcb20e8b7e6e639a8e5cc9c0534c0cd6cd817fb27fad71a5bc"));
	assert(u869410280897615230166662576335135735722208517304568517550775+u869410280897615230166662576335135735722208517304568517550775 == UInt<201>("0x1150295babfbd041b52cda8e202424b7133810c5925bd59c56e"));
	assert(u869410280897615230166662576335135735722208517304568517550775-u869410280897615230166662576335135735722208517304568517550775 == UInt<201>("0x0"));
	assert(u869410280897615230166662576335135735722208517304568517550775*u869410280897615230166662576335135735722208517304568517550775 == UInt<400>("0x4aefa603345b3d5119aaee1dd2f500a18dfa34336f08690a9a2dec37b5348b701fb901b234b066fb509c0465ceb2d2af9ed1"));
	assert(0 == (u869410280897615230166662576335135735722208517304568517550775<u869410280897615230166662576335135735722208517304568517550775));
	assert(1 == (u869410280897615230166662576335135735722208517304568517550775<=u869410280897615230166662576335135735722208517304568517550775));
	assert(0 == (u869410280897615230166662576335135735722208517304568517550775>u869410280897615230166662576335135735722208517304568517550775));
	assert(1 == (u869410280897615230166662576335135735722208517304568517550775>=u869410280897615230166662576335135735722208517304568517550775));
	assert(1 == (u869410280897615230166662576335135735722208517304568517550775==u869410280897615230166662576335135735722208517304568517550775));
	assert(0 == (u869410280897615230166662576335135735722208517304568517550775!=u869410280897615230166662576335135735722208517304568517550775));
	assert(u869410280897615230166662576335135735722208517304568517550775.pad<3>() == UInt<200>("0x8a814add5fde820da966d471012125b899c0862c92deace2b7"));
	assert(u869410280897615230166662576335135735722208517304568517550775.shl<3>() == UInt<203>("0x4540a56eafef4106d4b36a38809092dc4ce04316496f56715b8"));
	assert(u869410280897615230166662576335135735722208517304568517550775.shr<3>() == UInt<197>("0x1150295babfbd041b52cda8e202424b7133810c5925bd59c56"));
	assert((u869410280897615230166662576335135735722208517304568517550775&u869410280897615230166662576335135735722208517304568517550775) == UInt<200>("0x8a814add5fde820da966d471012125b899c0862c92deace2b7"));
	assert((u869410280897615230166662576335135735722208517304568517550775|u869410280897615230166662576335135735722208517304568517550775) == UInt<200>("0x8a814add5fde820da966d471012125b899c0862c92deace2b7"));
	assert((u869410280897615230166662576335135735722208517304568517550775^u869410280897615230166662576335135735722208517304568517550775) == UInt<200>("0x0"));
	assert((u869410280897615230166662576335135735722208517304568517550775.andr()) == UInt<1>("0x0"));
	assert((u869410280897615230166662576335135735722208517304568517550775.orr()) == UInt<1>("0x1"));
	assert((u869410280897615230166662576335135735722208517304568517550775.xorr()) == UInt<1>("0x0"));
	assert(u869410280897615230166662576335135735722208517304568517550775.cat(u869410280897615230166662576335135735722208517304568517550775) == UInt<400>("0x8a814add5fde820da966d471012125b899c0862c92deace2b78a814add5fde820da966d471012125b899c0862c92deace2b7"));
	assert(u869410280897615230166662576335135735722208517304568517550775+u1448164558285041256472795363994771356095096345450827416898150 == UInt<201>("0x1713602532a3d6d7977368dca56402eaef3f54f995edd196d1d"));
	assert(u869410280897615230166662576335135735722208517304568517550775-u1448164558285041256472795363994771356095096345450827416898150 == UInt<201>("0x1a3cc9367957f96a1db971b17ac021cc23f8bbcbfc6e0405851"));
	assert(u869410280897615230166662576335135735722208517304568517550775*u1448164558285041256472795363994771356095096345450827416898150 == UInt<400>("0x7cd1ef6daee227ebc582e72343471cec147e253df17a69988433307c43d470a0374b4c914d29bb87986840ce638c224cfaea"));
	assert(1 == (u869410280897615230166662576335135735722208517304568517550775<u1448164558285041256472795363994771356095096345450827416898150));
	assert(1 == (u869410280897615230166662576335135735722208517304568517550775<=u1448164558285041256472795363994771356095096345450827416898150));
	assert(0 == (u869410280897615230166662576335135735722208517304568517550775>u1448164558285041256472795363994771356095096345450827416898150));
	assert(0 == (u869410280897615230166662576335135735722208517304568517550775>=u1448164558285041256472795363994771356095096345450827416898150));
	assert(0 == (u869410280897615230166662576335135735722208517304568517550775==u1448164558285041256472795363994771356095096345450827416898150));
	assert(1 == (u869410280897615230166662576335135735722208517304568517550775!=u1448164558285041256472795363994771356095096345450827416898150));
	assert(u869410280897615230166662576335135735722208517304568517550775.pad<3>() == UInt<200>("0x8a814add5fde820da966d471012125b899c0862c92deace2b7"));
	assert(u869410280897615230166662576335135735722208517304568517550775.shl<3>() == UInt<203>("0x4540a56eafef4106d4b36a38809092dc4ce04316496f56715b8"));
	assert(u869410280897615230166662576335135735722208517304568517550775.shr<3>() == UInt<197>("0x1150295babfbd041b52cda8e202424b7133810c5925bd59c56"));
	assert((u869410280897615230166662576335135735722208517304568517550775&u1448164558285041256472795363994771356095096345450827416898150) == UInt<200>("0x828002554a5e820989469051010100b01800802c82de2c8226"));
	assert((u869410280897615230166662576335135735722208517304568517550775|u1448164558285041256472795363994771356095096345450827416898150) == UInt<200>("0xeeb5fffddfdeeb6fedeffd79553f2dfedbf4cf6cdbfeeceaf7"));
	assert((u869410280897615230166662576335135735722208517304568517550775^u1448164558285041256472795363994771356095096345450827416898150) == UInt<200>("0x6c35fda89580696664a96d28543e2d4ec3f44f405920c068d1"));
	assert((u869410280897615230166662576335135735722208517304568517550775.andr()) == UInt<1>("0x0"));
	assert((u869410280897615230166662576335135735722208517304568517550775.orr()) == UInt<1>("0x1"));
	assert((u869410280897615230166662576335135735722208517304568517550775.xorr()) == UInt<1>("0x0"));
	assert(u869410280897615230166662576335135735722208517304568517550775.cat(u1448164558285041256472795363994771356095096345450827416898150) == UInt<400>("0x8a814add5fde820da966d471012125b899c0862c92deace2b7e6b4b775ca5eeb6bcdcfb959551f08f65a34c96ccbfe6c8a66"));
	assert(u1448164558285041256472795363994771356095096345450827416898150+u1385328322209907756474073261047555623703711897945934516037052 == UInt<201>("0x1c366c60148cd4f065c2c8319a86b15cd27b6491f4babde3022"));
	assert(u1448164558285041256472795363994771356095096345450827416898150-u1385328322209907756474073261047555623703711897945934516037052 == UInt<201>("0xa02a8ea4bf087d13f72ef9901d2fc1f8cb349ba4c50fae4aa"));
	assert(u1448164558285041256472795363994771356095096345450827416898150*u1385328322209907756474073261047555623703711897945934516037052 == UInt<400>("0xc6e3c46c61e8c40c6269c9cee62ef3000474de5316ea670001e6dff2b8a99af24d32c9be036f84394b1236b39cd4d1ef60e8"));
	assert(0 == (u1448164558285041256472795363994771356095096345450827416898150<u1385328322209907756474073261047555623703711897945934516037052));
	assert(0 == (u1448164558285041256472795363994771356095096345450827416898150<=u1385328322209907756474073261047555623703711897945934516037052));
	assert(1 == (u1448164558285041256472795363994771356095096345450827416898150>u1385328322209907756474073261047555623703711897945934516037052));
	assert(1 == (u1448164558285041256472795363994771356095096345450827416898150>=u1385328322209907756474073261047555623703711897945934516037052));
	assert(0 == (u1448164558285041256472795363994771356095096345450827416898150==u1385328322209907756474073261047555623703711897945934516037052));
	assert(1 == (u1448164558285041256472795363994771356095096345450827416898150!=u1385328322209907756474073261047555623703711897945934516037052));
	assert(u1448164558285041256472795363994771356095096345450827416898150.pad<3>() == UInt<200>("0xe6b4b775ca5eeb6bcdcfb959551f08f65a34c96ccbfe6c8a66"));
	assert(u1448164558285041256472795363994771356095096345450827416898150.shl<3>() == UInt<203>("0x735a5bbae52f75b5e6e7dcacaa8f847b2d1a64b665ff3645330"));
	assert(u1448164558285041256472795363994771356095096345450827416898150.shr<3>() == UInt<197>("0x1cd696eeb94bdd6d79b9f72b2aa3e11ecb46992d997fcd914c"));
	assert((u1448164558285041256472795363994771356095096345450827416898150&u1385328322209907756474073261047555623703711897945934516037052) == UInt<200>("0xc4b006014a4e630a8c4c8940510c08d6480049204bac608024"));
	assert((u1448164558285041256472795363994771356095096345450827416898150|u1385328322209907756474073261047555623703711897945934516037052) == UInt<200>("0xfeb6bffffe7eebfbcfdff9d9575f0cf6dfb5fffeffff7daffe"));
	assert((u1448164558285041256472795363994771356095096345450827416898150^u1385328322209907756474073261047555623703711897945934516037052) == UInt<200>("0x3a06b9feb43088f1439370990653042097b5b6deb4531d2fda"));
	assert((u1448164558285041256472795363994771356095096345450827416898150.andr()) == UInt<1>("0x0"));
	assert((u1448164558285041256472795363994771356095096345450827416898150.orr()) == UInt<1>("0x1"));
	assert((u1448164558285041256472795363994771356095096345450827416898150.xorr()) == UInt<1>("0x0"));
	assert(u1448164558285041256472795363994771356095096345450827416898150.cat(u1385328322209907756474073261047555623703711897945934516037052) == UInt<400>("0xe6b4b775ca5eeb6bcdcfb959551f08f65a34c96ccbfe6c8a66dcb20e8b7e6e639a8e5cc9c0534c0cd6cd817fb27fad71a5bc"));
	assert(u1448164558285041256472795363994771356095096345450827416898150+u869410280897615230166662576335135735722208517304568517550775 == UInt<201>("0x1713602532a3d6d7977368dca56402eaef3f54f995edd196d1d"));
	assert(u1448164558285041256472795363994771356095096345450827416898150-u869410280897615230166662576335135735722208517304568517550775 == UInt<201>("0x5c336c986a80695e2468e4e853fde33dc0744340391fbfa7af"));
	assert(u1448164558285041256472795363994771356095096345450827416898150*u869410280897615230166662576335135735722208517304568517550775 == UInt<400>("0x7cd1ef6daee227ebc582e72343471cec147e253df17a69988433307c43d470a0374b4c914d29bb87986840ce638c224cfaea"));
	assert(0 == (u1448164558285041256472795363994771356095096345450827416898150<u869410280897615230166662576335135735722208517304568517550775));
	assert(0 == (u1448164558285041256472795363994771356095096345450827416898150<=u869410280897615230166662576335135735722208517304568517550775));
	assert(1 == (u1448164558285041256472795363994771356095096345450827416898150>u869410280897615230166662576335135735722208517304568517550775));
	assert(1 == (u1448164558285041256472795363994771356095096345450827416898150>=u869410280897615230166662576335135735722208517304568517550775));
	assert(0 == (u1448164558285041256472795363994771356095096345450827416898150==u869410280897615230166662576335135735722208517304568517550775));
	assert(1 == (u1448164558285041256472795363994771356095096345450827416898150!=u869410280897615230166662576335135735722208517304568517550775));
	assert(u1448164558285041256472795363994771356095096345450827416898150.pad<3>() == UInt<200>("0xe6b4b775ca5eeb6bcdcfb959551f08f65a34c96ccbfe6c8a66"));
	assert(u1448164558285041256472795363994771356095096345450827416898150.shl<3>() == UInt<203>("0x735a5bbae52f75b5e6e7dcacaa8f847b2d1a64b665ff3645330"));
	assert(u1448164558285041256472795363994771356095096345450827416898150.shr<3>() == UInt<197>("0x1cd696eeb94bdd6d79b9f72b2aa3e11ecb46992d997fcd914c"));
	assert((u1448164558285041256472795363994771356095096345450827416898150&u869410280897615230166662576335135735722208517304568517550775) == UInt<200>("0x828002554a5e820989469051010100b01800802c82de2c8226"));
	assert((u1448164558285041256472795363994771356095096345450827416898150|u869410280897615230166662576335135735722208517304568517550775) == UInt<200>("0xeeb5fffddfdeeb6fedeffd79553f2dfedbf4cf6cdbfeeceaf7"));
	assert((u1448164558285041256472795363994771356095096345450827416898150^u869410280897615230166662576335135735722208517304568517550775) == UInt<200>("0x6c35fda89580696664a96d28543e2d4ec3f44f405920c068d1"));
	assert((u1448164558285041256472795363994771356095096345450827416898150.andr()) == UInt<1>("0x0"));
	assert((u1448164558285041256472795363994771356095096345450827416898150.orr()) == UInt<1>("0x1"));
	assert((u1448164558285041256472795363994771356095096345450827416898150.xorr()) == UInt<1>("0x0"));
	assert(u1448164558285041256472795363994771356095096345450827416898150.cat(u869410280897615230166662576335135735722208517304568517550775) == UInt<400>("0xe6b4b775ca5eeb6bcdcfb959551f08f65a34c96ccbfe6c8a668a814add5fde820da966d471012125b899c0862c92deace2b7"));
	assert(u1448164558285041256472795363994771356095096345450827416898150+u1448164558285041256472795363994771356095096345450827416898150 == UInt<201>("0x1cd696eeb94bdd6d79b9f72b2aa3e11ecb46992d997fcd914cc"));
	assert(u1448164558285041256472795363994771356095096345450827416898150-u1448164558285041256472795363994771356095096345450827416898150 == UInt<201>("0x0"));
	assert(u1448164558285041256472795363994771356095096345450827416898150*u1448164558285041256472795363994771356095096345450827416898150 == UInt<400>("0xcfe9393a28c0c20714bbecaa21e6a9679908e19a806e9ed7a91a4b46c0eb9ff9d497e1b4031fbe9bb79bd5f11e6b78e220a4"));
	assert(0 == (u1448164558285041256472795363994771356095096345450827416898150<u1448164558285041256472795363994771356095096345450827416898150));
	assert(1 == (u1448164558285041256472795363994771356095096345450827416898150<=u1448164558285041256472795363994771356095096345450827416898150));
	assert(0 == (u1448164558285041256472795363994771356095096345450827416898150>u1448164558285041256472795363994771356095096345450827416898150));
	assert(1 == (u1448164558285041256472795363994771356095096345450827416898150>=u1448164558285041256472795363994771356095096345450827416898150));
	assert(1 == (u1448164558285041256472795363994771356095096345450827416898150==u1448164558285041256472795363994771356095096345450827416898150));
	assert(0 == (u1448164558285041256472795363994771356095096345450827416898150!=u1448164558285041256472795363994771356095096345450827416898150));
	assert(u1448164558285041256472795363994771356095096345450827416898150.pad<3>() == UInt<200>("0xe6b4b775ca5eeb6bcdcfb959551f08f65a34c96ccbfe6c8a66"));
	assert(u1448164558285041256472795363994771356095096345450827416898150.shl<3>() == UInt<203>("0x735a5bbae52f75b5e6e7dcacaa8f847b2d1a64b665ff3645330"));
	assert(u1448164558285041256472795363994771356095096345450827416898150.shr<3>() == UInt<197>("0x1cd696eeb94bdd6d79b9f72b2aa3e11ecb46992d997fcd914c"));
	assert((u1448164558285041256472795363994771356095096345450827416898150&u1448164558285041256472795363994771356095096345450827416898150) == UInt<200>("0xe6b4b775ca5eeb6bcdcfb959551f08f65a34c96ccbfe6c8a66"));
	assert((u1448164558285041256472795363994771356095096345450827416898150|u1448164558285041256472795363994771356095096345450827416898150) == UInt<200>("0xe6b4b775ca5eeb6bcdcfb959551f08f65a34c96ccbfe6c8a66"));
	assert((u1448164558285041256472795363994771356095096345450827416898150^u1448164558285041256472795363994771356095096345450827416898150) == UInt<200>("0x0"));
	assert((u1448164558285041256472795363994771356095096345450827416898150.andr()) == UInt<1>("0x0"));
	assert((u1448164558285041256472795363994771356095096345450827416898150.orr()) == UInt<1>("0x1"));
	assert((u1448164558285041256472795363994771356095096345450827416898150.xorr()) == UInt<1>("0x0"));
	assert(u1448164558285041256472795363994771356095096345450827416898150.cat(u1448164558285041256472795363994771356095096345450827416898150) == UInt<400>("0xe6b4b775ca5eeb6bcdcfb959551f08f65a34c96ccbfe6c8a66e6b4b775ca5eeb6bcdcfb959551f08f65a34c96ccbfe6c8a66"));
	UInt<4> u8("0x8");
	UInt<4> u9("0x9");
	UInt<4> u10("0xa");
	UInt<4> u11("0xb");
	UInt<4> u12("0xc");
	UInt<4> u13("0xd");
	UInt<4> u14("0xe");
	UInt<4> u15("0xf");
	assert(u8+u8 == UInt<5>("0x10"));
	assert(u8-u8 == UInt<5>("0x0"));
	assert(u8*u8 == UInt<8>("0x40"));
	assert(0 == (u8<u8));
	assert(1 == (u8<=u8));
	assert(0 == (u8>u8));
	assert(1 == (u8>=u8));
	assert(1 == (u8==u8));
	assert(0 == (u8!=u8));
	assert(u8.pad<3>() == UInt<4>("0x8"));
	assert(u8.shl<3>() == UInt<7>("0x40"));
	assert(u8.shr<3>() == UInt<1>("0x1"));
	assert((u8&u8) == UInt<4>("0x8"));
	assert((u8|u8) == UInt<4>("0x8"));
	assert((u8^u8) == UInt<4>("0x0"));
	assert((u8.andr()) == UInt<1>("0x0"));
	assert((u8.orr()) == UInt<1>("0x1"));
	assert((u8.xorr()) == UInt<1>("0x1"));
	assert(u8.cat(u8) == UInt<8>("0x88"));
	assert(u8/u8 == UInt<4>("0x1"));
	assert(u8%u8 == UInt<4>("0x0"));
	assert(u8+u9 == UInt<5>("0x11"));
	assert(u8-u9 == UInt<5>("0x1f"));
	assert(u8*u9 == UInt<8>("0x48"));
	assert(1 == (u8<u9));
	assert(1 == (u8<=u9));
	assert(0 == (u8>u9));
	assert(0 == (u8>=u9));
	assert(0 == (u8==u9));
	assert(1 == (u8!=u9));
	assert(u8.pad<3>() == UInt<4>("0x8"));
	assert(u8.shl<3>() == UInt<7>("0x40"));
	assert(u8.shr<3>() == UInt<1>("0x1"));
	assert((u8&u9) == UInt<4>("0x8"));
	assert((u8|u9) == UInt<4>("0x9"));
	assert((u8^u9) == UInt<4>("0x1"));
	assert((u8.andr()) == UInt<1>("0x0"));
	assert((u8.orr()) == UInt<1>("0x1"));
	assert((u8.xorr()) == UInt<1>("0x1"));
	assert(u8.cat(u9) == UInt<8>("0x89"));
	assert(u8/u9 == UInt<4>("0x0"));
	assert(u8%u9 == UInt<4>("0x8"));
	assert(u8+u10 == UInt<5>("0x12"));
	assert(u8-u10 == UInt<5>("0x1e"));
	assert(u8*u10 == UInt<8>("0x50"));
	assert(1 == (u8<u10));
	assert(1 == (u8<=u10));
	assert(0 == (u8>u10));
	assert(0 == (u8>=u10));
	assert(0 == (u8==u10));
	assert(1 == (u8!=u10));
	assert(u8.pad<3>() == UInt<4>("0x8"));
	assert(u8.shl<3>() == UInt<7>("0x40"));
	assert(u8.shr<3>() == UInt<1>("0x1"));
	assert((u8&u10) == UInt<4>("0x8"));
	assert((u8|u10) == UInt<4>("0xa"));
	assert((u8^u10) == UInt<4>("0x2"));
	assert((u8.andr()) == UInt<1>("0x0"));
	assert((u8.orr()) == UInt<1>("0x1"));
	assert((u8.xorr()) == UInt<1>("0x1"));
	assert(u8.cat(u10) == UInt<8>("0x8a"));
	assert(u8/u10 == UInt<4>("0x0"));
	assert(u8%u10 == UInt<4>("0x8"));
	assert(u8+u11 == UInt<5>("0x13"));
	assert(u8-u11 == UInt<5>("0x1d"));
	assert(u8*u11 == UInt<8>("0x58"));
	assert(1 == (u8<u11));
	assert(1 == (u8<=u11));
	assert(0 == (u8>u11));
	assert(0 == (u8>=u11));
	assert(0 == (u8==u11));
	assert(1 == (u8!=u11));
	assert(u8.pad<3>() == UInt<4>("0x8"));
	assert(u8.shl<3>() == UInt<7>("0x40"));
	assert(u8.shr<3>() == UInt<1>("0x1"));
	assert((u8&u11) == UInt<4>("0x8"));
	assert((u8|u11) == UInt<4>("0xb"));
	assert((u8^u11) == UInt<4>("0x3"));
	assert((u8.andr()) == UInt<1>("0x0"));
	assert((u8.orr()) == UInt<1>("0x1"));
	assert((u8.xorr()) == UInt<1>("0x1"));
	assert(u8.cat(u11) == UInt<8>("0x8b"));
	assert(u8/u11 == UInt<4>("0x0"));
	assert(u8%u11 == UInt<4>("0x8"));
	assert(u8+u12 == UInt<5>("0x14"));
	assert(u8-u12 == UInt<5>("0x1c"));
	assert(u8*u12 == UInt<8>("0x60"));
	assert(1 == (u8<u12));
	assert(1 == (u8<=u12));
	assert(0 == (u8>u12));
	assert(0 == (u8>=u12));
	assert(0 == (u8==u12));
	assert(1 == (u8!=u12));
	assert(u8.pad<3>() == UInt<4>("0x8"));
	assert(u8.shl<3>() == UInt<7>("0x40"));
	assert(u8.shr<3>() == UInt<1>("0x1"));
	assert((u8&u12) == UInt<4>("0x8"));
	assert((u8|u12) == UInt<4>("0xc"));
	assert((u8^u12) == UInt<4>("0x4"));
	assert((u8.andr()) == UInt<1>("0x0"));
	assert((u8.orr()) == UInt<1>("0x1"));
	assert((u8.xorr()) == UInt<1>("0x1"));
	assert(u8.cat(u12) == UInt<8>("0x8c"));
	assert(u8/u12 == UInt<4>("0x0"));
	assert(u8%u12 == UInt<4>("0x8"));
	assert(u8+u13 == UInt<5>("0x15"));
	assert(u8-u13 == UInt<5>("0x1b"));
	assert(u8*u13 == UInt<8>("0x68"));
	assert(1 == (u8<u13));
	assert(1 == (u8<=u13));
	assert(0 == (u8>u13));
	assert(0 == (u8>=u13));
	assert(0 == (u8==u13));
	assert(1 == (u8!=u13));
	assert(u8.pad<3>() == UInt<4>("0x8"));
	assert(u8.shl<3>() == UInt<7>("0x40"));
	assert(u8.shr<3>() == UInt<1>("0x1"));
	assert((u8&u13) == UInt<4>("0x8"));
	assert((u8|u13) == UInt<4>("0xd"));
	assert((u8^u13) == UInt<4>("0x5"));
	assert((u8.andr()) == UInt<1>("0x0"));
	assert((u8.orr()) == UInt<1>("0x1"));
	assert((u8.xorr()) == UInt<1>("0x1"));
	assert(u8.cat(u13) == UInt<8>("0x8d"));
	assert(u8/u13 == UInt<4>("0x0"));
	assert(u8%u13 == UInt<4>("0x8"));
	assert(u8+u14 == UInt<5>("0x16"));
	assert(u8-u14 == UInt<5>("0x1a"));
	assert(u8*u14 == UInt<8>("0x70"));
	assert(1 == (u8<u14));
	assert(1 == (u8<=u14));
	assert(0 == (u8>u14));
	assert(0 == (u8>=u14));
	assert(0 == (u8==u14));
	assert(1 == (u8!=u14));
	assert(u8.pad<3>() == UInt<4>("0x8"));
	assert(u8.shl<3>() == UInt<7>("0x40"));
	assert(u8.shr<3>() == UInt<1>("0x1"));
	assert((u8&u14) == UInt<4>("0x8"));
	assert((u8|u14) == UInt<4>("0xe"));
	assert((u8^u14) == UInt<4>("0x6"));
	assert((u8.andr()) == UInt<1>("0x0"));
	assert((u8.orr()) == UInt<1>("0x1"));
	assert((u8.xorr()) == UInt<1>("0x1"));
	assert(u8.cat(u14) == UInt<8>("0x8e"));
	assert(u8/u14 == UInt<4>("0x0"));
	assert(u8%u14 == UInt<4>("0x8"));
	assert(u8+u15 == UInt<5>("0x17"));
	assert(u8-u15 == UInt<5>("0x19"));
	assert(u8*u15 == UInt<8>("0x78"));
	assert(1 == (u8<u15));
	assert(1 == (u8<=u15));
	assert(0 == (u8>u15));
	assert(0 == (u8>=u15));
	assert(0 == (u8==u15));
	assert(1 == (u8!=u15));
	assert(u8.pad<3>() == UInt<4>("0x8"));
	assert(u8.shl<3>() == UInt<7>("0x40"));
	assert(u8.shr<3>() == UInt<1>("0x1"));
	assert((u8&u15) == UInt<4>("0x8"));
	assert((u8|u15) == UInt<4>("0xf"));
	assert((u8^u15) == UInt<4>("0x7"));
	assert((u8.andr()) == UInt<1>("0x0"));
	assert((u8.orr()) == UInt<1>("0x1"));
	assert((u8.xorr()) == UInt<1>("0x1"));
	assert(u8.cat(u15) == UInt<8>("0x8f"));
	assert(u8/u15 == UInt<4>("0x0"));
	assert(u8%u15 == UInt<4>("0x8"));
	assert(u9+u8 == UInt<5>("0x11"));
	assert(u9-u8 == UInt<5>("0x1"));
	assert(u9*u8 == UInt<8>("0x48"));
	assert(0 == (u9<u8));
	assert(0 == (u9<=u8));
	assert(1 == (u9>u8));
	assert(1 == (u9>=u8));
	assert(0 == (u9==u8));
	assert(1 == (u9!=u8));
	assert(u9.pad<3>() == UInt<4>("0x9"));
	assert(u9.shl<3>() == UInt<7>("0x48"));
	assert(u9.shr<3>() == UInt<1>("0x1"));
	assert((u9&u8) == UInt<4>("0x8"));
	assert((u9|u8) == UInt<4>("0x9"));
	assert((u9^u8) == UInt<4>("0x1"));
	assert((u9.andr()) == UInt<1>("0x0"));
	assert((u9.orr()) == UInt<1>("0x1"));
	assert((u9.xorr()) == UInt<1>("0x0"));
	assert(u9.cat(u8) == UInt<8>("0x98"));
	assert(u9/u8 == UInt<4>("0x1"));
	assert(u9%u8 == UInt<4>("0x1"));
	assert(u9+u9 == UInt<5>("0x12"));
	assert(u9-u9 == UInt<5>("0x0"));
	assert(u9*u9 == UInt<8>("0x51"));
	assert(0 == (u9<u9));
	assert(1 == (u9<=u9));
	assert(0 == (u9>u9));
	assert(1 == (u9>=u9));
	assert(1 == (u9==u9));
	assert(0 == (u9!=u9));
	assert(u9.pad<3>() == UInt<4>("0x9"));
	assert(u9.shl<3>() == UInt<7>("0x48"));
	assert(u9.shr<3>() == UInt<1>("0x1"));
	assert((u9&u9) == UInt<4>("0x9"));
	assert((u9|u9) == UInt<4>("0x9"));
	assert((u9^u9) == UInt<4>("0x0"));
	assert((u9.andr()) == UInt<1>("0x0"));
	assert((u9.orr()) == UInt<1>("0x1"));
	assert((u9.xorr()) == UInt<1>("0x0"));
	assert(u9.cat(u9) == UInt<8>("0x99"));
	assert(u9/u9 == UInt<4>("0x1"));
	assert(u9%u9 == UInt<4>("0x0"));
	assert(u9+u10 == UInt<5>("0x13"));
	assert(u9-u10 == UInt<5>("0x1f"));
	assert(u9*u10 == UInt<8>("0x5a"));
	assert(1 == (u9<u10));
	assert(1 == (u9<=u10));
	assert(0 == (u9>u10));
	assert(0 == (u9>=u10));
	assert(0 == (u9==u10));
	assert(1 == (u9!=u10));
	assert(u9.pad<3>() == UInt<4>("0x9"));
	assert(u9.shl<3>() == UInt<7>("0x48"));
	assert(u9.shr<3>() == UInt<1>("0x1"));
	assert((u9&u10) == UInt<4>("0x8"));
	assert((u9|u10) == UInt<4>("0xb"));
	assert((u9^u10) == UInt<4>("0x3"));
	assert((u9.andr()) == UInt<1>("0x0"));
	assert((u9.orr()) == UInt<1>("0x1"));
	assert((u9.xorr()) == UInt<1>("0x0"));
	assert(u9.cat(u10) == UInt<8>("0x9a"));
	assert(u9/u10 == UInt<4>("0x0"));
	assert(u9%u10 == UInt<4>("0x9"));
	assert(u9+u11 == UInt<5>("0x14"));
	assert(u9-u11 == UInt<5>("0x1e"));
	assert(u9*u11 == UInt<8>("0x63"));
	assert(1 == (u9<u11));
	assert(1 == (u9<=u11));
	assert(0 == (u9>u11));
	assert(0 == (u9>=u11));
	assert(0 == (u9==u11));
	assert(1 == (u9!=u11));
	assert(u9.pad<3>() == UInt<4>("0x9"));
	assert(u9.shl<3>() == UInt<7>("0x48"));
	assert(u9.shr<3>() == UInt<1>("0x1"));
	assert((u9&u11) == UInt<4>("0x9"));
	assert((u9|u11) == UInt<4>("0xb"));
	assert((u9^u11) == UInt<4>("0x2"));
	assert((u9.andr()) == UInt<1>("0x0"));
	assert((u9.orr()) == UInt<1>("0x1"));
	assert((u9.xorr()) == UInt<1>("0x0"));
	assert(u9.cat(u11) == UInt<8>("0x9b"));
	assert(u9/u11 == UInt<4>("0x0"));
	assert(u9%u11 == UInt<4>("0x9"));
	assert(u9+u12 == UInt<5>("0x15"));
	assert(u9-u12 == UInt<5>("0x1d"));
	assert(u9*u12 == UInt<8>("0x6c"));
	assert(1 == (u9<u12));
	assert(1 == (u9<=u12));
	assert(0 == (u9>u12));
	assert(0 == (u9>=u12));
	assert(0 == (u9==u12));
	assert(1 == (u9!=u12));
	assert(u9.pad<3>() == UInt<4>("0x9"));
	assert(u9.shl<3>() == UInt<7>("0x48"));
	assert(u9.shr<3>() == UInt<1>("0x1"));
	assert((u9&u12) == UInt<4>("0x8"));
	assert((u9|u12) == UInt<4>("0xd"));
	assert((u9^u12) == UInt<4>("0x5"));
	assert((u9.andr()) == UInt<1>("0x0"));
	assert((u9.orr()) == UInt<1>("0x1"));
	assert((u9.xorr()) == UInt<1>("0x0"));
	assert(u9.cat(u12) == UInt<8>("0x9c"));
	assert(u9/u12 == UInt<4>("0x0"));
	assert(u9%u12 == UInt<4>("0x9"));
	assert(u9+u13 == UInt<5>("0x16"));
	assert(u9-u13 == UInt<5>("0x1c"));
	assert(u9*u13 == UInt<8>("0x75"));
	assert(1 == (u9<u13));
	assert(1 == (u9<=u13));
	assert(0 == (u9>u13));
	assert(0 == (u9>=u13));
	assert(0 == (u9==u13));
	assert(1 == (u9!=u13));
	assert(u9.pad<3>() == UInt<4>("0x9"));
	assert(u9.shl<3>() == UInt<7>("0x48"));
	assert(u9.shr<3>() == UInt<1>("0x1"));
	assert((u9&u13) == UInt<4>("0x9"));
	assert((u9|u13) == UInt<4>("0xd"));
	assert((u9^u13) == UInt<4>("0x4"));
	assert((u9.andr()) == UInt<1>("0x0"));
	assert((u9.orr()) == UInt<1>("0x1"));
	assert((u9.xorr()) == UInt<1>("0x0"));
	assert(u9.cat(u13) == UInt<8>("0x9d"));
	assert(u9/u13 == UInt<4>("0x0"));
	assert(u9%u13 == UInt<4>("0x9"));
	assert(u9+u14 == UInt<5>("0x17"));
	assert(u9-u14 == UInt<5>("0x1b"));
	assert(u9*u14 == UInt<8>("0x7e"));
	assert(1 == (u9<u14));
	assert(1 == (u9<=u14));
	assert(0 == (u9>u14));
	assert(0 == (u9>=u14));
	assert(0 == (u9==u14));
	assert(1 == (u9!=u14));
	assert(u9.pad<3>() == UInt<4>("0x9"));
	assert(u9.shl<3>() == UInt<7>("0x48"));
	assert(u9.shr<3>() == UInt<1>("0x1"));
	assert((u9&u14) == UInt<4>("0x8"));
	assert((u9|u14) == UInt<4>("0xf"));
	assert((u9^u14) == UInt<4>("0x7"));
	assert((u9.andr()) == UInt<1>("0x0"));
	assert((u9.orr()) == UInt<1>("0x1"));
	assert((u9.xorr()) == UInt<1>("0x0"));
	assert(u9.cat(u14) == UInt<8>("0x9e"));
	assert(u9/u14 == UInt<4>("0x0"));
	assert(u9%u14 == UInt<4>("0x9"));
	assert(u9+u15 == UInt<5>("0x18"));
	assert(u9-u15 == UInt<5>("0x1a"));
	assert(u9*u15 == UInt<8>("0x87"));
	assert(1 == (u9<u15));
	assert(1 == (u9<=u15));
	assert(0 == (u9>u15));
	assert(0 == (u9>=u15));
	assert(0 == (u9==u15));
	assert(1 == (u9!=u15));
	assert(u9.pad<3>() == UInt<4>("0x9"));
	assert(u9.shl<3>() == UInt<7>("0x48"));
	assert(u9.shr<3>() == UInt<1>("0x1"));
	assert((u9&u15) == UInt<4>("0x9"));
	assert((u9|u15) == UInt<4>("0xf"));
	assert((u9^u15) == UInt<4>("0x6"));
	assert((u9.andr()) == UInt<1>("0x0"));
	assert((u9.orr()) == UInt<1>("0x1"));
	assert((u9.xorr()) == UInt<1>("0x0"));
	assert(u9.cat(u15) == UInt<8>("0x9f"));
	assert(u9/u15 == UInt<4>("0x0"));
	assert(u9%u15 == UInt<4>("0x9"));
	assert(u10+u8 == UInt<5>("0x12"));
	assert(u10-u8 == UInt<5>("0x2"));
	assert(u10*u8 == UInt<8>("0x50"));
	assert(0 == (u10<u8));
	assert(0 == (u10<=u8));
	assert(1 == (u10>u8));
	assert(1 == (u10>=u8));
	assert(0 == (u10==u8));
	assert(1 == (u10!=u8));
	assert(u10.pad<3>() == UInt<4>("0xa"));
	assert(u10.shl<3>() == UInt<7>("0x50"));
	assert(u10.shr<3>() == UInt<1>("0x1"));
	assert((u10&u8) == UInt<4>("0x8"));
	assert((u10|u8) == UInt<4>("0xa"));
	assert((u10^u8) == UInt<4>("0x2"));
	assert((u10.andr()) == UInt<1>("0x0"));
	assert((u10.orr()) == UInt<1>("0x1"));
	assert((u10.xorr()) == UInt<1>("0x0"));
	assert(u10.cat(u8) == UInt<8>("0xa8"));
	assert(u10/u8 == UInt<4>("0x1"));
	assert(u10%u8 == UInt<4>("0x2"));
	assert(u10+u9 == UInt<5>("0x13"));
	assert(u10-u9 == UInt<5>("0x1"));
	assert(u10*u9 == UInt<8>("0x5a"));
	assert(0 == (u10<u9));
	assert(0 == (u10<=u9));
	assert(1 == (u10>u9));
	assert(1 == (u10>=u9));
	assert(0 == (u10==u9));
	assert(1 == (u10!=u9));
	assert(u10.pad<3>() == UInt<4>("0xa"));
	assert(u10.shl<3>() == UInt<7>("0x50"));
	assert(u10.shr<3>() == UInt<1>("0x1"));
	assert((u10&u9) == UInt<4>("0x8"));
	assert((u10|u9) == UInt<4>("0xb"));
	assert((u10^u9) == UInt<4>("0x3"));
	assert((u10.andr()) == UInt<1>("0x0"));
	assert((u10.orr()) == UInt<1>("0x1"));
	assert((u10.xorr()) == UInt<1>("0x0"));
	assert(u10.cat(u9) == UInt<8>("0xa9"));
	assert(u10/u9 == UInt<4>("0x1"));
	assert(u10%u9 == UInt<4>("0x1"));
	assert(u10+u10 == UInt<5>("0x14"));
	assert(u10-u10 == UInt<5>("0x0"));
	assert(u10*u10 == UInt<8>("0x64"));
	assert(0 == (u10<u10));
	assert(1 == (u10<=u10));
	assert(0 == (u10>u10));
	assert(1 == (u10>=u10));
	assert(1 == (u10==u10));
	assert(0 == (u10!=u10));
	assert(u10.pad<3>() == UInt<4>("0xa"));
	assert(u10.shl<3>() == UInt<7>("0x50"));
	assert(u10.shr<3>() == UInt<1>("0x1"));
	assert((u10&u10) == UInt<4>("0xa"));
	assert((u10|u10) == UInt<4>("0xa"));
	assert((u10^u10) == UInt<4>("0x0"));
	assert((u10.andr()) == UInt<1>("0x0"));
	assert((u10.orr()) == UInt<1>("0x1"));
	assert((u10.xorr()) == UInt<1>("0x0"));
	assert(u10.cat(u10) == UInt<8>("0xaa"));
	assert(u10/u10 == UInt<4>("0x1"));
	assert(u10%u10 == UInt<4>("0x0"));
	assert(u10+u11 == UInt<5>("0x15"));
	assert(u10-u11 == UInt<5>("0x1f"));
	assert(u10*u11 == UInt<8>("0x6e"));
	assert(1 == (u10<u11));
	assert(1 == (u10<=u11));
	assert(0 == (u10>u11));
	assert(0 == (u10>=u11));
	assert(0 == (u10==u11));
	assert(1 == (u10!=u11));
	assert(u10.pad<3>() == UInt<4>("0xa"));
	assert(u10.shl<3>() == UInt<7>("0x50"));
	assert(u10.shr<3>() == UInt<1>("0x1"));
	assert((u10&u11) == UInt<4>("0xa"));
	assert((u10|u11) == UInt<4>("0xb"));
	assert((u10^u11) == UInt<4>("0x1"));
	assert((u10.andr()) == UInt<1>("0x0"));
	assert((u10.orr()) == UInt<1>("0x1"));
	assert((u10.xorr()) == UInt<1>("0x0"));
	assert(u10.cat(u11) == UInt<8>("0xab"));
	assert(u10/u11 == UInt<4>("0x0"));
	assert(u10%u11 == UInt<4>("0xa"));
	assert(u10+u12 == UInt<5>("0x16"));
	assert(u10-u12 == UInt<5>("0x1e"));
	assert(u10*u12 == UInt<8>("0x78"));
	assert(1 == (u10<u12));
	assert(1 == (u10<=u12));
	assert(0 == (u10>u12));
	assert(0 == (u10>=u12));
	assert(0 == (u10==u12));
	assert(1 == (u10!=u12));
	assert(u10.pad<3>() == UInt<4>("0xa"));
	assert(u10.shl<3>() == UInt<7>("0x50"));
	assert(u10.shr<3>() == UInt<1>("0x1"));
	assert((u10&u12) == UInt<4>("0x8"));
	assert((u10|u12) == UInt<4>("0xe"));
	assert((u10^u12) == UInt<4>("0x6"));
	assert((u10.andr()) == UInt<1>("0x0"));
	assert((u10.orr()) == UInt<1>("0x1"));
	assert((u10.xorr()) == UInt<1>("0x0"));
	assert(u10.cat(u12) == UInt<8>("0xac"));
	assert(u10/u12 == UInt<4>("0x0"));
	assert(u10%u12 == UInt<4>("0xa"));
	assert(u10+u13 == UInt<5>("0x17"));
	assert(u10-u13 == UInt<5>("0x1d"));
	assert(u10*u13 == UInt<8>("0x82"));
	assert(1 == (u10<u13));
	assert(1 == (u10<=u13));
	assert(0 == (u10>u13));
	assert(0 == (u10>=u13));
	assert(0 == (u10==u13));
	assert(1 == (u10!=u13));
	assert(u10.pad<3>() == UInt<4>("0xa"));
	assert(u10.shl<3>() == UInt<7>("0x50"));
	assert(u10.shr<3>() == UInt<1>("0x1"));
	assert((u10&u13) == UInt<4>("0x8"));
	assert((u10|u13) == UInt<4>("0xf"));
	assert((u10^u13) == UInt<4>("0x7"));
	assert((u10.andr()) == UInt<1>("0x0"));
	assert((u10.orr()) == UInt<1>("0x1"));
	assert((u10.xorr()) == UInt<1>("0x0"));
	assert(u10.cat(u13) == UInt<8>("0xad"));
	assert(u10/u13 == UInt<4>("0x0"));
	assert(u10%u13 == UInt<4>("0xa"));
	assert(u10+u14 == UInt<5>("0x18"));
	assert(u10-u14 == UInt<5>("0x1c"));
	assert(u10*u14 == UInt<8>("0x8c"));
	assert(1 == (u10<u14));
	assert(1 == (u10<=u14));
	assert(0 == (u10>u14));
	assert(0 == (u10>=u14));
	assert(0 == (u10==u14));
	assert(1 == (u10!=u14));
	assert(u10.pad<3>() == UInt<4>("0xa"));
	assert(u10.shl<3>() == UInt<7>("0x50"));
	assert(u10.shr<3>() == UInt<1>("0x1"));
	assert((u10&u14) == UInt<4>("0xa"));
	assert((u10|u14) == UInt<4>("0xe"));
	assert((u10^u14) == UInt<4>("0x4"));
	assert((u10.andr()) == UInt<1>("0x0"));
	assert((u10.orr()) == UInt<1>("0x1"));
	assert((u10.xorr()) == UInt<1>("0x0"));
	assert(u10.cat(u14) == UInt<8>("0xae"));
	assert(u10/u14 == UInt<4>("0x0"));
	assert(u10%u14 == UInt<4>("0xa"));
	assert(u10+u15 == UInt<5>("0x19"));
	assert(u10-u15 == UInt<5>("0x1b"));
	assert(u10*u15 == UInt<8>("0x96"));
	assert(1 == (u10<u15));
	assert(1 == (u10<=u15));
	assert(0 == (u10>u15));
	assert(0 == (u10>=u15));
	assert(0 == (u10==u15));
	assert(1 == (u10!=u15));
	assert(u10.pad<3>() == UInt<4>("0xa"));
	assert(u10.shl<3>() == UInt<7>("0x50"));
	assert(u10.shr<3>() == UInt<1>("0x1"));
	assert((u10&u15) == UInt<4>("0xa"));
	assert((u10|u15) == UInt<4>("0xf"));
	assert((u10^u15) == UInt<4>("0x5"));
	assert((u10.andr()) == UInt<1>("0x0"));
	assert((u10.orr()) == UInt<1>("0x1"));
	assert((u10.xorr()) == UInt<1>("0x0"));
	assert(u10.cat(u15) == UInt<8>("0xaf"));
	assert(u10/u15 == UInt<4>("0x0"));
	assert(u10%u15 == UInt<4>("0xa"));
	assert(u11+u8 == UInt<5>("0x13"));
	assert(u11-u8 == UInt<5>("0x3"));
	assert(u11*u8 == UInt<8>("0x58"));
	assert(0 == (u11<u8));
	assert(0 == (u11<=u8));
	assert(1 == (u11>u8));
	assert(1 == (u11>=u8));
	assert(0 == (u11==u8));
	assert(1 == (u11!=u8));
	assert(u11.pad<3>() == UInt<4>("0xb"));
	assert(u11.shl<3>() == UInt<7>("0x58"));
	assert(u11.shr<3>() == UInt<1>("0x1"));
	assert((u11&u8) == UInt<4>("0x8"));
	assert((u11|u8) == UInt<4>("0xb"));
	assert((u11^u8) == UInt<4>("0x3"));
	assert((u11.andr()) == UInt<1>("0x0"));
	assert((u11.orr()) == UInt<1>("0x1"));
	assert((u11.xorr()) == UInt<1>("0x1"));
	assert(u11.cat(u8) == UInt<8>("0xb8"));
	assert(u11/u8 == UInt<4>("0x1"));
	assert(u11%u8 == UInt<4>("0x3"));
	assert(u11+u9 == UInt<5>("0x14"));
	assert(u11-u9 == UInt<5>("0x2"));
	assert(u11*u9 == UInt<8>("0x63"));
	assert(0 == (u11<u9));
	assert(0 == (u11<=u9));
	assert(1 == (u11>u9));
	assert(1 == (u11>=u9));
	assert(0 == (u11==u9));
	assert(1 == (u11!=u9));
	assert(u11.pad<3>() == UInt<4>("0xb"));
	assert(u11.shl<3>() == UInt<7>("0x58"));
	assert(u11.shr<3>() == UInt<1>("0x1"));
	assert((u11&u9) == UInt<4>("0x9"));
	assert((u11|u9) == UInt<4>("0xb"));
	assert((u11^u9) == UInt<4>("0x2"));
	assert((u11.andr()) == UInt<1>("0x0"));
	assert((u11.orr()) == UInt<1>("0x1"));
	assert((u11.xorr()) == UInt<1>("0x1"));
	assert(u11.cat(u9) == UInt<8>("0xb9"));
	assert(u11/u9 == UInt<4>("0x1"));
	assert(u11%u9 == UInt<4>("0x2"));
	assert(u11+u10 == UInt<5>("0x15"));
	assert(u11-u10 == UInt<5>("0x1"));
	assert(u11*u10 == UInt<8>("0x6e"));
	assert(0 == (u11<u10));
	assert(0 == (u11<=u10));
	assert(1 == (u11>u10));
	assert(1 == (u11>=u10));
	assert(0 == (u11==u10));
	assert(1 == (u11!=u10));
	assert(u11.pad<3>() == UInt<4>("0xb"));
	assert(u11.shl<3>() == UInt<7>("0x58"));
	assert(u11.shr<3>() == UInt<1>("0x1"));
	assert((u11&u10) == UInt<4>("0xa"));
	assert((u11|u10) == UInt<4>("0xb"));
	assert((u11^u10) == UInt<4>("0x1"));
	assert((u11.andr()) == UInt<1>("0x0"));
	assert((u11.orr()) == UInt<1>("0x1"));
	assert((u11.xorr()) == UInt<1>("0x1"));
	assert(u11.cat(u10) == UInt<8>("0xba"));
	assert(u11/u10 == UInt<4>("0x1"));
	assert(u11%u10 == UInt<4>("0x1"));
	assert(u11+u11 == UInt<5>("0x16"));
	assert(u11-u11 == UInt<5>("0x0"));
	assert(u11*u11 == UInt<8>("0x79"));
	assert(0 == (u11<u11));
	assert(1 == (u11<=u11));
	assert(0 == (u11>u11));
	assert(1 == (u11>=u11));
	assert(1 == (u11==u11));
	assert(0 == (u11!=u11));
	assert(u11.pad<3>() == UInt<4>("0xb"));
	assert(u11.shl<3>() == UInt<7>("0x58"));
	assert(u11.shr<3>() == UInt<1>("0x1"));
	assert((u11&u11) == UInt<4>("0xb"));
	assert((u11|u11) == UInt<4>("0xb"));
	assert((u11^u11) == UInt<4>("0x0"));
	assert((u11.andr()) == UInt<1>("0x0"));
	assert((u11.orr()) == UInt<1>("0x1"));
	assert((u11.xorr()) == UInt<1>("0x1"));
	assert(u11.cat(u11) == UInt<8>("0xbb"));
	assert(u11/u11 == UInt<4>("0x1"));
	assert(u11%u11 == UInt<4>("0x0"));
	assert(u11+u12 == UInt<5>("0x17"));
	assert(u11-u12 == UInt<5>("0x1f"));
	assert(u11*u12 == UInt<8>("0x84"));
	assert(1 == (u11<u12));
	assert(1 == (u11<=u12));
	assert(0 == (u11>u12));
	assert(0 == (u11>=u12));
	assert(0 == (u11==u12));
	assert(1 == (u11!=u12));
	assert(u11.pad<3>() == UInt<4>("0xb"));
	assert(u11.shl<3>() == UInt<7>("0x58"));
	assert(u11.shr<3>() == UInt<1>("0x1"));
	assert((u11&u12) == UInt<4>("0x8"));
	assert((u11|u12) == UInt<4>("0xf"));
	assert((u11^u12) == UInt<4>("0x7"));
	assert((u11.andr()) == UInt<1>("0x0"));
	assert((u11.orr()) == UInt<1>("0x1"));
	assert((u11.xorr()) == UInt<1>("0x1"));
	assert(u11.cat(u12) == UInt<8>("0xbc"));
	assert(u11/u12 == UInt<4>("0x0"));
	assert(u11%u12 == UInt<4>("0xb"));
	assert(u11+u13 == UInt<5>("0x18"));
	assert(u11-u13 == UInt<5>("0x1e"));
	assert(u11*u13 == UInt<8>("0x8f"));
	assert(1 == (u11<u13));
	assert(1 == (u11<=u13));
	assert(0 == (u11>u13));
	assert(0 == (u11>=u13));
	assert(0 == (u11==u13));
	assert(1 == (u11!=u13));
	assert(u11.pad<3>() == UInt<4>("0xb"));
	assert(u11.shl<3>() == UInt<7>("0x58"));
	assert(u11.shr<3>() == UInt<1>("0x1"));
	assert((u11&u13) == UInt<4>("0x9"));
	assert((u11|u13) == UInt<4>("0xf"));
	assert((u11^u13) == UInt<4>("0x6"));
	assert((u11.andr()) == UInt<1>("0x0"));
	assert((u11.orr()) == UInt<1>("0x1"));
	assert((u11.xorr()) == UInt<1>("0x1"));
	assert(u11.cat(u13) == UInt<8>("0xbd"));
	assert(u11/u13 == UInt<4>("0x0"));
	assert(u11%u13 == UInt<4>("0xb"));
	assert(u11+u14 == UInt<5>("0x19"));
	assert(u11-u14 == UInt<5>("0x1d"));
	assert(u11*u14 == UInt<8>("0x9a"));
	assert(1 == (u11<u14));
	assert(1 == (u11<=u14));
	assert(0 == (u11>u14));
	assert(0 == (u11>=u14));
	assert(0 == (u11==u14));
	assert(1 == (u11!=u14));
	assert(u11.pad<3>() == UInt<4>("0xb"));
	assert(u11.shl<3>() == UInt<7>("0x58"));
	assert(u11.shr<3>() == UInt<1>("0x1"));
	assert((u11&u14) == UInt<4>("0xa"));
	assert((u11|u14) == UInt<4>("0xf"));
	assert((u11^u14) == UInt<4>("0x5"));
	assert((u11.andr()) == UInt<1>("0x0"));
	assert((u11.orr()) == UInt<1>("0x1"));
	assert((u11.xorr()) == UInt<1>("0x1"));
	assert(u11.cat(u14) == UInt<8>("0xbe"));
	assert(u11/u14 == UInt<4>("0x0"));
	assert(u11%u14 == UInt<4>("0xb"));
	assert(u11+u15 == UInt<5>("0x1a"));
	assert(u11-u15 == UInt<5>("0x1c"));
	assert(u11*u15 == UInt<8>("0xa5"));
	assert(1 == (u11<u15));
	assert(1 == (u11<=u15));
	assert(0 == (u11>u15));
	assert(0 == (u11>=u15));
	assert(0 == (u11==u15));
	assert(1 == (u11!=u15));
	assert(u11.pad<3>() == UInt<4>("0xb"));
	assert(u11.shl<3>() == UInt<7>("0x58"));
	assert(u11.shr<3>() == UInt<1>("0x1"));
	assert((u11&u15) == UInt<4>("0xb"));
	assert((u11|u15) == UInt<4>("0xf"));
	assert((u11^u15) == UInt<4>("0x4"));
	assert((u11.andr()) == UInt<1>("0x0"));
	assert((u11.orr()) == UInt<1>("0x1"));
	assert((u11.xorr()) == UInt<1>("0x1"));
	assert(u11.cat(u15) == UInt<8>("0xbf"));
	assert(u11/u15 == UInt<4>("0x0"));
	assert(u11%u15 == UInt<4>("0xb"));
	assert(u12+u8 == UInt<5>("0x14"));
	assert(u12-u8 == UInt<5>("0x4"));
	assert(u12*u8 == UInt<8>("0x60"));
	assert(0 == (u12<u8));
	assert(0 == (u12<=u8));
	assert(1 == (u12>u8));
	assert(1 == (u12>=u8));
	assert(0 == (u12==u8));
	assert(1 == (u12!=u8));
	assert(u12.pad<3>() == UInt<4>("0xc"));
	assert(u12.shl<3>() == UInt<7>("0x60"));
	assert(u12.shr<3>() == UInt<1>("0x1"));
	assert((u12&u8) == UInt<4>("0x8"));
	assert((u12|u8) == UInt<4>("0xc"));
	assert((u12^u8) == UInt<4>("0x4"));
	assert((u12.andr()) == UInt<1>("0x0"));
	assert((u12.orr()) == UInt<1>("0x1"));
	assert((u12.xorr()) == UInt<1>("0x0"));
	assert(u12.cat(u8) == UInt<8>("0xc8"));
	assert(u12/u8 == UInt<4>("0x1"));
	assert(u12%u8 == UInt<4>("0x4"));
	assert(u12+u9 == UInt<5>("0x15"));
	assert(u12-u9 == UInt<5>("0x3"));
	assert(u12*u9 == UInt<8>("0x6c"));
	assert(0 == (u12<u9));
	assert(0 == (u12<=u9));
	assert(1 == (u12>u9));
	assert(1 == (u12>=u9));
	assert(0 == (u12==u9));
	assert(1 == (u12!=u9));
	assert(u12.pad<3>() == UInt<4>("0xc"));
	assert(u12.shl<3>() == UInt<7>("0x60"));
	assert(u12.shr<3>() == UInt<1>("0x1"));
	assert((u12&u9) == UInt<4>("0x8"));
	assert((u12|u9) == UInt<4>("0xd"));
	assert((u12^u9) == UInt<4>("0x5"));
	assert((u12.andr()) == UInt<1>("0x0"));
	assert((u12.orr()) == UInt<1>("0x1"));
	assert((u12.xorr()) == UInt<1>("0x0"));
	assert(u12.cat(u9) == UInt<8>("0xc9"));
	assert(u12/u9 == UInt<4>("0x1"));
	assert(u12%u9 == UInt<4>("0x3"));
	assert(u12+u10 == UInt<5>("0x16"));
	assert(u12-u10 == UInt<5>("0x2"));
	assert(u12*u10 == UInt<8>("0x78"));
	assert(0 == (u12<u10));
	assert(0 == (u12<=u10));
	assert(1 == (u12>u10));
	assert(1 == (u12>=u10));
	assert(0 == (u12==u10));
	assert(1 == (u12!=u10));
	assert(u12.pad<3>() == UInt<4>("0xc"));
	assert(u12.shl<3>() == UInt<7>("0x60"));
	assert(u12.shr<3>() == UInt<1>("0x1"));
	assert((u12&u10) == UInt<4>("0x8"));
	assert((u12|u10) == UInt<4>("0xe"));
	assert((u12^u10) == UInt<4>("0x6"));
	assert((u12.andr()) == UInt<1>("0x0"));
	assert((u12.orr()) == UInt<1>("0x1"));
	assert((u12.xorr()) == UInt<1>("0x0"));
	assert(u12.cat(u10) == UInt<8>("0xca"));
	assert(u12/u10 == UInt<4>("0x1"));
	assert(u12%u10 == UInt<4>("0x2"));
	assert(u12+u11 == UInt<5>("0x17"));
	assert(u12-u11 == UInt<5>("0x1"));
	assert(u12*u11 == UInt<8>("0x84"));
	assert(0 == (u12<u11));
	assert(0 == (u12<=u11));
	assert(1 == (u12>u11));
	assert(1 == (u12>=u11));
	assert(0 == (u12==u11));
	assert(1 == (u12!=u11));
	assert(u12.pad<3>() == UInt<4>("0xc"));
	assert(u12.shl<3>() == UInt<7>("0x60"));
	assert(u12.shr<3>() == UInt<1>("0x1"));
	assert((u12&u11) == UInt<4>("0x8"));
	assert((u12|u11) == UInt<4>("0xf"));
	assert((u12^u11) == UInt<4>("0x7"));
	assert((u12.andr()) == UInt<1>("0x0"));
	assert((u12.orr()) == UInt<1>("0x1"));
	assert((u12.xorr()) == UInt<1>("0x0"));
	assert(u12.cat(u11) == UInt<8>("0xcb"));
	assert(u12/u11 == UInt<4>("0x1"));
	assert(u12%u11 == UInt<4>("0x1"));
	assert(u12+u12 == UInt<5>("0x18"));
	assert(u12-u12 == UInt<5>("0x0"));
	assert(u12*u12 == UInt<8>("0x90"));
	assert(0 == (u12<u12));
	assert(1 == (u12<=u12));
	assert(0 == (u12>u12));
	assert(1 == (u12>=u12));
	assert(1 == (u12==u12));
	assert(0 == (u12!=u12));
	assert(u12.pad<3>() == UInt<4>("0xc"));
	assert(u12.shl<3>() == UInt<7>("0x60"));
	assert(u12.shr<3>() == UInt<1>("0x1"));
	assert((u12&u12) == UInt<4>("0xc"));
	assert((u12|u12) == UInt<4>("0xc"));
	assert((u12^u12) == UInt<4>("0x0"));
	assert((u12.andr()) == UInt<1>("0x0"));
	assert((u12.orr()) == UInt<1>("0x1"));
	assert((u12.xorr()) == UInt<1>("0x0"));
	assert(u12.cat(u12) == UInt<8>("0xcc"));
	assert(u12/u12 == UInt<4>("0x1"));
	assert(u12%u12 == UInt<4>("0x0"));
	assert(u12+u13 == UInt<5>("0x19"));
	assert(u12-u13 == UInt<5>("0x1f"));
	assert(u12*u13 == UInt<8>("0x9c"));
	assert(1 == (u12<u13));
	assert(1 == (u12<=u13));
	assert(0 == (u12>u13));
	assert(0 == (u12>=u13));
	assert(0 == (u12==u13));
	assert(1 == (u12!=u13));
	assert(u12.pad<3>() == UInt<4>("0xc"));
	assert(u12.shl<3>() == UInt<7>("0x60"));
	assert(u12.shr<3>() == UInt<1>("0x1"));
	assert((u12&u13) == UInt<4>("0xc"));
	assert((u12|u13) == UInt<4>("0xd"));
	assert((u12^u13) == UInt<4>("0x1"));
	assert((u12.andr()) == UInt<1>("0x0"));
	assert((u12.orr()) == UInt<1>("0x1"));
	assert((u12.xorr()) == UInt<1>("0x0"));
	assert(u12.cat(u13) == UInt<8>("0xcd"));
	assert(u12/u13 == UInt<4>("0x0"));
	assert(u12%u13 == UInt<4>("0xc"));
	assert(u12+u14 == UInt<5>("0x1a"));
	assert(u12-u14 == UInt<5>("0x1e"));
	assert(u12*u14 == UInt<8>("0xa8"));
	assert(1 == (u12<u14));
	assert(1 == (u12<=u14));
	assert(0 == (u12>u14));
	assert(0 == (u12>=u14));
	assert(0 == (u12==u14));
	assert(1 == (u12!=u14));
	assert(u12.pad<3>() == UInt<4>("0xc"));
	assert(u12.shl<3>() == UInt<7>("0x60"));
	assert(u12.shr<3>() == UInt<1>("0x1"));
	assert((u12&u14) == UInt<4>("0xc"));
	assert((u12|u14) == UInt<4>("0xe"));
	assert((u12^u14) == UInt<4>("0x2"));
	assert((u12.andr()) == UInt<1>("0x0"));
	assert((u12.orr()) == UInt<1>("0x1"));
	assert((u12.xorr()) == UInt<1>("0x0"));
	assert(u12.cat(u14) == UInt<8>("0xce"));
	assert(u12/u14 == UInt<4>("0x0"));
	assert(u12%u14 == UInt<4>("0xc"));
	assert(u12+u15 == UInt<5>("0x1b"));
	assert(u12-u15 == UInt<5>("0x1d"));
	assert(u12*u15 == UInt<8>("0xb4"));
	assert(1 == (u12<u15));
	assert(1 == (u12<=u15));
	assert(0 == (u12>u15));
	assert(0 == (u12>=u15));
	assert(0 == (u12==u15));
	assert(1 == (u12!=u15));
	assert(u12.pad<3>() == UInt<4>("0xc"));
	assert(u12.shl<3>() == UInt<7>("0x60"));
	assert(u12.shr<3>() == UInt<1>("0x1"));
	assert((u12&u15) == UInt<4>("0xc"));
	assert((u12|u15) == UInt<4>("0xf"));
	assert((u12^u15) == UInt<4>("0x3"));
	assert((u12.andr()) == UInt<1>("0x0"));
	assert((u12.orr()) == UInt<1>("0x1"));
	assert((u12.xorr()) == UInt<1>("0x0"));
	assert(u12.cat(u15) == UInt<8>("0xcf"));
	assert(u12/u15 == UInt<4>("0x0"));
	assert(u12%u15 == UInt<4>("0xc"));
	assert(u13+u8 == UInt<5>("0x15"));
	assert(u13-u8 == UInt<5>("0x5"));
	assert(u13*u8 == UInt<8>("0x68"));
	assert(0 == (u13<u8));
	assert(0 == (u13<=u8));
	assert(1 == (u13>u8));
	assert(1 == (u13>=u8));
	assert(0 == (u13==u8));
	assert(1 == (u13!=u8));
	assert(u13.pad<3>() == UInt<4>("0xd"));
	assert(u13.shl<3>() == UInt<7>("0x68"));
	assert(u13.shr<3>() == UInt<1>("0x1"));
	assert((u13&u8) == UInt<4>("0x8"));
	assert((u13|u8) == UInt<4>("0xd"));
	assert((u13^u8) == UInt<4>("0x5"));
	assert((u13.andr()) == UInt<1>("0x0"));
	assert((u13.orr()) == UInt<1>("0x1"));
	assert((u13.xorr()) == UInt<1>("0x1"));
	assert(u13.cat(u8) == UInt<8>("0xd8"));
	assert(u13/u8 == UInt<4>("0x1"));
	assert(u13%u8 == UInt<4>("0x5"));
	assert(u13+u9 == UInt<5>("0x16"));
	assert(u13-u9 == UInt<5>("0x4"));
	assert(u13*u9 == UInt<8>("0x75"));
	assert(0 == (u13<u9));
	assert(0 == (u13<=u9));
	assert(1 == (u13>u9));
	assert(1 == (u13>=u9));
	assert(0 == (u13==u9));
	assert(1 == (u13!=u9));
	assert(u13.pad<3>() == UInt<4>("0xd"));
	assert(u13.shl<3>() == UInt<7>("0x68"));
	assert(u13.shr<3>() == UInt<1>("0x1"));
	assert((u13&u9) == UInt<4>("0x9"));
	assert((u13|u9) == UInt<4>("0xd"));
	assert((u13^u9) == UInt<4>("0x4"));
	assert((u13.andr()) == UInt<1>("0x0"));
	assert((u13.orr()) == UInt<1>("0x1"));
	assert((u13.xorr()) == UInt<1>("0x1"));
	assert(u13.cat(u9) == UInt<8>("0xd9"));
	assert(u13/u9 == UInt<4>("0x1"));
	assert(u13%u9 == UInt<4>("0x4"));
	assert(u13+u10 == UInt<5>("0x17"));
	assert(u13-u10 == UInt<5>("0x3"));
	assert(u13*u10 == UInt<8>("0x82"));
	assert(0 == (u13<u10));
	assert(0 == (u13<=u10));
	assert(1 == (u13>u10));
	assert(1 == (u13>=u10));
	assert(0 == (u13==u10));
	assert(1 == (u13!=u10));
	assert(u13.pad<3>() == UInt<4>("0xd"));
	assert(u13.shl<3>() == UInt<7>("0x68"));
	assert(u13.shr<3>() == UInt<1>("0x1"));
	assert((u13&u10) == UInt<4>("0x8"));
	assert((u13|u10) == UInt<4>("0xf"));
	assert((u13^u10) == UInt<4>("0x7"));
	assert((u13.andr()) == UInt<1>("0x0"));
	assert((u13.orr()) == UInt<1>("0x1"));
	assert((u13.xorr()) == UInt<1>("0x1"));
	assert(u13.cat(u10) == UInt<8>("0xda"));
	assert(u13/u10 == UInt<4>("0x1"));
	assert(u13%u10 == UInt<4>("0x3"));
	assert(u13+u11 == UInt<5>("0x18"));
	assert(u13-u11 == UInt<5>("0x2"));
	assert(u13*u11 == UInt<8>("0x8f"));
	assert(0 == (u13<u11));
	assert(0 == (u13<=u11));
	assert(1 == (u13>u11));
	assert(1 == (u13>=u11));
	assert(0 == (u13==u11));
	assert(1 == (u13!=u11));
	assert(u13.pad<3>() == UInt<4>("0xd"));
	assert(u13.shl<3>() == UInt<7>("0x68"));
	assert(u13.shr<3>() == UInt<1>("0x1"));
	assert((u13&u11) == UInt<4>("0x9"));
	assert((u13|u11) == UInt<4>("0xf"));
	assert((u13^u11) == UInt<4>("0x6"));
	assert((u13.andr()) == UInt<1>("0x0"));
	assert((u13.orr()) == UInt<1>("0x1"));
	assert((u13.xorr()) == UInt<1>("0x1"));
	assert(u13.cat(u11) == UInt<8>("0xdb"));
	assert(u13/u11 == UInt<4>("0x1"));
	assert(u13%u11 == UInt<4>("0x2"));
	assert(u13+u12 == UInt<5>("0x19"));
	assert(u13-u12 == UInt<5>("0x1"));
	assert(u13*u12 == UInt<8>("0x9c"));
	assert(0 == (u13<u12));
	assert(0 == (u13<=u12));
	assert(1 == (u13>u12));
	assert(1 == (u13>=u12));
	assert(0 == (u13==u12));
	assert(1 == (u13!=u12));
	assert(u13.pad<3>() == UInt<4>("0xd"));
	assert(u13.shl<3>() == UInt<7>("0x68"));
	assert(u13.shr<3>() == UInt<1>("0x1"));
	assert((u13&u12) == UInt<4>("0xc"));
	assert((u13|u12) == UInt<4>("0xd"));
	assert((u13^u12) == UInt<4>("0x1"));
	assert((u13.andr()) == UInt<1>("0x0"));
	assert((u13.orr()) == UInt<1>("0x1"));
	assert((u13.xorr()) == UInt<1>("0x1"));
	assert(u13.cat(u12) == UInt<8>("0xdc"));
	assert(u13/u12 == UInt<4>("0x1"));
	assert(u13%u12 == UInt<4>("0x1"));
	assert(u13+u13 == UInt<5>("0x1a"));
	assert(u13-u13 == UInt<5>("0x0"));
	assert(u13*u13 == UInt<8>("0xa9"));
	assert(0 == (u13<u13));
	assert(1 == (u13<=u13));
	assert(0 == (u13>u13));
	assert(1 == (u13>=u13));
	assert(1 == (u13==u13));
	assert(0 == (u13!=u13));
	assert(u13.pad<3>() == UInt<4>("0xd"));
	assert(u13.shl<3>() == UInt<7>("0x68"));
	assert(u13.shr<3>() == UInt<1>("0x1"));
	assert((u13&u13) == UInt<4>("0xd"));
	assert((u13|u13) == UInt<4>("0xd"));
	assert((u13^u13) == UInt<4>("0x0"));
	assert((u13.andr()) == UInt<1>("0x0"));
	assert((u13.orr()) == UInt<1>("0x1"));
	assert((u13.xorr()) == UInt<1>("0x1"));
	assert(u13.cat(u13) == UInt<8>("0xdd"));
	assert(u13/u13 == UInt<4>("0x1"));
	assert(u13%u13 == UInt<4>("0x0"));
	assert(u13+u14 == UInt<5>("0x1b"));
	assert(u13-u14 == UInt<5>("0x1f"));
	assert(u13*u14 == UInt<8>("0xb6"));
	assert(1 == (u13<u14));
	assert(1 == (u13<=u14));
	assert(0 == (u13>u14));
	assert(0 == (u13>=u14));
	assert(0 == (u13==u14));
	assert(1 == (u13!=u14));
	assert(u13.pad<3>() == UInt<4>("0xd"));
	assert(u13.shl<3>() == UInt<7>("0x68"));
	assert(u13.shr<3>() == UInt<1>("0x1"));
	assert((u13&u14) == UInt<4>("0xc"));
	assert((u13|u14) == UInt<4>("0xf"));
	assert((u13^u14) == UInt<4>("0x3"));
	assert((u13.andr()) == UInt<1>("0x0"));
	assert((u13.orr()) == UInt<1>("0x1"));
	assert((u13.xorr()) == UInt<1>("0x1"));
	assert(u13.cat(u14) == UInt<8>("0xde"));
	assert(u13/u14 == UInt<4>("0x0"));
	assert(u13%u14 == UInt<4>("0xd"));
	assert(u13+u15 == UInt<5>("0x1c"));
	assert(u13-u15 == UInt<5>("0x1e"));
	assert(u13*u15 == UInt<8>("0xc3"));
	assert(1 == (u13<u15));
	assert(1 == (u13<=u15));
	assert(0 == (u13>u15));
	assert(0 == (u13>=u15));
	assert(0 == (u13==u15));
	assert(1 == (u13!=u15));
	assert(u13.pad<3>() == UInt<4>("0xd"));
	assert(u13.shl<3>() == UInt<7>("0x68"));
	assert(u13.shr<3>() == UInt<1>("0x1"));
	assert((u13&u15) == UInt<4>("0xd"));
	assert((u13|u15) == UInt<4>("0xf"));
	assert((u13^u15) == UInt<4>("0x2"));
	assert((u13.andr()) == UInt<1>("0x0"));
	assert((u13.orr()) == UInt<1>("0x1"));
	assert((u13.xorr()) == UInt<1>("0x1"));
	assert(u13.cat(u15) == UInt<8>("0xdf"));
	assert(u13/u15 == UInt<4>("0x0"));
	assert(u13%u15 == UInt<4>("0xd"));
	assert(u14+u8 == UInt<5>("0x16"));
	assert(u14-u8 == UInt<5>("0x6"));
	assert(u14*u8 == UInt<8>("0x70"));
	assert(0 == (u14<u8));
	assert(0 == (u14<=u8));
	assert(1 == (u14>u8));
	assert(1 == (u14>=u8));
	assert(0 == (u14==u8));
	assert(1 == (u14!=u8));
	assert(u14.pad<3>() == UInt<4>("0xe"));
	assert(u14.shl<3>() == UInt<7>("0x70"));
	assert(u14.shr<3>() == UInt<1>("0x1"));
	assert((u14&u8) == UInt<4>("0x8"));
	assert((u14|u8) == UInt<4>("0xe"));
	assert((u14^u8) == UInt<4>("0x6"));
	assert((u14.andr()) == UInt<1>("0x0"));
	assert((u14.orr()) == UInt<1>("0x1"));
	assert((u14.xorr()) == UInt<1>("0x1"));
	assert(u14.cat(u8) == UInt<8>("0xe8"));
	assert(u14/u8 == UInt<4>("0x1"));
	assert(u14%u8 == UInt<4>("0x6"));
	assert(u14+u9 == UInt<5>("0x17"));
	assert(u14-u9 == UInt<5>("0x5"));
	assert(u14*u9 == UInt<8>("0x7e"));
	assert(0 == (u14<u9));
	assert(0 == (u14<=u9));
	assert(1 == (u14>u9));
	assert(1 == (u14>=u9));
	assert(0 == (u14==u9));
	assert(1 == (u14!=u9));
	assert(u14.pad<3>() == UInt<4>("0xe"));
	assert(u14.shl<3>() == UInt<7>("0x70"));
	assert(u14.shr<3>() == UInt<1>("0x1"));
	assert((u14&u9) == UInt<4>("0x8"));
	assert((u14|u9) == UInt<4>("0xf"));
	assert((u14^u9) == UInt<4>("0x7"));
	assert((u14.andr()) == UInt<1>("0x0"));
	assert((u14.orr()) == UInt<1>("0x1"));
	assert((u14.xorr()) == UInt<1>("0x1"));
	assert(u14.cat(u9) == UInt<8>("0xe9"));
	assert(u14/u9 == UInt<4>("0x1"));
	assert(u14%u9 == UInt<4>("0x5"));
	assert(u14+u10 == UInt<5>("0x18"));
	assert(u14-u10 == UInt<5>("0x4"));
	assert(u14*u10 == UInt<8>("0x8c"));
	assert(0 == (u14<u10));
	assert(0 == (u14<=u10));
	assert(1 == (u14>u10));
	assert(1 == (u14>=u10));
	assert(0 == (u14==u10));
	assert(1 == (u14!=u10));
	assert(u14.pad<3>() == UInt<4>("0xe"));
	assert(u14.shl<3>() == UInt<7>("0x70"));
	assert(u14.shr<3>() == UInt<1>("0x1"));
	assert((u14&u10) == UInt<4>("0xa"));
	assert((u14|u10) == UInt<4>("0xe"));
	assert((u14^u10) == UInt<4>("0x4"));
	assert((u14.andr()) == UInt<1>("0x0"));
	assert((u14.orr()) == UInt<1>("0x1"));
	assert((u14.xorr()) == UInt<1>("0x1"));
	assert(u14.cat(u10) == UInt<8>("0xea"));
	assert(u14/u10 == UInt<4>("0x1"));
	assert(u14%u10 == UInt<4>("0x4"));
	assert(u14+u11 == UInt<5>("0x19"));
	assert(u14-u11 == UInt<5>("0x3"));
	assert(u14*u11 == UInt<8>("0x9a"));
	assert(0 == (u14<u11));
	assert(0 == (u14<=u11));
	assert(1 == (u14>u11));
	assert(1 == (u14>=u11));
	assert(0 == (u14==u11));
	assert(1 == (u14!=u11));
	assert(u14.pad<3>() == UInt<4>("0xe"));
	assert(u14.shl<3>() == UInt<7>("0x70"));
	assert(u14.shr<3>() == UInt<1>("0x1"));
	assert((u14&u11) == UInt<4>("0xa"));
	assert((u14|u11) == UInt<4>("0xf"));
	assert((u14^u11) == UInt<4>("0x5"));
	assert((u14.andr()) == UInt<1>("0x0"));
	assert((u14.orr()) == UInt<1>("0x1"));
	assert((u14.xorr()) == UInt<1>("0x1"));
	assert(u14.cat(u11) == UInt<8>("0xeb"));
	assert(u14/u11 == UInt<4>("0x1"));
	assert(u14%u11 == UInt<4>("0x3"));
	assert(u14+u12 == UInt<5>("0x1a"));
	assert(u14-u12 == UInt<5>("0x2"));
	assert(u14*u12 == UInt<8>("0xa8"));
	assert(0 == (u14<u12));
	assert(0 == (u14<=u12));
	assert(1 == (u14>u12));
	assert(1 == (u14>=u12));
	assert(0 == (u14==u12));
	assert(1 == (u14!=u12));
	assert(u14.pad<3>() == UInt<4>("0xe"));
	assert(u14.shl<3>() == UInt<7>("0x70"));
	assert(u14.shr<3>() == UInt<1>("0x1"));
	assert((u14&u12) == UInt<4>("0xc"));
	assert((u14|u12) == UInt<4>("0xe"));
	assert((u14^u12) == UInt<4>("0x2"));
	assert((u14.andr()) == UInt<1>("0x0"));
	assert((u14.orr()) == UInt<1>("0x1"));
	assert((u14.xorr()) == UInt<1>("0x1"));
	assert(u14.cat(u12) == UInt<8>("0xec"));
	assert(u14/u12 == UInt<4>("0x1"));
	assert(u14%u12 == UInt<4>("0x2"));
	assert(u14+u13 == UInt<5>("0x1b"));
	assert(u14-u13 == UInt<5>("0x1"));
	assert(u14*u13 == UInt<8>("0xb6"));
	assert(0 == (u14<u13));
	assert(0 == (u14<=u13));
	assert(1 == (u14>u13));
	assert(1 == (u14>=u13));
	assert(0 == (u14==u13));
	assert(1 == (u14!=u13));
	assert(u14.pad<3>() == UInt<4>("0xe"));
	assert(u14.shl<3>() == UInt<7>("0x70"));
	assert(u14.shr<3>() == UInt<1>("0x1"));
	assert((u14&u13) == UInt<4>("0xc"));
	assert((u14|u13) == UInt<4>("0xf"));
	assert((u14^u13) == UInt<4>("0x3"));
	assert((u14.andr()) == UInt<1>("0x0"));
	assert((u14.orr()) == UInt<1>("0x1"));
	assert((u14.xorr()) == UInt<1>("0x1"));
	assert(u14.cat(u13) == UInt<8>("0xed"));
	assert(u14/u13 == UInt<4>("0x1"));
	assert(u14%u13 == UInt<4>("0x1"));
	assert(u14+u14 == UInt<5>("0x1c"));
	assert(u14-u14 == UInt<5>("0x0"));
	assert(u14*u14 == UInt<8>("0xc4"));
	assert(0 == (u14<u14));
	assert(1 == (u14<=u14));
	assert(0 == (u14>u14));
	assert(1 == (u14>=u14));
	assert(1 == (u14==u14));
	assert(0 == (u14!=u14));
	assert(u14.pad<3>() == UInt<4>("0xe"));
	assert(u14.shl<3>() == UInt<7>("0x70"));
	assert(u14.shr<3>() == UInt<1>("0x1"));
	assert((u14&u14) == UInt<4>("0xe"));
	assert((u14|u14) == UInt<4>("0xe"));
	assert((u14^u14) == UInt<4>("0x0"));
	assert((u14.andr()) == UInt<1>("0x0"));
	assert((u14.orr()) == UInt<1>("0x1"));
	assert((u14.xorr()) == UInt<1>("0x1"));
	assert(u14.cat(u14) == UInt<8>("0xee"));
	assert(u14/u14 == UInt<4>("0x1"));
	assert(u14%u14 == UInt<4>("0x0"));
	assert(u14+u15 == UInt<5>("0x1d"));
	assert(u14-u15 == UInt<5>("0x1f"));
	assert(u14*u15 == UInt<8>("0xd2"));
	assert(1 == (u14<u15));
	assert(1 == (u14<=u15));
	assert(0 == (u14>u15));
	assert(0 == (u14>=u15));
	assert(0 == (u14==u15));
	assert(1 == (u14!=u15));
	assert(u14.pad<3>() == UInt<4>("0xe"));
	assert(u14.shl<3>() == UInt<7>("0x70"));
	assert(u14.shr<3>() == UInt<1>("0x1"));
	assert((u14&u15) == UInt<4>("0xe"));
	assert((u14|u15) == UInt<4>("0xf"));
	assert((u14^u15) == UInt<4>("0x1"));
	assert((u14.andr()) == UInt<1>("0x0"));
	assert((u14.orr()) == UInt<1>("0x1"));
	assert((u14.xorr()) == UInt<1>("0x1"));
	assert(u14.cat(u15) == UInt<8>("0xef"));
	assert(u14/u15 == UInt<4>("0x0"));
	assert(u14%u15 == UInt<4>("0xe"));
	assert(u15+u8 == UInt<5>("0x17"));
	assert(u15-u8 == UInt<5>("0x7"));
	assert(u15*u8 == UInt<8>("0x78"));
	assert(0 == (u15<u8));
	assert(0 == (u15<=u8));
	assert(1 == (u15>u8));
	assert(1 == (u15>=u8));
	assert(0 == (u15==u8));
	assert(1 == (u15!=u8));
	assert(u15.pad<3>() == UInt<4>("0xf"));
	assert(u15.shl<3>() == UInt<7>("0x78"));
	assert(u15.shr<3>() == UInt<1>("0x1"));
	assert((u15&u8) == UInt<4>("0x8"));
	assert((u15|u8) == UInt<4>("0xf"));
	assert((u15^u8) == UInt<4>("0x7"));
	assert((u15.andr()) == UInt<1>("0x1"));
	assert((u15.orr()) == UInt<1>("0x1"));
	assert((u15.xorr()) == UInt<1>("0x0"));
	assert(u15.cat(u8) == UInt<8>("0xf8"));
	assert(u15/u8 == UInt<4>("0x1"));
	assert(u15%u8 == UInt<4>("0x7"));
	assert(u15+u9 == UInt<5>("0x18"));
	assert(u15-u9 == UInt<5>("0x6"));
	assert(u15*u9 == UInt<8>("0x87"));
	assert(0 == (u15<u9));
	assert(0 == (u15<=u9));
	assert(1 == (u15>u9));
	assert(1 == (u15>=u9));
	assert(0 == (u15==u9));
	assert(1 == (u15!=u9));
	assert(u15.pad<3>() == UInt<4>("0xf"));
	assert(u15.shl<3>() == UInt<7>("0x78"));
	assert(u15.shr<3>() == UInt<1>("0x1"));
	assert((u15&u9) == UInt<4>("0x9"));
	assert((u15|u9) == UInt<4>("0xf"));
	assert((u15^u9) == UInt<4>("0x6"));
	assert((u15.andr()) == UInt<1>("0x1"));
	assert((u15.orr()) == UInt<1>("0x1"));
	assert((u15.xorr()) == UInt<1>("0x0"));
	assert(u15.cat(u9) == UInt<8>("0xf9"));
	assert(u15/u9 == UInt<4>("0x1"));
	assert(u15%u9 == UInt<4>("0x6"));
	assert(u15+u10 == UInt<5>("0x19"));
	assert(u15-u10 == UInt<5>("0x5"));
	assert(u15*u10 == UInt<8>("0x96"));
	assert(0 == (u15<u10));
	assert(0 == (u15<=u10));
	assert(1 == (u15>u10));
	assert(1 == (u15>=u10));
	assert(0 == (u15==u10));
	assert(1 == (u15!=u10));
	assert(u15.pad<3>() == UInt<4>("0xf"));
	assert(u15.shl<3>() == UInt<7>("0x78"));
	assert(u15.shr<3>() == UInt<1>("0x1"));
	assert((u15&u10) == UInt<4>("0xa"));
	assert((u15|u10) == UInt<4>("0xf"));
	assert((u15^u10) == UInt<4>("0x5"));
	assert((u15.andr()) == UInt<1>("0x1"));
	assert((u15.orr()) == UInt<1>("0x1"));
	assert((u15.xorr()) == UInt<1>("0x0"));
	assert(u15.cat(u10) == UInt<8>("0xfa"));
	assert(u15/u10 == UInt<4>("0x1"));
	assert(u15%u10 == UInt<4>("0x5"));
	assert(u15+u11 == UInt<5>("0x1a"));
	assert(u15-u11 == UInt<5>("0x4"));
	assert(u15*u11 == UInt<8>("0xa5"));
	assert(0 == (u15<u11));
	assert(0 == (u15<=u11));
	assert(1 == (u15>u11));
	assert(1 == (u15>=u11));
	assert(0 == (u15==u11));
	assert(1 == (u15!=u11));
	assert(u15.pad<3>() == UInt<4>("0xf"));
	assert(u15.shl<3>() == UInt<7>("0x78"));
	assert(u15.shr<3>() == UInt<1>("0x1"));
	assert((u15&u11) == UInt<4>("0xb"));
	assert((u15|u11) == UInt<4>("0xf"));
	assert((u15^u11) == UInt<4>("0x4"));
	assert((u15.andr()) == UInt<1>("0x1"));
	assert((u15.orr()) == UInt<1>("0x1"));
	assert((u15.xorr()) == UInt<1>("0x0"));
	assert(u15.cat(u11) == UInt<8>("0xfb"));
	assert(u15/u11 == UInt<4>("0x1"));
	assert(u15%u11 == UInt<4>("0x4"));
	assert(u15+u12 == UInt<5>("0x1b"));
	assert(u15-u12 == UInt<5>("0x3"));
	assert(u15*u12 == UInt<8>("0xb4"));
	assert(0 == (u15<u12));
	assert(0 == (u15<=u12));
	assert(1 == (u15>u12));
	assert(1 == (u15>=u12));
	assert(0 == (u15==u12));
	assert(1 == (u15!=u12));
	assert(u15.pad<3>() == UInt<4>("0xf"));
	assert(u15.shl<3>() == UInt<7>("0x78"));
	assert(u15.shr<3>() == UInt<1>("0x1"));
	assert((u15&u12) == UInt<4>("0xc"));
	assert((u15|u12) == UInt<4>("0xf"));
	assert((u15^u12) == UInt<4>("0x3"));
	assert((u15.andr()) == UInt<1>("0x1"));
	assert((u15.orr()) == UInt<1>("0x1"));
	assert((u15.xorr()) == UInt<1>("0x0"));
	assert(u15.cat(u12) == UInt<8>("0xfc"));
	assert(u15/u12 == UInt<4>("0x1"));
	assert(u15%u12 == UInt<4>("0x3"));
	assert(u15+u13 == UInt<5>("0x1c"));
	assert(u15-u13 == UInt<5>("0x2"));
	assert(u15*u13 == UInt<8>("0xc3"));
	assert(0 == (u15<u13));
	assert(0 == (u15<=u13));
	assert(1 == (u15>u13));
	assert(1 == (u15>=u13));
	assert(0 == (u15==u13));
	assert(1 == (u15!=u13));
	assert(u15.pad<3>() == UInt<4>("0xf"));
	assert(u15.shl<3>() == UInt<7>("0x78"));
	assert(u15.shr<3>() == UInt<1>("0x1"));
	assert((u15&u13) == UInt<4>("0xd"));
	assert((u15|u13) == UInt<4>("0xf"));
	assert((u15^u13) == UInt<4>("0x2"));
	assert((u15.andr()) == UInt<1>("0x1"));
	assert((u15.orr()) == UInt<1>("0x1"));
	assert((u15.xorr()) == UInt<1>("0x0"));
	assert(u15.cat(u13) == UInt<8>("0xfd"));
	assert(u15/u13 == UInt<4>("0x1"));
	assert(u15%u13 == UInt<4>("0x2"));
	assert(u15+u14 == UInt<5>("0x1d"));
	assert(u15-u14 == UInt<5>("0x1"));
	assert(u15*u14 == UInt<8>("0xd2"));
	assert(0 == (u15<u14));
	assert(0 == (u15<=u14));
	assert(1 == (u15>u14));
	assert(1 == (u15>=u14));
	assert(0 == (u15==u14));
	assert(1 == (u15!=u14));
	assert(u15.pad<3>() == UInt<4>("0xf"));
	assert(u15.shl<3>() == UInt<7>("0x78"));
	assert(u15.shr<3>() == UInt<1>("0x1"));
	assert((u15&u14) == UInt<4>("0xe"));
	assert((u15|u14) == UInt<4>("0xf"));
	assert((u15^u14) == UInt<4>("0x1"));
	assert((u15.andr()) == UInt<1>("0x1"));
	assert((u15.orr()) == UInt<1>("0x1"));
	assert((u15.xorr()) == UInt<1>("0x0"));
	assert(u15.cat(u14) == UInt<8>("0xfe"));
	assert(u15/u14 == UInt<4>("0x1"));
	assert(u15%u14 == UInt<4>("0x1"));
	assert(u15+u15 == UInt<5>("0x1e"));
	assert(u15-u15 == UInt<5>("0x0"));
	assert(u15*u15 == UInt<8>("0xe1"));
	assert(0 == (u15<u15));
	assert(1 == (u15<=u15));
	assert(0 == (u15>u15));
	assert(1 == (u15>=u15));
	assert(1 == (u15==u15));
	assert(0 == (u15!=u15));
	assert(u15.pad<3>() == UInt<4>("0xf"));
	assert(u15.shl<3>() == UInt<7>("0x78"));
	assert(u15.shr<3>() == UInt<1>("0x1"));
	assert((u15&u15) == UInt<4>("0xf"));
	assert((u15|u15) == UInt<4>("0xf"));
	assert((u15^u15) == UInt<4>("0x0"));
	assert((u15.andr()) == UInt<1>("0x1"));
	assert((u15.orr()) == UInt<1>("0x1"));
	assert((u15.xorr()) == UInt<1>("0x0"));
	assert(u15.cat(u15) == UInt<8>("0xff"));
	assert(u15/u15 == UInt<4>("0x1"));
	assert(u15%u15 == UInt<4>("0x0"));
	assert((u8 << UInt<3>("0x4")) == UInt<11>("0x80"));
	assert((u8 >> UInt<3>("0x4")) == UInt<4>("0x0"));
	assert(~u8 == UInt<4>("0x7"));
	assert((u9 << UInt<3>("0x4")) == UInt<11>("0x90"));
	assert((u9 >> UInt<3>("0x4")) == UInt<4>("0x0"));
	assert(~u9 == UInt<4>("0x6"));
	assert((u10 << UInt<3>("0x4")) == UInt<11>("0xa0"));
	assert((u10 >> UInt<3>("0x4")) == UInt<4>("0x0"));
	assert(~u10 == UInt<4>("0x5"));
	assert((u11 << UInt<3>("0x4")) == UInt<11>("0xb0"));
	assert((u11 >> UInt<3>("0x4")) == UInt<4>("0x0"));
	assert(~u11 == UInt<4>("0x4"));
	assert((u12 << UInt<3>("0x4")) == UInt<11>("0xc0"));
	assert((u12 >> UInt<3>("0x4")) == UInt<4>("0x0"));
	assert(~u12 == UInt<4>("0x3"));
	assert((u13 << UInt<3>("0x4")) == UInt<11>("0xd0"));
	assert((u13 >> UInt<3>("0x4")) == UInt<4>("0x0"));
	assert(~u13 == UInt<4>("0x2"));
	assert((u14 << UInt<3>("0x4")) == UInt<11>("0xe0"));
	assert((u14 >> UInt<3>("0x4")) == UInt<4>("0x0"));
	assert(~u14 == UInt<4>("0x1"));
	assert((u15 << UInt<3>("0x4")) == UInt<11>("0xf0"));
	assert((u15 >> UInt<3>("0x4")) == UInt<4>("0x0"));
	assert(~u15 == UInt<4>("0x0"));

	cout << (u8 << UInt<5>("0x1f")) << endl;

	return 0;
}